CREATE PROCEDURE QBR.[usp_TBL_DELAY_ORDERS]

AS
	SET XACT_ABORT, NOCOUNT ON;
BEGIN TRY

	DECLARE @EVENTID INT;

	INSERT INTO [LOG].tbl_StoreProc
    (
		[EVENTNAME],
		[EVENTSTART],
		[EVENTTYPE],
		[EVENTDESCRIPTION]
	)
	VALUES
	(
		'EDW_VWMC.[usp_TBL_DELAY_ORDERS]',
		CAST(GETDATE() AS DATETIME),
		'STORE PROC',
		'SINGLE_INGESTION'
	)

	SET @EVENTID = SCOPE_IDENTITY();

	BEGIN TRANSACTION

	MERGE INTO QBR.TBL_DELAY_ORDERS AS target
	USING (SELECT CAST(GETDATE() AS DATE) AS UPDATE_DT, DOCUMENT_NUMBER,NOTES_ID,NOTE_TEXT,USER_ID,LAST_MODIFIED_DT,ACNA,COMP_DT FROM LZ.TBL_DELAY_ORDERS) AS source
	ON target.DOCUMENT_NUMBER = source.DOCUMENT_NUMBER
	and target.NOTES_ID = source.NOTES_ID

	WHEN MATCHED THEN UPDATE SET
	UPDATE_DT = source.UPDATE_DT
	,NOTE_TEXT = source.NOTE_TEXT
	,USER_ID = source.USER_ID
	,LAST_MODIFIED_DT = source.LAST_MODIFIED_DT
	,ACNA = source.ACNA
	,COMP_DT = source.COMP_DT

	WHEN NOT MATCHED THEN INSERT (UPDATE_DT,DOCUMENT_NUMBER,NOTES_ID,NOTE_TEXT,USER_ID,LAST_MODIFIED_DT,ACNA,COMP_DT) 
	VALUES (source.UPDATE_DT,source.DOCUMENT_NUMBER,source.NOTES_ID,source.NOTE_TEXT,source.USER_ID,source.LAST_MODIFIED_DT,source.ACNA,source.COMP_DT);
	
	COMMIT TRANSACTION

	UPDATE L
    SET L.EVENTEND = CAST(GETDATE() AS DATETIME)
    FROM LOG.tbl_StoreProc L
    WHERE L.EVENTID = @EventID;

END TRY
BEGIN CATCH
	IF @@trancount > 0 ROLLBACK TRANSACTION
	EXEC usp_error_handler
	RETURN 55555
END CATCH
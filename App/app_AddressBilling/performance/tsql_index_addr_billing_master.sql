USE [WAD_PRD_Integration];
GO

-------------------------------------------------------------------------------
-- 1) Check and fix [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
-------------------------------------------------------------------------------
IF EXISTS (
    SELECT 1 
    FROM [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    WHERE LEN([UniqueID]) > 50
)
BEGIN
    PRINT 'ERROR: Some UniqueID values exceed 50 chars. Fix or trim them first.';
    RETURN;
END
IF EXISTS (
    SELECT 1 
    FROM [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    WHERE LEN([PRICING_TIER]) > 50
)
BEGIN
    PRINT 'ERROR: Some PRICING_TIER values exceed 50 chars. Fix or trim them first.';
    RETURN;
END
IF EXISTS (
    SELECT 1 
    FROM [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    WHERE LEN([ADDRESS]) > 200
)
BEGIN
    PRINT 'ERROR: Some ADDRESS values exceed 200 chars. Fix or trim them first.';
    RETURN;
END
IF EXISTS (
    SELECT 1 
    FROM [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    WHERE LEN([CITY]) > 100
)
BEGIN
    PRINT 'ERROR: Some CITY values exceed 100 chars. Fix or trim them first.';
    RETURN;
END
IF EXISTS (
    SELECT 1 
    FROM [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    WHERE LEN([STATE]) > 50
)
BEGIN
    PRINT 'ERROR: Some STATE values exceed 50 chars. Fix or trim them first.';
    RETURN;
END
IF EXISTS (
    SELECT 1 
    FROM [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    WHERE LEN([ZIP]) > 20
)
BEGIN
    PRINT 'ERROR: Some ZIP values exceed 20 chars. Fix or trim them first.';
    RETURN;
END

-- Now that we are sure data fits, alter columns from VARCHAR(MAX) to fixed lengths
ALTER TABLE [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    ALTER COLUMN [UniqueID]       VARCHAR(50) NULL;
ALTER TABLE [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    ALTER COLUMN [PRICING_TIER]   VARCHAR(50) NULL;
ALTER TABLE [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    ALTER COLUMN [ADDRESS]        VARCHAR(200) NULL;
ALTER TABLE [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    ALTER COLUMN [CITY]           VARCHAR(100) NULL;
ALTER TABLE [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    ALTER COLUMN [STATE]          VARCHAR(50)  NULL;
ALTER TABLE [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    ALTER COLUMN [ZIP]            VARCHAR(20)  NULL;

-- If you also want to reduce these columns:
ALTER TABLE [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    ALTER COLUMN [LIT]            VARCHAR(50)  NULL;
ALTER TABLE [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    ALTER COLUMN [EthernetLit]    VARCHAR(50)  NULL;
ALTER TABLE [ADDRESS_BILLING].[ADDR_BILLING_MASTER]
    ALTER COLUMN [SWC]            VARCHAR(50)  NULL;

PRINT 'ADDR_BILLING_MASTER columns altered successfully.';

-- Create/replace indexes on UniqueID & PRICING_TIER
IF NOT EXISTS (
    SELECT 1 
    FROM sys.indexes
    WHERE object_id = OBJECT_ID(N'[ADDRESS_BILLING].[ADDR_BILLING_MASTER]')
      AND name = 'IX_ADDR_BILLING_MASTER_UniqueID'
)
BEGIN
    CREATE NONCLUSTERED INDEX IX_ADDR_BILLING_MASTER_UniqueID
        ON [ADDRESS_BILLING].[ADDR_BILLING_MASTER]([UniqueID]);
    PRINT 'Created index IX_ADDR_BILLING_MASTER_UniqueID';
END
ELSE
BEGIN
    PRINT 'Index IX_ADDR_BILLING_MASTER_UniqueID already exists; skipping.';
END;

IF NOT EXISTS (
    SELECT 1 
    FROM sys.indexes
    WHERE object_id = OBJECT_ID(N'[ADDRESS_BILLING].[ADDR_BILLING_MASTER]')
      AND name = 'IX_ADDR_BILLING_MASTER_Pricing'
)
BEGIN
    CREATE NONCLUSTERED INDEX IX_ADDR_BILLING_MASTER_Pricing
        ON [ADDRESS_BILLING].[ADDR_BILLING_MASTER]([PRICING_TIER]);
    PRINT 'Created index IX_ADDR_BILLING_MASTER_Pricing';
END
ELSE
BEGIN
    PRINT 'Index IX_ADDR_BILLING_MASTER_Pricing already exists; skipping.';
END;
GO



SELECT DOCUMENT_NUMBER, ACNA, ACT, CLEAN, DD, NC, PON, CKT, SUPP,
       COMP, PRODUCT, EVC_IND,
       LISTAGG(TASK_AT_READY, ' / ') WITHIN GROUP (ORDER BY TASK_AT_READY) AS TASK_AT_READY, 
       LISTAGG(TASK_AT_JEOP, ' / ') WITHIN GROUP (ORDER BY TASK_AT_JEOP) AS TASK_AT_JEOP,
       LISTAGG(JEOPARDY_REASON_CODE, ' / ') WITHIN GROUP (ORDER BY JEOPARDY_REASON_CODE) AS JEOPARDY_REASON_CODE,
       LISTAGG(JEOPARDY_REASON_DESCRIPTION, ' / ') WITHIN GROUP (ORDER BY JEOPARDY_REASON_DESCRIPTION) AS JEOPARDY_REASON_DESCRIPTION,
       LAST_NOTE, LAST_NOTE_DATE
FROM (
--
SELECT DOCUMENT_NUMBER, ACNA, ACT, CLEAN, DD, NC, PON, CKT, SUPP, EVC_IND, REJECT_STATUS,
       TASK_AT_READY, TASK_AT_JEOP, JEOPARDY_REASON_CODE, 
       REGEXP_REPLACE(JEOPARDY_REASON_DESCRIPTION,'[[:cntrl:]]*') JEOPARDY_REASON_DESCRIPTION,
       SUBSTR(REGEXP_REPLACE (LAST_NOTE,'[[:cntrl:]]*'),1,150) LAST_NOTE,
       LAST_NOTE_DATE, COMP,
       CASE WHEN COMP = 'ATX' AND PROD IN ('DS1','DS3','OCN') AND ACT = 'N' THEN 'ABS TDM'
            WHEN COMP = 'ATX' AND PROD = 'Ethernet' AND BDW IN ('10M','100M','1G') AND ACT = 'N' THEN 'ABS Ethernet UNI'
            WHEN COMP = 'MOB' --AND PROD = 'ETHERNET' 
                 THEN 'MOB All Orders'
            ELSE 'EXCLUDE' END PRODUCT
FROM (
--
SELECT A.DOCUMENT_NUMBER, REQ, ACNA, ACT, TRUNC(CLEAN) CLEAN, TRUNC(DD) DD, NC, PON, CKT, SUPP, EVC_IND, A.REJECT_STATUS,
       T3.TASK_TYPE TASK_AT_READY,
       T4.TASK_TYPE TASK_AT_JEOP, 
       TJW.JEOPARDY_REASON_CODE,
       JT.JEOPARDY_REASON_DESCRIPTION,
       MAX(NTS.NOTE_TEXT) KEEP (DENSE_RANK LAST ORDER BY NTS.NOTES_ID) LAST_NOTE,
       MAX(TRUNC(NTS.LAST_MODIFIED_DATE)) KEEP (DENSE_RANK LAST ORDER BY NTS.NOTES_ID) LAST_NOTE_DATE,
       CASE WHEN NC = 'HC' THEN 'DS1'
            WHEN NC = 'HF' THEN 'DS3'
            WHEN NC IN ('OB','OD','OF','OG') THEN 'OCN'
            WHEN SUBSTR(NC,1,1) IN ('K','V') THEN 'Ethernet'
            WHEN SUBSTR(CKT,3,2) IN ('/K','/V') THEN 'Ethernet'
            ELSE ' ' END PROD,
       CASE WHEN EVC_IND = 'A' THEN 'EVC'
            WHEN NC IN ('KD','KP') THEN '10M'
            WHEN NC IN ('KE','KQ') THEN '100M'                
            WHEN NC IN ('KF','KR') THEN '1G'
            WHEN NC IN ('KG','KS') THEN '10G'
            ELSE NULL END BDW,
       CASE WHEN ACNA IN ('ATX','AAV','SBB','SBZ','SUV','TPM','LOA','AVA','AYA') THEN 'ATX' ELSE 'MOB' END COMP           
FROM (
SELECT SR.DOCUMENT_NUMBER, 
       ASR.REQUEST_TYPE REQ,  
       MAX(ASR.DATE_TIME_SENT) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) CLEAN, 
       MAX(ASR.DESIRED_DUE_DATE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) DD,
       MAX(ASR.NETWORK_CHANNEL_SERVICE_CODE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NC, 
       MAX(ASR.PON) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) PON,  
       MAX(SR.ACNA) ACNA,  
       MAX(ASR.ACTIVITY_INDICATOR) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) ACT,    
       MAX(ASR.SUPPLEMENT_TYPE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) SUPP,
       MAX(ASR.EVC_IND) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) EVC_IND,
       MAX(SR.FIRST_ECCKT_ID) KEEP (DENSE_RANK LAST ORDER BY SR.LAST_MODIFIED_DATE) CKT,
       T2.ACTUAL_COMPLETION_DATE, T2.REJECT_STATUS
FROM ACCESS_SERVICE_REQUEST ASR,
     SERV_REQ SR,
     TASK T,
     TASK T2
WHERE SR.DOCUMENT_NUMBER = ASR.DOCUMENT_NUMBER 
  AND SR.DOCUMENT_NUMBER = T.DOCUMENT_NUMBER (+)
  AND SR.DOCUMENT_NUMBER = T2.DOCUMENT_NUMBER (+)
  AND T.ACTUAL_COMPLETION_DATE IS NULL
  AND T.TASK_TYPE (+) = 'DD'
  AND T2.TASK_TYPE = 'ASR-CONF'
  AND ASR.REQUEST_TYPE IN ('S','E')
  AND ASR.ACTIVITY_INDICATOR IN ('N','C','D','M')
  AND ASR.ORDER_TYPE = 'ASR'     
  AND SR.ACNA IN ('ATX','AAV','SBB','SBZ','SUV','TPM','AAX','ACF','ACH','ADM','AEC','AGS','AGZ','AHA','AHD','AHM','AHO',
                  'AIL','AIN','AIS','AKZ','ALY','AMH','AMP','AWL','AWN','AZE','BAC','BAK','BAO','BCU','BFL','BGH','BPN',
                  'BSM','CBL','CCB','CDA','CEO','CEU','CFN','CIV','CIW','CKQ','CLQ','COW','CQW','CRF','CRJ','CSG','CSO',
                  'CSU','CSX','CTJ','CUO','CUY','CZB','DNC','ETP','EST','ETX','FLA','FSC','FSI','FSV','GEE','GLV','GSL',
                  'HGN','HLU','HNC','HTN','IMP','IND','ISZ','IUW','JCT','LAA','LAC','LBH','LNZ','LSZ','MBN','MBQ','MCA',
                  'MCC','MCE','MCQ','MCV','MCW','MCZ','MFN','MIB','MIR','MLA','MLZ','MMV','MOB','MOE','MTX','MUI','MWB',
                  'MWZ','NBC','NWW','OAK','OCL','ORV','OSU','OCK','PFM','PIG','RAD','RMC','RMF','RRC','SBG','SBM','SBN',
                  'SCU','SHI','SLL','SMC','SNP','STH','SUF','SWM','SWP','SWT','SWV','SYC','SZM','TGH','TQU','UMT','VGD',
                  'VRA','WBT','WGL','WLG','WLZ','WVO','WWC','NHO','LOA','AVA','AYA')
GROUP BY SR.DOCUMENT_NUMBER, ASR.REQUEST_TYPE, T2.ACTUAL_COMPLETION_DATE, T2.REJECT_STATUS
ORDER BY 3
) A,
  TASK T3,
  TASK T4,
  TASK_JEOPARDY_WHYMISS TJW,
  JEOPARDY_TYPE JT,
  NOTES NTS
WHERE A.DOCUMENT_NUMBER = T3.DOCUMENT_NUMBER (+)
  AND A.DOCUMENT_NUMBER = TJW.DOCUMENT_NUMBER (+)
  AND TJW.TASK_NUMBER = T4.TASK_NUMBER (+) 
  AND TJW.JEOPARDY_REASON_CODE = JT.JEOPARDY_REASON_CODE (+)
  AND A.DOCUMENT_NUMBER = NTS.DOCUMENT_NUMBER (+)
  AND JT.JEOPARDY_TYPE_CD (+) = 'J'
  AND T3.TASK_STATUS (+) = 'Ready' 
  AND TJW.DATE_CLOSED (+) IS NULL
  AND A.ACTUAL_COMPLETION_DATE IS NULL
GROUP BY A.DOCUMENT_NUMBER, REQ, ACNA, ACT, CLEAN, DD, NC, PON, CKT, SUPP, EVC_IND, A.REJECT_STATUS, 
       T3.TASK_TYPE,
       T4.TASK_TYPE, 
       TJW.JEOPARDY_REASON_CODE,
       JT.JEOPARDY_REASON_DESCRIPTION 
)
-- 
)
-- 
WHERE REJECT_STATUS IS NULL
GROUP BY DOCUMENT_NUMBER, ACNA, ACT, CLEAN, DD, NC, PON, CKT, SUPP,
         COMP, PRODUCT, EVC_IND, LAST_NOTE, LAST_NOTE_DATE   
ORDER BY 1,15;
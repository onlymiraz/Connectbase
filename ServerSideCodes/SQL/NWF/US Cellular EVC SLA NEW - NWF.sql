-- 8 
SELECT BAN, ACNA, CUSTOMER, ADDRESS, TRIM(CITY) CITY, STATE, LATA, EVC_CKR, PNUM, 
CASE WHEN ACT = 'N' THEN DD_COMP ELSE NULL END ETHERNET_READY_DT,
DOCUMENT_NUMBER LAST_ORDER_NO, DD_COMP LAST_COMP_DT,  ACT, EVC_BDW, EVC_LEVEL, 
'Carrier FTTC' PRODUCT,
EVC_DESIGN_ID, EVC_CKT, UNI_CKT, NNI_CKT, EVC_CKT2, UNI_CKT2, NNI_CKT2,
EVC_CKT_CLEAN, UNI_CKT_CLEAN, NNI_CKT_CLEAN, 
UNI_DESIGN_ID, UNI_STATUS, UNI_CLLI, UNI_LOC, UNI_H_COORD, UNI_V_COORD, UNI_IP,
NNI_DESIGN_ID, NNI_STATUS, NNI_CLLI, NNI_LOC, NNI_H_COORD, NNI_V_COORD, NNI_IP, NNI_COPPER_IP,
REPLACE(ADDR.ADDR_LN1,'MSAG ') AS Z_ADDRESS, TRIM(GA1.INSTANCE_VALUE) Z_CITY, 
GA2.INSTANCE_VALUE_ABBREV Z_STATE, 
NID_TYPE,
CASE WHEN NID_TYPE = 'RAD' AND CCV5.CA_VALUE IS NOT NULL AND CCV5.CA_VALUE <> '0' THEN CCV5.CA_VALUE
     WHEN NID_TYPE = 'RAD' AND CCV6.CA_VALUE IS NOT NULL AND CCV6.CA_VALUE <> '0' THEN CCV6.CA_VALUE
     WHEN NID_TYPE = 'CIENA' AND CCV7.CA_VALUE IS NOT NULL AND CCV7.CA_VALUE <> '0' THEN CCV7.CA_VALUE
     WHEN NID_TYPE = 'CIENA' AND CCV8.CA_VALUE IS NOT NULL AND CCV8.CA_VALUE <> '0' THEN CCV8.CA_VALUE
     ELSE NULL END VLAN      
FROM (
-- 7 
SELECT BAN, ACNA, CUSTOMER, ADDRESS, CITY, STATE, LATA,
PNUM, DD_COMP, DOCUMENT_NUMBER, ACT, EVC_BDW, LOS, EVC_SPEC, EVC_LEVEL, EVC_CKR,
EVC_DESIGN_ID, EVC_CKT, UNI_CKT, NNI_CKT, RTRIM(EVC_CKT2,'.') EVC_CKT2, RTRIM(UNI_CKT2,'.') UNI_CKT2,
RTRIM(NNI_CKT2,'.') NNI_CKT2, EVC_CKT_CLEAN, UNI_CKT_CLEAN, NNI_CKT_CLEAN, 
UNI_DESIGN_ID, UNI_STATUS, UNI_CLLI, UNI_LOC, UNI_H_COORD, UNI_V_COORD, UNI_IP,
NNI_DESIGN_ID, NNI_STATUS, NNI_CLLI, NNI_LOC, NNI_H_COORD, NNI_V_COORD, NNI_IP, NNI_COPPER_IP,
CEIL(SQRT((((UNI_H_COORD-NNI_H_COORD)*(UNI_H_COORD-NNI_H_COORD))+((UNI_V_COORD-NNI_V_COORD)*(UNI_V_COORD-NNI_V_COORD)))/10)) MILES,
CASE WHEN UNI_LOC LIKE '%CIENA%' THEN 'CIENA'
     WHEN UNI_LOC LIKE'%RAD%' THEN 'RAD'
     WHEN STATE = 'CT' THEN 'CIENA' ELSE 'RAD' END NID_TYPE
FROM (
-- 6 
SELECT BAN, ACNA, CUSTOMER,
REPLACE(ADDRESS,'MSAG ') AS ADDRESS, CITY, STATE,
CASE WHEN LATA IS NOT NULL THEN LATA ELSE LATA_NUMBER END LATA,
PNUM, DD_COMP, DOCUMENT_NUMBER, ACT, EVC_BDW, LOS, EVC_SPEC, EVC_LEVEL, EVC_CKR,
EVC_DESIGN_ID, EVC_CKT, UNI_CKT, NNI_CKT,
SUBSTR(REPLACE(REPLACE(EVC_CKT,'/','.'),' ',''),1,20) EVC_CKT2,
SUBSTR(REPLACE(REPLACE(UNI_CKT,'/','.'),' ',''),1,20) UNI_CKT2,
CASE WHEN SUBSTR(NNI_CKT,3,1) = '/' THEN SUBSTR(REPLACE(REPLACE(NNI_CKT,'/','.'),' ',''),1,20) 
 ELSE SUBSTR(REPLACE(NNI_CKT,'/','.'),-23) END NNI_CKT2,
SUBSTR(REPLACE(REPLACE(EVC_CKT,'/',''),' ',''),1,20) EVC_CKT_CLEAN,
SUBSTR(REPLACE(REPLACE(UNI_CKT,'/',''),' ',''),1,20) UNI_CKT_CLEAN,
CASE WHEN SUBSTR(NNI_CKT,3,1) = '/' THEN SUBSTR(REPLACE(REPLACE(NNI_CKT,'/',''),' ',''),1,20)
 ELSE SUBSTR(REPLACE(REPLACE(NNI_CKT,'/',''),' ',''),-22) END NNI_CKT_CLEAN,
UNI_DESIGN_ID, UNI_STATUS, NNI_DESIGN_ID, NNI_STATUS, UNI_IP, NNI_IP, NNI_COPPER_IP,
CASE WHEN UNI_CLLI IS NOT NULL THEN UNI_CLLI ELSE UNI_CLLI2 END UNI_CLLI,
CASE WHEN UNI_LOC IS NOT NULL THEN UNI_LOC ELSE UNI_LOC2 END UNI_LOC,
CASE WHEN UNI_H_COORD IS NOT NULL THEN UNI_H_COORD ELSE UNI_H_COORD2 END UNI_H_COORD,
CASE WHEN UNI_V_COORD IS NOT NULL THEN UNI_V_COORD ELSE UNI_V_COORD2 END UNI_V_COORD,
CASE WHEN NNI_CLLI IS NOT NULL THEN NNI_CLLI ELSE NNI_CLLI2 END NNI_CLLI,
CASE WHEN NNI_LOC IS NOT NULL THEN NNI_LOC ELSE NNI_LOC2 END NNI_LOC,
CASE WHEN NNI_H_COORD IS NOT NULL THEN NNI_H_COORD ELSE NNI_H_COORD2 END NNI_H_COORD,
CASE WHEN NNI_V_COORD IS NOT NULL THEN NNI_V_COORD ELSE NNI_V_COORD2 END NNI_V_COORD
FROM (
-- 5 
SELECT EVC_CKT, EVC_DESIGN_ID, ACNA, BAN, A.DOCUMENT_NUMBER, EVC_IND, ACT, DD_COMP, UNI_SPEC, PNUM, LOS, EVC_SPEC,
       LATA, ADDRESS, CITY, STATE, EVC_BDW, EVC_LEVEL, EVC_STATUS, EVC_STATUS_DESC, EVC_CKR,
       UNI_CKT, C2A.STATUS UNI_STATUS, UNI_DESIGN_ID, NNI_CKT, C3A.STATUS NNI_STATUS, NNI_DESIGN_ID, 
       NL1.CLLI_CODE UNI_CLLI, NL1.LOCATION_NAME UNI_LOC, NL1.H_COORDINATE UNI_H_COORD, NL1.V_COORDINATE UNI_V_COORD,
       NL2.CLLI_CODE UNI_CLLI2, NL2.LOCATION_NAME UNI_LOC2, NL2.H_COORDINATE UNI_H_COORD2, NL2.V_COORDINATE UNI_V_COORD2,
       NL3.CLLI_CODE NNI_CLLI, NL3.LOCATION_NAME NNI_LOC, NL3.H_COORDINATE NNI_H_COORD, NL3.V_COORDINATE NNI_V_COORD,
       NL4.CLLI_CODE NNI_CLLI2, NL4.LOCATION_NAME NNI_LOC2, NL4.H_COORDINATE NNI_H_COORD2, NL4.V_COORDINATE NNI_V_COORD2,
       CCV1.CA_VALUE UNI_IP, CCV3.CA_VALUE NNI_IP, CCV4.CA_VALUE NNI_COPPER_IP, ACCT.PRIMARY_CARRIER_NAME CUSTOMER, CO2.LATA_NUMBER
FROM (
--4 
SELECT CKT EVC_CKT, EVC_DESIGN_ID, ACNA, BAN, B.DOCUMENT_NUMBER, EVC_IND, ACT, DD_COMP, UNI_SPEC, PNUM, LOS, EVC_SPEC,
       LATA, ADDRESS, CITY, STATE, EVC_BDW, EVC_LEVEL, EVC_STATUS, EVC_STATUS_DESC, EVC_CKR,
       CASE WHEN CUD2.UNI_OR_NNI = '435' THEN C2.EXCHANGE_CARRIER_CIRCUIT_ID
            WHEN CUD2.UNI_OR_NNI = '436' AND (CUD3.UNI_OR_NNI = '435' OR CUD3.UNI_OR_NNI IS NULL) THEN C3.EXCHANGE_CARRIER_CIRCUIT_ID   
            WHEN CUD2.UNI_OR_NNI IS NULL AND CUD3.UNI_OR_NNI = '435' THEN C3.EXCHANGE_CARRIER_CIRCUIT_ID   
            ELSE C2.EXCHANGE_CARRIER_CIRCUIT_ID END UNI_CKT,
       CASE WHEN CUD2.UNI_OR_NNI = '435' THEN C2.CIRCUIT_DESIGN_ID
            WHEN CUD2.UNI_OR_NNI = '436' AND (CUD3.UNI_OR_NNI = '435' OR CUD3.UNI_OR_NNI IS NULL) THEN C3.CIRCUIT_DESIGN_ID   
            WHEN CUD2.UNI_OR_NNI IS NULL AND CUD3.UNI_OR_NNI = '435' THEN C3.CIRCUIT_DESIGN_ID   
            ELSE C2.CIRCUIT_DESIGN_ID END UNI_DESIGN_ID,     
       CASE WHEN CUD2.UNI_OR_NNI = '435' THEN C3.EXCHANGE_CARRIER_CIRCUIT_ID
            WHEN CUD2.UNI_OR_NNI = '436' AND (CUD3.UNI_OR_NNI = '435' OR CUD3.UNI_OR_NNI IS NULL) THEN C2.EXCHANGE_CARRIER_CIRCUIT_ID   
            WHEN CUD2.UNI_OR_NNI IS NULL AND CUD3.UNI_OR_NNI = '435' THEN C2.EXCHANGE_CARRIER_CIRCUIT_ID   
            ELSE C3.EXCHANGE_CARRIER_CIRCUIT_ID END NNI_CKT,
       CASE WHEN CUD2.UNI_OR_NNI = '435' THEN C3.CIRCUIT_DESIGN_ID
            WHEN CUD2.UNI_OR_NNI = '436' AND (CUD3.UNI_OR_NNI = '435' OR CUD3.UNI_OR_NNI IS NULL) THEN C2.CIRCUIT_DESIGN_ID   
            WHEN CUD2.UNI_OR_NNI IS NULL AND CUD3.UNI_OR_NNI = '435' THEN C2.CIRCUIT_DESIGN_ID   
            ELSE C3.CIRCUIT_DESIGN_ID END NNI_DESIGN_ID     
FROM (
-- 3 
SELECT *
FROM (
-- 2
SELECT DISTINCT CKT, ACNA, DOCUMENT_NUMBER, BAN, EVC_IND, ACT, DD_COMP, UNI_SPEC, PNUM, LOS, EVC_SPEC,
       CASE WHEN LATA IS NOT NULL THEN LATA ELSE LATA_NUMBER END LATA,
       ADDRESS, CITY, STATE, EVC_CKR,
       CASE WHEN UOM = 'G' THEN TO_NUMBER(REGEXP_REPLACE(BDW,'[^.^0-9'']','')) *1000 
        ELSE TO_NUMBER(REGEXP_REPLACE(BDW,'[^.^0-9'']','')) END AS EVC_BDW,
       CASE WHEN LOS = ('EBE') THEN 'Silver'
            WHEN LOS = ('EPD') THEN 'Gold' 
            WHEN LOS = ('ERT') THEN 'Platinum'
            WHEN LOS = ('BASIC') THEN 'Silver'
            WHEN LOS = ('PD') THEN 'Gold' 
            WHEN LOS = ('RT') THEN 'Platinum'
            WHEN EVC_SPEC = 'EVPLSE' THEN 'Silver'
            WHEN EVC_SPEC = 'EPATHES' THEN 'Silver'
            WHEN EVC_SPEC = 'EPATHEG' THEN 'Gold'
            WHEN EVC_SPEC = 'EPATHEP' THEN 'Platinum'
            ELSE NULL END EVC_LEVEL, 
       EVC_STATUS, EVC_STATUS_DESC, CIRCUIT_DESIGN_ID EVC_DESIGN_ID, 
       ROW_NUMBER() OVER (PARTITION BY CKT ORDER BY DD_COMP DESC) R 
FROM (
-- 1 
SELECT DISTINCT C.EXCHANGE_CARRIER_CIRCUIT_ID CKT, SR.ACNA, SR.DOCUMENT_NUMBER, EVC_IND, TRUNC(ACTUAL_COMPLETION_DATE) DD_COMP,
       ASR.SERVICE_AND_PRODUCT_ENHANC_COD UNI_SPEC, PROMOTION_NBR PNUM, ASR.SUPPLEMENT_TYPE SUPP, ASR.ACTIVITY_INDICATOR ACT,
       ASR.LATA_NUMBER LATA, CO.LATA_NUMBER, A.ADDR_LN1 ADDRESS, GA2.INSTANCE_VALUE CITY, GA.INSTANCE_VALUE_ABBREV STATE,
       ELS.LVL_OF_SERV_NM AS LOS, ELS.SERVICE_AND_PRODUCT_ENHANC_COD AS EVC_SPEC, ELS.BANDWIDTH BDW, ELS.BANDWIDTH_UOM UOM,
       ED.EVC_CKR, AUD.BAN, C2.STATUS EVC_STATUS, C.CIRCUIT_DESIGN_ID,
       DECODE (C2.STATUS,
                  '1', 'Pending',
                  '2', 'Assigned',
                  '3', 'In Progress',
                  '4', 'Record Issued',
                  '5', 'DLR Issued',
                  '6', 'In Service',
                  '7', 'Pending Disconnect',
                  '8', 'Disconnected',
                  '9', 'Problem',
                  'A', 'Cancelled',
                  NULL
                 ) EVC_STATUS_DESC        
FROM SERV_REQ SR, 
     ACCESS_SERVICE_REQUEST ASR, 
     TASK T, 
     ASR_USER_DATA AUD,
     SERVICE_REQUEST_CIRCUIT SRC, 
     CIRCUIT C,
     EVC_UNI_MAP EUM,
     EVC_LVL_SERV ELS,
     EVC_DETAIL ED,
     SERV_ITEM SI,
     (SELECT DISTINCT *
        FROM (SELECT D.DESIGN_ID,
                     D.ISSUE_NBR,
                     D.SERV_ITEM_ID,
                     D.ISSUE_STATUS,
                     ROW_NUMBER() OVER (PARTITION BY SERV_ITEM_ID ORDER BY ISSUE_STATUS ASC) R
                   FROM ASAP.DESIGN D)
                    WHERE R = 1) D,
     (SELECT DISTINCT *
        FROM (SELECT D.LOCATION_ID,
                     D.ADDRESS_ID,
                     D.ACTIVE_IND,
                     ROW_NUMBER() OVER (PARTITION BY LOCATION_ID ORDER BY ADDRESS_ID DESC) R
                   FROM ASAP.NET_LOC_ADDR D
                    WHERE ACTIVE_IND = 'Y')
                     WHERE R = 1) NLA,                            
     ADDRESS A,
     GA_INSTANCE GA,
     GA_INSTANCE GA2,
     NETWORK_LOCATION NL,
     CENTRAL_OFFICE_EXCHANGE_AREA CO,
     CIRCUIT C2
WHERE SR.DOCUMENT_NUMBER = ASR.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = T.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = AUD.DOCUMENT_NUMBER (+)
  AND SR.DOCUMENT_NUMBER = SRC.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = EUM.DOCUMENT_NUMBER (+)
  AND SR.DOCUMENT_NUMBER = ED.DOCUMENT_NUMBER (+)
  AND EUM.DOCUMENT_NUMBER = ELS.DOCUMENT_NUMBER (+)
  AND EUM.EVC_UNI_MAP_ID = ELS.EVC_UNI_MAP_ID(+)
  AND SRC.CIRCUIT_DESIGN_ID = C.CIRCUIT_DESIGN_ID (+)
  AND C.CIRCUIT_DESIGN_ID = SI.CIRCUIT_DESIGN_ID
  AND SI.SERV_ITEM_ID = D.SERV_ITEM_ID
  AND C.LOCATION_ID = NLA.LOCATION_ID
  AND NLA.ADDRESS_ID = A.ADDRESS_ID
  AND A.GA_INSTANCE_ID_STATE_CD = GA.GA_INSTANCE_ID
  AND A.GA_INSTANCE_ID_CITY = GA2.GA_INSTANCE_ID
  AND C.LOCATION_ID_2 = NL.LOCATION_ID(+)
  AND NL.EXCHANGE_AREA_CLLI = CO.EXCHANGE_AREA_CLLI (+)
  AND C.EXCHANGE_CARRIER_CIRCUIT_ID = C2.EXCHANGE_CARRIER_CIRCUIT_ID
  AND C.CIRCUIT_DESIGN_ID = C2.CIRCUIT_DESIGN_ID
  AND T.TASK_TYPE = 'DD'
  AND EVC_IND IN ('A','B')
  AND T.ACTUAL_COMPLETION_DATE IS NOT NULL
  AND SR.ACTIVITY_IND IN ('N','C','R')
  --AND SR.DOCUMENT_NUMBER = '2735645';
  AND TO_CHAR(T.ACTUAL_COMPLETION_DATE,'yyyymmdd') >= '20200906'     --CHANGE DATE TO SHOW THE PREVIOUS SUNDAY  
  AND SR.ACNA = 'UCU'
) 
-- 2 
WHERE SUBSTR(CKT,4,1) = 'V'
AND (EVC_SPEC IS NOT NULL OR LOS IS NOT NULL) 
AND (SUPP <> 1 OR SUPP IS NULL)
AND EVC_STATUS NOT IN ('8','A')
-- 3 
)
WHERE R = 1
-- 4 
) B,
  NS_CONNECTION NSC1,
  NS_CON_REL NSCR,
  CIRCUIT C2,
  NS_CONNECTION NSC2,
  NS_COMPONENT NSCP1,
  CIRCUIT_USER_DATA CUD2,
  NS_CONNECTION NSC3,
  NS_CON_REL NSCR3,
  CIRCUIT C3,
  NS_CONNECTION NSC4,
  NS_COMPONENT NSCP3,
  CIRCUIT_USER_DATA CUD3
WHERE B.EVC_DESIGN_ID = NSC1.CIRCUIT_DESIGN_ID
     AND NSC1.CIRCUIT_DESIGN_ID = NSCR.CIRCUIT_DESIGN_ID_CHILD
     AND NSCR.CIRCUIT_DESIGN_ID_PARENT = C2.CIRCUIT_DESIGN_ID
     AND C2.CIRCUIT_DESIGN_ID = NSC2.CIRCUIT_DESIGN_ID
     AND NSC2.NS_COMP_ID_PARENT = NSCP1.NS_COMP_ID
     AND NSC1.NS_COMP_ID_PARENT = NSC2.NS_COMP_ID_PARENT
     AND NSCR.NS_CON_REL_STATUS_CD <> '4' 
     AND C2.CIRCUIT_DESIGN_ID = CUD2.CIRCUIT_DESIGN_ID (+)
     AND C2.STATUS <> '8'
     AND B.EVC_DESIGN_ID = NSC3.CIRCUIT_DESIGN_ID
     AND NSC3.CIRCUIT_DESIGN_ID = NSCR3.CIRCUIT_DESIGN_ID_CHILD
     AND NSCR3.CIRCUIT_DESIGN_ID_PARENT = C3.CIRCUIT_DESIGN_ID
     AND C3.CIRCUIT_DESIGN_ID = NSC4.CIRCUIT_DESIGN_ID
     AND NSC4.NS_COMP_ID_PARENT = NSCP3.NS_COMP_ID
     AND (NSC3.NS_COMP_ID_CHILD = NSC4.NS_COMP_ID_PARENT
       OR NSC3.NS_COMP_ID_CHILD = NSC4.NS_COMP_ID_CHILD )
     AND NSCR3.NS_CON_REL_STATUS_CD <> '4'
     AND C3.CIRCUIT_DESIGN_ID = CUD3.CIRCUIT_DESIGN_ID (+)
     AND C3.STATUS <> '8' 
--5      
) A,
  ASR_OM.ASR_ACCOUNT_MANAGER ACCT,
  CIRCUIT C2A,   
  NETWORK_LOCATION NL1,
  NETWORK_LOCATION NL2,
  (SELECT DISTINCT CIRCUIT_DESIGN_ID, CA_VALUE, CA_VALUE_LABEL
      FROM (
            SELECT CIRCUIT_DESIGN_ID, 
            CA_VALUE, 
            CA_VALUE_LABEL,
            ROW_NUMBER() OVER (PARTITION BY CIRCUIT_DESIGN_ID ORDER BY CONN_CA_VALUE_ID DESC) R
         FROM CONN_CA_VALUE
          WHERE CA_USAGE_ID = '100521' )  --UNI IP   
              WHERE R = 1 ) CCV1, 
  CENTRAL_OFFICE_EXCHANGE_AREA CO2, 
  CIRCUIT C3A,           
  NETWORK_LOCATION NL3,
  NETWORK_LOCATION NL4,
  (SELECT DISTINCT CIRCUIT_DESIGN_ID, CA_VALUE, CA_VALUE_LABEL
      FROM (
            SELECT CIRCUIT_DESIGN_ID, 
            CA_VALUE, 
            CA_VALUE_LABEL,
            ROW_NUMBER() OVER (PARTITION BY CIRCUIT_DESIGN_ID ORDER BY CONN_CA_VALUE_ID DESC) R
         FROM CONN_CA_VALUE
          WHERE CA_USAGE_ID = '100521' )  --NNI IP   
              WHERE R = 1 ) CCV3,
  (SELECT DISTINCT CIRCUIT_DESIGN_ID, CA_VALUE, CA_VALUE_LABEL
      FROM (
            SELECT CIRCUIT_DESIGN_ID, 
            CA_VALUE, 
            CA_VALUE_LABEL,
            ROW_NUMBER() OVER (PARTITION BY CIRCUIT_DESIGN_ID ORDER BY CONN_CA_VALUE_ID DESC) R
         FROM CONN_CA_VALUE
          WHERE CA_USAGE_ID = '100246' )  --NNI COPPER IP   
              WHERE R = 1 ) CCV4            
  WHERE A.ACNA = ACCT.SECONDARY_ID (+)
    AND A.UNI_DESIGN_ID = C2A.CIRCUIT_DESIGN_ID
    AND C2A.LOCATION_ID_2 = NL1.LOCATION_ID (+)
    AND C2A.LOCATION_ID = NL2.LOCATION_ID (+)
    AND C2A.CIRCUIT_DESIGN_ID = CCV1.CIRCUIT_DESIGN_ID (+) 
    AND NL1.EXCHANGE_AREA_CLLI = CO2.EXCHANGE_AREA_CLLI (+)
    AND A.NNI_DESIGN_ID = C3A.CIRCUIT_DESIGN_ID
    AND C3A.LOCATION_ID_2 = NL3.LOCATION_ID (+)
    AND C3A.LOCATION_ID = NL4.LOCATION_ID (+)
    AND C3A.CIRCUIT_DESIGN_ID = CCV3.CIRCUIT_DESIGN_ID (+)  
    AND C3A.CIRCUIT_DESIGN_ID = CCV4.CIRCUIT_DESIGN_ID (+)
-- 6
)
-- 7 
)
-- 8 
)
  A2,
  CIRCUIT C5,
 (SELECT DISTINCT *
        FROM (SELECT D.LOCATION_ID,
                     D.ADDRESS_ID,
                     D.ACTIVE_IND,
                     ROW_NUMBER() OVER (PARTITION BY LOCATION_ID ORDER BY ADDRESS_ID DESC) R
                   FROM ASAP.NET_LOC_ADDR D
                    WHERE ACTIVE_IND = 'Y')
                     WHERE R = 1) NLA,            
  ADDRESS ADDR,
  MV_GA_INSTANCE GA1,
  MV_GA_INSTANCE GA2, 
  (SELECT DISTINCT CIRCUIT_DESIGN_ID, CA_VALUE, CA_VALUE_LABEL
      FROM (
            SELECT CIRCUIT_DESIGN_ID, 
            CA_VALUE, 
            CA_VALUE_LABEL,
            ROW_NUMBER() OVER (PARTITION BY CIRCUIT_DESIGN_ID ORDER BY CONN_CA_VALUE_ID DESC) R
         FROM CONN_CA_VALUE
          WHERE CA_USAGE_ID = '100253' )    
              WHERE R = 1 ) CCV5,
  (SELECT DISTINCT CIRCUIT_DESIGN_ID, CA_VALUE, CA_VALUE_LABEL
      FROM (
            SELECT CIRCUIT_DESIGN_ID, 
            CA_VALUE, 
            CA_VALUE_LABEL,
            ROW_NUMBER() OVER (PARTITION BY CIRCUIT_DESIGN_ID ORDER BY CONN_CA_VALUE_ID DESC) R
         FROM CONN_CA_VALUE
          WHERE CA_USAGE_ID = '100254' )   
              WHERE R = 1 ) CCV6, 
  (SELECT DISTINCT CIRCUIT_DESIGN_ID, CA_VALUE, CA_VALUE_LABEL
      FROM (
            SELECT CIRCUIT_DESIGN_ID, 
            CA_VALUE, 
            CA_VALUE_LABEL,
            ROW_NUMBER() OVER (PARTITION BY CIRCUIT_DESIGN_ID ORDER BY CONN_CA_VALUE_ID DESC) R
         FROM CONN_CA_VALUE
          WHERE CA_USAGE_ID = '100577' )    
              WHERE R = 1 ) CCV7,
  (SELECT DISTINCT CIRCUIT_DESIGN_ID, CA_VALUE, CA_VALUE_LABEL
      FROM (
            SELECT CIRCUIT_DESIGN_ID, 
            CA_VALUE, 
            CA_VALUE_LABEL,
            ROW_NUMBER() OVER (PARTITION BY CIRCUIT_DESIGN_ID ORDER BY CONN_CA_VALUE_ID DESC) R
         FROM CONN_CA_VALUE
          WHERE CA_USAGE_ID = '100583' )    
              WHERE R = 1 ) CCV8                    
WHERE A2.NNI_DESIGN_ID = C5.CIRCUIT_DESIGN_ID
AND C5.LOCATION_ID = NLA.LOCATION_ID
AND NLA.ADDRESS_ID = ADDR.ADDRESS_ID
AND ADDR.GA_INSTANCE_ID_CITY = GA1.GA_INSTANCE_ID
AND ADDR.GA_INSTANCE_ID_STATE_CD = GA2.GA_INSTANCE_ID
AND A2.EVC_DESIGN_ID = CCV5.CIRCUIT_DESIGN_ID (+)
AND A2.EVC_DESIGN_ID = CCV6.CIRCUIT_DESIGN_ID (+)
AND A2.EVC_DESIGN_ID = CCV7.CIRCUIT_DESIGN_ID (+)
AND A2.EVC_DESIGN_ID = CCV8.CIRCUIT_DESIGN_ID (+)
;



-- FOR DISCONNECTS, RUN THIS AND SEARCH FOR EVC IN THE CURRENT FILE TO REMOVE 
 
SELECT *
FROM (
SELECT ASR.DOCUMENT_NUMBER,
       MAX(ASR.PON) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) PON, 
	   MAX(ASR.PROJECT_IDENTIFICATION) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) PROJECT,
	   MIN(ACCEPTANCE_DATE) KEEP (DENSE_RANK LAST ORDER BY AUD.LAST_MODIFIED_DATE) ACCEPT_DT, 
	   TRUNC(T.ACTUAL_COMPLETION_DATE) DD_COMP,
	   MAX(SR.ACNA) ACNA,  
	   MAX(ASR.ACTIVITY_INDICATOR) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) ACT, 
	   MAX(ASR.NETWORK_CHANNEL_SERVICE_CODE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NC,
	   MAX(ASR.SUPPLEMENT_TYPE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) SUPP,
	   C.EXCHANGE_CARRIER_CIRCUIT_ID CKT,
       MAX(ASR.EVC_IND) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) EVC_IND,
       REPLACE(REPLACE(C.EXCHANGE_CARRIER_CIRCUIT_ID,'/',''),' ','') CKT2
FROM ACCESS_SERVICE_REQUEST ASR,
     ASR_USER_DATA AUD,
	 SERV_REQ SR,
	 NETWORK_LOCATION NL1,
	 TASK T,
	 CIRCUIT C,
     SERVICE_REQUEST_CIRCUIT SRC
WHERE SR.DOCUMENT_NUMBER = ASR.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = AUD.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = T.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = SRC.DOCUMENT_NUMBER (+)
  AND SRC.CIRCUIT_DESIGN_ID = C.CIRCUIT_DESIGN_ID (+)
  AND C.LOCATION_ID = NL1.LOCATION_ID(+)
  AND TO_CHAR(T.ACTUAL_COMPLETION_DATE,'yyyymmdd') >= ('20200906')      --CHANGE DATE TO SHOW THE PREVIOUS SUNDAY     
  AND ASR.REQUEST_TYPE IN ('S','E')
  AND ASR.ACTIVITY_INDICATOR IN ('D')
  AND ASR.ORDER_TYPE = 'ASR' 
  AND T.TASK_TYPE = 'DD'
  AND SR.ACNA IN ('UCU')
  AND EVC_IND IS NOT NULL
  AND SUBSTR(C.EXCHANGE_CARRIER_CIRCUIT_ID,4,1) = 'V'
GROUP BY ASR.DOCUMENT_NUMBER, ASR.REQUEST_TYPE, T.ACTUAL_COMPLETION_DATE, C.EXCHANGE_CARRIER_CIRCUIT_ID
)
WHERE (SUPP <> 1 OR SUPP IS NULL)

ORDER BY 5,10;
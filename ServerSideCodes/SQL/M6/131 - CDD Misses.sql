SELECT DISTINCT DOCNO, PON, ACT, CKT, PROJECT, DREC, DD, DDD, ACCEPT_DT, DD_TASK_COMP, COMP_DT, 
       PROD, ICSC, DATA3.ACNA, CLLI_Z, STATE, 
       CASE WHEN STATE IN ('CT','NY','PA','AL','FL','GA','MS','NC','SC','TN') then 'Eastern'
            WHEN STATE IN ('IA','IL','IN','MI','MN','NE','WI','KY','TX','OH','WV','MD','VA') then 'Central'
       		WHEN STATE IN ('CA','AZ','NM','NV','UT') then 'Western'
	  	    ELSE 'Unknown' END REGION,		
       NPANXX, FDT, EXPEDITE, TASK_LABEL_10, INFINIUM_1 REL_EWO_INFINIUM_1,
       DD_WM||' - '||DDDESC DD_WM, RCA_WM||' - '||RCADESC RCA_WM, FINAL_WM||' - '||FINALDESC FINAL_WM, ORIG_STATUS, FINAL_STATUS, 
       MAX(REGEXP_REPLACE (NTS.NOTE_TEXT,'[[:cntrl:]]*')) KEEP (DENSE_RANK LAST ORDER BY NTS.LAST_MODIFIED_DATE) NOTES
 FROM ( 
SELECT DISTINCT DOCUMENT_NUMBER DOCNO, PON, ACT, CKT, DREC, DD, DDD, COMP_DT, DD_COMP DD_TASK_COMP,  
       ACCEPT_DT, PROD, PROJECT, 
       ICSC, ACNA, STATE, NPANXX, EXPEDITE, CLLI_Z,
       DD_WM, RCA_WM, FINAL_WM, TASK_LABEL_10, FDT, 
       REGEXP_REPLACE (JT1.JEOPARDY_REASON_DESCRIPTION,'[[:cntrl:]]*') DDDESC, 
       REGEXP_REPLACE (JT2.JEOPARDY_REASON_DESCRIPTION,'[[:cntrl:]]*') RCADESC, 
       REGEXP_REPLACE (JT3.JEOPARDY_REASON_DESCRIPTION,'[[:cntrl:]]*') FINALDESC,         
       CASE WHEN (COMP_DT <= DD OR DD IS NULL) THEN 'Met'
            WHEN (COMP_DT > DD AND DD_WM IN ('CU01','CU02','CU03','CU04','CU05','DS02','CA22','EX01','CU51','CU52','CU53','DS52','PM53')) THEN 'Met'
            ELSE 'Miss' END ORIG_STATUS,
       CASE WHEN (COMP_DT <= DD OR DD IS NULL) THEN 'Met'
            WHEN (COMP_DT > DD AND FINAL_WM IN ('CU01','CU02','CU03','CU04','CU05','DS02','CA22','EX01','CU51','CU52','CU53','DS52','PM53')) THEN 'Met'
            ELSE 'Miss' END FINAL_STATUS         
FROM (
SELECT DISTINCT DOCUMENT_NUMBER, ACT, TRUNC(DREC) DREC, DD, DDD, DD_COMP, ACCEPT_DT, 
       CASE WHEN DD_COMP IS NULL AND ACCEPT_DT > DREC THEN ACCEPT_DT
            WHEN ACCEPT_DT IS NULL THEN DD_COMP
            WHEN ACCEPT_DT <= DD_COMP AND ACCEPT_DT > DREC THEN ACCEPT_DT 
            ELSE DD_COMP END COMP_DT, 
       CASE WHEN NC = 'HC' THEN 'DS1'
            WHEN NC = 'HF' THEN 'DS3'
            WHEN SUBSTR(NC,1,1) IN ('L','X') THEN 'DS0'
            WHEN NC IN ('OB','OD','OF','OG') THEN 'OCN'
            WHEN SUBSTR(NC,1,1) IN ('K') THEN 'Ethernet-UNI'
            WHEN SUBSTR(NC,1,1) IN ('V') THEN 'Ethernet-EVC'
            WHEN SUBSTR(NC,2,1) IN ('SN') THEN 'Ethernet-NNI'
            WHEN SUBSTR(CKT,4,1) IN ('K') THEN 'Ethernet-UNI'
            WHEN SUBSTR(CKT,4,1) IN ('V') THEN 'Ethernet-EVC'
            WHEN SUBSTR(CKT,4,2) IN ('SX') THEN 'Ethernet-NNI'
            WHEN PROJECT LIKE 'ATTMOB-%' THEN 'Ethernet'
            ELSE ' ' END PROD,        
        PON, ICSC, ACNA, PROJECT, 
        DD_WM, RCA_WM, TASK_LABEL_10,
        CASE WHEN RCA_WM IS NOT NULL THEN RCA_WM ELSE DD_WM END FINAL_WM,  
        SUPP, CKT, EXPEDITE,  
        CLLI_Z, DATA.NPA||DATA.NXX NPANXX, SUBSTR(NPA.EXCHANGE_AREA_CLLI,5,2) STATE, FDT
FROM (
SELECT SR.DOCUMENT_NUMBER, 
       ASR.REQUEST_TYPE, 
       MAX(ASR.PROJECT_IDENTIFICATION) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) PROJECT, 
       MAX(ASR.DATE_TIME_SENT) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) DREC, 
       MAX(ASR.DESIRED_DUE_DATE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) DD, 
       MAX(AUD.CRDD) KEEP (DENSE_RANK LAST ORDER BY AUD.LAST_MODIFIED_DATE) DDD, 
       MIN(ACCEPTANCE_DATE) KEEP (DENSE_RANK LAST ORDER BY AUD.LAST_MODIFIED_DATE) ACCEPT_DT, 
       MAX(ASR.NETWORK_CHANNEL_SERVICE_CODE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NC, 
       MAX(ASR.PON) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) PON,  
       MAX(ACCESS_PROVIDER_SERV_CTR_CODE) ICSC, 
       MAX(SR.ACNA) ACNA,  
       MAX(ASR.ACTIVITY_INDICATOR) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) ACT, 
       MAX(JW1.JEOPARDY_REASON_CODE) KEEP (DENSE_RANK LAST ORDER BY JW1.LAST_MODIFIED_DATE) DD_WM,
       MAX(JW2.JEOPARDY_REASON_CODE) KEEP (DENSE_RANK LAST ORDER BY JW2.LAST_MODIFIED_DATE) RCA_WM,
       MAX(SUBSTR(NL1.CLLI_CODE,1,8)) KEEP (DENSE_RANK LAST ORDER BY NL1.LAST_MODIFIED_DATE) CLLI_Z, 
       TRUNC(T1.ACTUAL_COMPLETION_DATE) DD_COMP,
       MAX(T3.TASK_LABEL_10) KEEP (DENSE_RANK LAST ORDER BY T3.TASK_NUMBER) TASK_LABEL_10,
       MAX(SR.SUPPLEMENT_TYPE) KEEP (DENSE_RANK LAST ORDER BY SR.LAST_MODIFIED_DATE) SUPP,
       MAX(SR.FIRST_ECCKT_ID) KEEP (DENSE_RANK LAST ORDER BY SR.LAST_MODIFIED_DATE) CKT,
       MAX(EXPEDITE_INDICATOR) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) EXPEDITE,
       MAX(ASR.NPA) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NPA,
       MAX(ASR.NXX) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NXX,
       MAX(ASR.FRAME_DUE_TIME) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) FDT
FROM ASR_USER_DATA AUD, 
     ACCESS_SERVICE_REQUEST ASR,
     SERV_REQ SR,
     NETWORK_LOCATION NL1,
     TASK_JEOPARDY_WHYMISS JW1,
     TASK_JEOPARDY_WHYMISS JW2,
     TASK T1,
     TASK T2,
     TASK T3,
     CIRCUIT C
WHERE SR.DOCUMENT_NUMBER = ASR.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = AUD.DOCUMENT_NUMBER(+)
  AND SR.FIRST_ECCKT_ID = C.EXCHANGE_CARRIER_CIRCUIT_ID
  AND C.LOCATION_ID_2 = NL1.LOCATION_ID(+)
  AND SR.DOCUMENT_NUMBER = T1.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = T2.DOCUMENT_NUMBER (+)
  AND SR.DOCUMENT_NUMBER = T3.DOCUMENT_NUMBER (+)
  AND T1.TASK_NUMBER = JW1.TASK_NUMBER(+)
  AND T2.TASK_NUMBER = JW2.TASK_NUMBER(+)
  AND TO_CHAR(T1.ACTUAL_COMPLETION_DATE,'yyyymm') = '202401'    --CHANGE EACH MONTH - CURRENT REPORTING MONTH  
  AND ASR.REQUEST_TYPE IN ('S','E')
  AND ASR.ACTIVITY_INDICATOR IN ('N','C')
  AND ASR.ORDER_TYPE = 'ASR'
  AND JW1.JEOPARDY_TYPE_CD(+) = 'W'
  AND JW2.JEOPARDY_TYPE_CD(+) = 'W'
  AND T1.TASK_TYPE = 'DD'
  AND T2.TASK_TYPE(+) = 'RCA'
  AND T3.TASK_TYPE(+) = 'CON_COMP'
  AND SR.DOCUMENT_NUMBER > '1000000'
GROUP BY SR.DOCUMENT_NUMBER, ASR.REQUEST_TYPE, T1.ACTUAL_COMPLETION_DATE
) DATA,
  NPA_NXX NPA
WHERE DATA.NPA = NPA.NPA (+)
  AND DATA.NXX = NPA.NXX (+) 
  AND (SUPP <> 1 OR SUPP IS NULL) 
  AND SUBSTR(CKT,7,1) <> 'U'  -- REMOVES UNE ORDERS  
) DATA2,
  JEOPARDY_TYPE JT1,
  JEOPARDY_TYPE JT2,
  JEOPARDY_TYPE JT3
WHERE DD_WM = JT1.JEOPARDY_REASON_CODE(+)
  AND RCA_WM = JT2.JEOPARDY_REASON_CODE(+)
  AND FINAL_WM = JT3.JEOPARDY_REASON_CODE(+)
  AND JT1.JEOPARDY_TYPE_CD(+) = 'W'
  AND JT2.JEOPARDY_TYPE_CD(+) = 'W'
  AND JT3.JEOPARDY_TYPE_CD(+) = 'W'
  AND (ACNA NOT IN ('ZTK','BLI','BNK','CMW','COY','CQV','CUS','CZE','CZJ','CZN','CZX','EPX','ERR','EXC','FBA','FCA','FIS',
                    'FLX','GOP','GTO','GVN','IZH','NNR','OGD','RGD','ROU','T05','VAC','VZN','WDK','ZAP','ZWV','XYY','ZZZ')) -- OR ACNA IS NULL);               
) DATA3, NOTES NTS, 
  (SELECT DISTINCT *
        FROM (SELECT DOCUMENT_NUMBER,
                     SUBSTR(REL_ASR_ORDERS,-7) REL_ASR_ORDERS,
                     INFINIUM_1,
                     ROW_NUMBER() OVER (PARTITION BY REL_ASR_ORDERS ORDER BY LAST_MODIFIED_DATE DESC) R
                   FROM EWO_USER_DATA EUD
                   --WHERE INFINIUM_1 IS NOT NULL
                   )
                    WHERE R = 1) EUD
WHERE DATA3.DOCNO = NTS.DOCUMENT_NUMBER (+)
AND (SUBSTR(NOTE_TEXT(+),1,6) = 'RCACDD' or SUBSTR(NOTE_TEXT(+),1,15) = 'RCA INFORMATION')
AND ORIG_STATUS = 'Miss'  
AND TO_CHAR(DATA3.DOCNO) = SUBSTR(EUD.REL_ASR_ORDERS (+),-7)
GROUP BY DOCNO, PON, ACT, CKT, PROJECT, DREC, DD, DDD, ACCEPT_DT, DD_TASK_COMP, COMP_DT, PROD, ICSC, DATA3.ACNA, STATE, 		
       NPANXX, FDT, EXPEDITE, DD_WM, DDDESC, RCA_WM, RCADESC, FINAL_WM, FINALDESC, ORIG_STATUS, FINAL_STATUS, CLLI_Z, TASK_LABEL_10, INFINIUM_1                   
ORDER BY 10,1
;


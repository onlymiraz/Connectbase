SELECT DOC_NUM, PON, ACNA, PRIMARY_CARRIER_NAME, SUPP, ACT_IND, SGMT, CIRCUIT_ID, CLEAN_ID, CIRCUIT_TYPE, ECCKT_TYPE,
CASE WHEN R = 1 THEN 'YES' ELSE 'NO' END MAIN_CIRCUIT, 
EVCI, UNI_SPEED, EVC_SPEED, MBPS, STATE, EU_NAME, EU_ADDRESS, EU_CITY, EU_STATE, EU_ZIPCD, EO_CLLI, LATA, P_NUM, 
PROJECT_ID, NC, NC_OPT, SEI, SPEC, LREF_SPEC, ICSC, RUID1, RUID2, LOS, EXPEDITE, DESIGN_ID,
BUILD_OSP1, BUILD_IOF1, BUILD_GRP, ETH_PROD, CABS_TIER, PRODUCT, ORDER_RECD_MONTH, ORDER_COMP_MONTH, INIT_ASR,
FIRST_CLEAN_ASR, CLEAN_ASR, ORIG_CONF_DT, ASRCONF_DT, COMPLETION_DT, DD_TASK_COMP, EXCLUDE, WMRCA, WMRCA_DESC, DD_STATUS,
COMPLETION_DT-INIT_ASR "CAL - INIT ASR TO COMPLETION",
COMPLETION_DT-FIRST_CLEAN_ASR "CAL - FIRST CLEAN ASR TO COMPLETION",
COMPLETION_DT-CLEAN_ASR "CAL - FINAL CLEAN ASR TO COMPLETION",
ORIG_CONF_DT-INIT_ASR "CAL - INIT ASR TO 1ST FOC",
ORIG_CONF_DT-FIRST_CLEAN_ASR "CAL - FIRST CLEAN ASR TO 1ST FOC",
(COMPLETION_DT-INIT_ASR)-2*FLOOR((COMPLETION_DT-INIT_ASR)/7)-DECODE(SIGN(TO_CHAR(COMPLETION_DT,'D')-
 TO_CHAR(INIT_ASR,'D')),-1,2,0)+DECODE(TO_CHAR(COMPLETION_DT,'D'),7,1,0)-DECODE(TO_CHAR(INIT_ASR,'D'),7,1,0) "BUS - INIT ASR TO COMPLETION",
(COMPLETION_DT-FIRST_CLEAN_ASR)-2*FLOOR((COMPLETION_DT-FIRST_CLEAN_ASR)/7)-DECODE(SIGN(TO_CHAR(COMPLETION_DT,'D')-
 TO_CHAR(FIRST_CLEAN_ASR,'D')),-1,2,0)+DECODE(TO_CHAR(COMPLETION_DT,'D'),7,1,0)-DECODE(TO_CHAR(FIRST_CLEAN_ASR,'D'),7,1,0) "BUS - FIRST CLEAN ASR TO COMPLETION", 
(COMPLETION_DT-CLEAN_ASR)-2*FLOOR((COMPLETION_DT-CLEAN_ASR)/7)-DECODE(SIGN(TO_CHAR(COMPLETION_DT,'D')-
 TO_CHAR(CLEAN_ASR,'D')),-1,2,0)+DECODE(TO_CHAR(COMPLETION_DT,'D'),7,1,0)-DECODE(TO_CHAR(CLEAN_ASR,'D'),7,1,0) "BUS - FINAL CLEAN ASR TO COMPLETION",
(ORIG_CONF_DT-INIT_ASR)-2*FLOOR((ORIG_CONF_DT-INIT_ASR)/7)-DECODE(SIGN(TO_CHAR(ORIG_CONF_DT,'D')-
 TO_CHAR(INIT_ASR,'D')),-1,2,0)+DECODE(TO_CHAR(ORIG_CONF_DT,'D'),7,1,0)-DECODE(TO_CHAR(INIT_ASR,'D'),7,1,0) "BUS - INIT ASR TO 1ST FOC",
(ORIG_CONF_DT-FIRST_CLEAN_ASR)-2*FLOOR((ORIG_CONF_DT-FIRST_CLEAN_ASR)/7)-DECODE(SIGN(TO_CHAR(ORIG_CONF_DT,'D')-
 TO_CHAR(FIRST_CLEAN_ASR,'D')),-1,2,0)+DECODE(TO_CHAR(ORIG_CONF_DT,'D'),7,1,0)-DECODE(TO_CHAR(FIRST_CLEAN_ASR,'D'),7,1,0) "BUS - FIRST CLEAN ASR TO 1ST FOC"
FROM (
-------------
SELECT DOC_NUM, PON, ACNA, PRIMARY_CARRIER_NAME, SUPP, ACT_IND, SGMT, CIRCUIT_ID, CLEAN_ID, CIRCUIT_TYPE, ECCKT_TYPE, EVCI, CIRC_ORDER, UNI_SPEED, EVC_SPEED, MBPS,  
STATE, EU_NAME, EU_ADDRESS, EU_CITY, EU_STATE, EU_ZIPCD, EO_CLLI, LATA, P_NUM, PROJECT_ID, NC, NC_OPT, SEI, SPEC, LREF_SPEC, ICSC,
RUID1, RUID2, LOS, EXPEDITE, DESIGN_ID, BUILD_OSP, BUILD_IOF, BUILD_OSP1, BUILD_IOF1, 
CASE WHEN SUBSTR(BUILD_IOF1,4,8) = 'IOFMINOR' THEN 'MINOR BUILD'
     WHEN SUBSTR(BUILD_IOF1,4,8) = 'IOFMAJOR' THEN 'MAJOR BUILD'
     WHEN SUBSTR(BUILD_IOF1,4,10) = 'IOFCOMPLEX' THEN 'COMPLEX BUILD'
     WHEN SUBSTR(BUILD_OSP1,4,8) = 'OSPMINOR' THEN 'MINOR BUILD'
     WHEN SUBSTR(BUILD_OSP1,4,8) = 'OSPMAJOR' THEN 'MAJOR BUILD'
     WHEN SUBSTR(BUILD_OSP1,4,10) = 'OSPCOMPLEX' THEN 'COMPLEX BUILD'
     WHEN BUILD_OSP IN ('360','362','363') THEN 'MAJOR BUILD'
 ELSE 'PORT ADD/NO BUILD' END AS BUILD_GRP,
ETH_PROD, CABS_TIER,
CASE WHEN SUBSTR(ETH_PROD,1,5) = 'EPATH' THEN 'EPATH'
     WHEN SUBSTR(ETH_PROD,1,3) = 'EIA' THEN 'EIA'
     WHEN ETH_PROD = 'FOTS' THEN 'FOTS'
     WHEN SUBSTR(ETH_PROD,1,6) = 'DRKFBR' THEN 'DRKFBR'
     WHEN SUBSTR(CIRCUIT_TYPE,1,3) = 'ETH' THEN 'ETHERNET_OTHER'
     ELSE 'TDM/OCN/OTHER' END AS PRODUCT,
CASE WHEN INIT_ASR IS NULL THEN NULL ELSE TO_CHAR(INIT_ASR,'YYYYMM') END AS ORDER_RECD_MONTH,
TO_CHAR(DD_TASK_COMP,'yyyymm') AS ORDER_COMP_MONTH, INIT_ASR, 
CASE WHEN FIRST_CLEAN_ASR IS NULL THEN INIT_ASR ELSE FIRST_CLEAN_ASR END FIRST_CLEAN_ASR,
CLEAN_ASR, ORIG_CONF_DT, ASRCONF_DT, COMPLETION_DT, DD_TASK_COMP, EXCLUDE, WMRCA, WMRCA_DESC,
CASE WHEN EXCLUDE = 'YES' THEN 'Exclude'
     WHEN (COMPLETION_DT <= DD OR DD IS NULL) THEN 'Met'
     WHEN (COMPLETION_DT > DD AND WMRCA IN ('CU01','CU02','CU03','CU04','CU05','DS02','CA22','EX01','CU51','CU52','CU53','CU54','DS52','PM53')) THEN 'Met'
           -- WHEN (COMPLETION_DT > DD AND WMRCA IS NULL AND WM IN ('CU01','CU02','CU03','CU04','CU05','DS02','CA22','EX01','CU51','CU52','CU53','CU54','DS52','PM53')) THEN 'MET'
            ELSE 'Miss' END DD_STATUS,
ROW_NUMBER() OVER (PARTITION BY DOC_NUM ORDER BY CIRC_ORDER, CIRCUIT_ID) R           
FROM ( 
-- SUBQ3 --
SELECT INIT_ASR, CLEAN_ASR, TRUNC(ORIG_CONF_DT) ORIG_CONF_DT, ASRCONF_DT, DD_TASK_COMP, 
CASE WHEN ACCEPTANCE_DT IS NULL THEN DD_TASK_COMP
            WHEN ACCEPTANCE_DT <= DD_TASK_COMP AND ACCEPTANCE_DT > CLEAN_ASR THEN ACCEPTANCE_DT 
            ELSE DD_TASK_COMP END COMPLETION_DT, 
TRUNC((SELECT MAX(DATE_ENTERED) DT5 FROM NOTES NTS5 WHERE NTS5.DOCUMENT_NUMBER = SUBQ2.DOC_NUM AND SUBSTR(NOTE_TEXT,1,7) = 'VERSION' AND NTS5.DATE_ENTERED <= SUBQ2.ORIG_CONF_DT)) AS FIRST_CLEAN_ASR,
CASE WHEN SUBSTR(FIRST_NOTE,1,16) = 'Created from pon' THEN 'YES' ELSE '' END EXCLUDE,
WMRCA, RCA_JEOP_TYPE, WMRCA_DESC, EVCI,
PRIMARY_CARRIER_NAME, DOC_NUM, PON, SUPP, ACT_IND, ACNA, 
CASE WHEN (SUBSTR(P_NUM,1,3) IN ('DKF') AND SGMT = 'WIRELESS') THEN 'WIRELESS_TWR' ELSE SGMT END AS SGMT,
TRUNC(DESIRED_DD,'DD') AS DD, REGEXP_REPLACE(EXCHANGE_CARRIER_CIRCUIT_ID,'[^a-zA-Z0-9'']','') AS CLEAN_ID, EXCHANGE_CARRIER_CIRCUIT_ID CIRCUIT_ID, CIRCUIT_TYPE, 
CASE WHEN CIRCUIT_TYPE IN ('ETHERNET-UNI','ETHERNET-NNI') THEN 1
     WHEN CIRCUIT_TYPE IN ('ETHERNET-EVC') THEN 2
     ELSE 3 END CIRC_ORDER,
UNI_SPEED, EVC_SPEED, ECCKT_TYPE,
CASE WHEN CIRCUIT_TYPE IN ('ETHERNET-UNI','ETHERNET-NNI') THEN UNI_SPEED
     WHEN CIRCUIT_TYPE = 'ETHERNET-EVC' THEN EVC_SPEED
     ELSE NULL END AS MBPS,
STATE, EO_CLLI, LATA,  P_NUM, PROJECT_ID, NC, NC_OPT, RATE_CODE, SEI, SPEC, LREF_SPEC, ICSC, RUID1, RUID2, LOS, EXPEDITE,
EU_NAME, EU_ADDRESS, EU_CITY, EU_STATE, EU_ZIPCD, DESIGN_ID, BUILD_OSP, BUILD_IOF,
(SELECT UDCV.DISPLAY_VALUE FROM USER_DATA_CATEGORY_VALUES UDCV WHERE SUBQ2.BUILD_IOF = UDCV.USER_DATA_CATEGORY_VALUE_ID) AS BUILD_IOF1,
(SELECT UDCV.DISPLAY_VALUE FROM USER_DATA_CATEGORY_VALUES UDCV WHERE SUBQ2.BUILD_OSP = UDCV.USER_DATA_CATEGORY_VALUE_ID) AS BUILD_OSP1,       
NVL(  -- FIND PRODUCT USING USOCS
( 
SELECT MIN(SUBQ1.ETH_PROD) FROM
(
SELECT DISTINCT
ABCD.DOCUMENT_NUMBER,
ABCU.USOC_CODE,
CASE WHEN ABCU.USOC_CODE IN ('EP1PA','EP2GX','EP3GX','EP4GX','EP5GX','EP6GX','EP7GX','EP8GX','EP9GX','EPA3X','EPA5X','EPA6X','EPAAX','EPABX',
                             'EPACX','EPADX','EPAEX','EPAFX','EPAGX','EPAHX','EPAIX','EPAJX','EPAKX','EPALX','EPAMX','EPANX','EPAOX','EPAPX',
                             'EPAQX','EPARX','EPASX','EPATX','EPAUX','EPEXC','EPEXE','EPFXC','EPFXE','EPG1X','EPG3X','EPG5X','EPG8X','EPG9X',
                             'EPGAX','EPGBX','EPGCX','EPGDX','EPGEX','EPGFX','EPGGX','EPGHX','EPGIX','EPGJX','EPGKX','EPGLX','EPGMX','EPGNX',
                             'EPGOX','EPGPX','EPGQX','EPGRX','EPGSX','EPGTX','EPGUX','EPGVX','EPGWX','EPGXX','EPGYX','EPGZX','EPN1P','EPNXP',
                             'EPP1X','EPP3X','EPP5X','EPP6X','EPP8X','EPP9X','EPPAX','EPPBX','EPPCX','EPPDX','EPPEX','EPPFX','EPPGX','EPPHX',
                             'EPPIX','EPPJX','EPPKX','EPPLX','EPPMX','EPPNX','EPPOX','EPPPX','EPPQX','EPPRX','EPPSX','EPPTX','EPPUX','EPPVX',
                             'EPPWX','EPPXX','EPPYX','EPPZX','EPS1X','EPS3X','EPS5X','EPS8X','EPS9X','EPSAX','EPSBX','EPSCX','EPSDX','EPSEX',
                             'EPSFX','EPSGX','EPSHX','EPSIX','EPSJX','EPSKB','EPSKX','EPSLX','EPSMX','EPSNX','EPSOX','EPSPX','EPSQX','EPSRX',
                             'EPSSX','EPSTX','EPSUX','EPSVX','EPSWX','EPSXX','EPSYX','EPSZP','EPSZX','EPXPA'
       ) THEN 'EPATH' 
     WHEN ABCU.USOC_CODE IN ('EPGAT','EPGTA','EPGTB','EPGTC','EPGTD','EPGTE','EPGTF','EPGTG','EPGTH','EPGTI','EPGTJ','EPGTK','EPGTL','EPGTM','EPGTN',
                             'EPGTO','EPGTP','EPGTQ','EPGTR','EPGTS','EPGTT','EPGTU','EPGTV','EPGTW','EPGTY','EPGTZ','EPGXT','EPPAT','EPPTA','EPPTB',
                             'EPPTC','EPPTD','EPPTE','EPPTF','EPPTG','EPPTH','EPPTI','EPPTJ','EPPTK','EPPTL','EPPTM','EPPTN','EPPTO','EPPTP','EPPTQ',
                             'EPPTR','EPPTS','EPPTT','EPPTU','EPPTV','EPPTW','EPPTY','EPPTZ','EPPXT','EPSAT','EPSTA','EPSTB','EPSTC','EPSTD','EPSTE',
                             'EPSTF','EPSTG','EPSTH','EPSTI','EPSTJ','EPSTK','EPSTL','EPSTM','EPSTN','EPSTO','EPSTP','EPSTQ','EPSTR','EPSTS','EPSTT',
                             'EPSTU','EPSTV','EPSTW','EPSTY','EPSTZ','EPSXT','ESGAT','ESGTA','ESGTB','ESGTC','ESGTF','ESGTK','ESGTL','ESGTO','ESGTT',
                             'ESGTU','ESGTV','ESGTW','ESGTY','ESGTZ','ESGXT','ESPAT','ESPTA','ESPTB','ESPTC','ESPTF','ESPTK','ESPTL','ESPTO','ESPTT',
                             'ESPTU','ESPTV','ESPTW','ESPTY','ESPTZ','ESPXT','ESSAT','ESSTA','ESSTB','ESSTC','ESSTF','ESSTK','ESSTL','ESSTO','ESSTT',
                             'ESSTU','ESSTV','ESSTW','ESSTY','ESSTZ','ESSXT','NE100','NEP10','NEP1G','U100G','UEP10','UEP1G','UEPAM'
       ) THEN 'EPATH TIER' 
     WHEN ABCU.USOC_CODE IN ('P2100','P2P10','P2P1G','P2PAM','PPGAT','PPGTA','PPGTB','PPGTC','PPGTD','PPGTE','PPGTF','PPGTG','PPGTH','PPGTI','PPGTJ',
                             'PPGTK','PPGTL','PPGTM','PPGTN','PPGTO','PPGTP','PPGTQ','PPGTR','PPGTS','PPGTT','PPGTU','PPGTV','PPGTW','PPGTX','PPGTY',
                             'PPGTZ','PPPAT','PPPTA','PPPTB','PPPTC','PPPTD','PPPTE','PPPTF','PPPTG','PPPTH','PPPTI','PPPTJ','PPPTK','PPPTL','PPPTM',
                             'PPPTN','PPPTO','PPPTP','PPPTQ','PPPTR','PPPTS','PPPTT','PPPTU','PPPTV','PPPTW','PPPTX','PPPTY','PPPTZ','PPSAT','PPSTA',
                             'PPSTB','PPSTC','PPSTD','PPSTE','PPSTF','PPSTG','PPSTH','PPSTI','PPSTJ','PPSTK','PPSTL','PPSTM','PPSTN','PPSTO','PPSTP',
                             'PPSTQ','PPSTR','PPSTS','PPSTT','PPSTU','PPSTV','PPSTW','PPSTX','PPSTY','PPSTZ'
       ) THEN 'EPATH TIER P2P' 
     WHEN ABCU.USOC_CODE IN ('SE10N','SEEVC','SENNI','SEUNI'
       ) THEN 'EPATH WIRELESS' 
     WHEN ABCU.USOC_CODE IN ('EI10G','EIA1G','EIACM','EIAXM','EIV1G','EIV1M','EIV2G','EIV2M','EIV3C','EIV3G','EIV3M','EIV3X','EIV4C','EIV4G','EIV4M',
                             'EIV4X','EIV5C','EIV5G','EIV5M','EIV5X','EIV6C','EIV6G','EIV6M','EIV6X','EIV7C','EIV7G','EIV7M','EIV7X','EIV8C','EIV8G',
                             'EIV8M','EIV8X','EIV9C','EIV9G','EIV9M','EIV9X','EIVCC','EIVCM','EIVXM','EIVXV','EIVXX','ENP15','EPT10','EPT1G','EPT1G',
                             'EPT1M','EPT2G','EPT2M','EPT3C','EPT3G','EPT3M','EPT3X','EPT4C','EPT4G','EPT4M','EPT4X','EPT5C','EPT5C','EPT5G','EPT5M',
                             'EPT5M','EPT5X','EPT5X','EPT6C','EPT6G','EPT6M','EPT6X','EPT7C','EPT7G','EPT7M','EPT7X','EPT8C','EPT8G','EPT8M','EPT8X',
                             'EPT9C','EPT9G','EPT9M','EPT9X','EPTCC','EPTCM','EPTCM','EPTXM','EPTXM','EPTXV','EPTXX','EPTXX','EV10G'
       ) THEN 'EIA'
     WHEN ABCU.USOC_CODE IN ('EIAAT','EIATA','EIATB','EIATC','EIATD','EIATE','EIATF','EIATG','EIATH','EIATI','EIATJ','EIATK','EIATL','EIATM','EIATN',
                             'EIATO','EIATP','EIATQ','EIATR','EIATS','EIATT','EIATU','EIATV','EIATW','EIATX','EIATY','EIATZ','UE100','UEI10','UEIAG','UEIAM'
       ) THEN 'EIA TIER'
     WHEN ABCU.USOC_CODE IN ('VLPCT','VLPPT','VLUPT'
       ) THEN 'FOTS'
     WHEN ABCU.USOC_CODE IN ('ATEN1','ENNL2','ENP00','EVSB3','EVV1P','EVV1R','EVV1X','EVV2P','EVV2R','EVV2X','EVV3P','EVV3R','EVV3X','EVV4P','EVV4R',
                             'EVV4X','EVV5P','EVV5R','EVV5X','EVV6P','EVV6R','EVV6X','EVV7P','EVV7R','EVV7X','EVV8P','EVV8R','EVV8X','EVV9P','EVV9R',
                             'EVV9X','EVVFP','EVVFR','EVVFX','EVVGA','EVVGP','EVVGR','EVVGX','EVVHR','EVVHX','EVVIR','EVVJP','EVVJR','EVVJX','EVVKP',
                             'EVVKR','EVVKX','EVVLP','EVVLR','EVVLX','EVVMP','EVVMR','EVVMX','EVVNP','EVVNR','EVVNX','EVVOP','EVVOR','EVVOX','EVVPP',
                             'EVVPR','EVVPX','EVVQP','EVVQR','EVVQX','EVVRP','EVVRR','EVVRR','EVVRX','EVVSP','EVVSR','EVVSR','EVVSX','EVVTP','EVVTR',
                             'EVVTR','EVVTX','EVVUP','EVVUR','EVVUX','EVVVP','EVVVR','EVVVR','EVVVX','EVVWP','EVVWR','EVVWR','EVVWX','EVVXA','EVVXP',
                             'EVVXR','EVVXR','EVVXX','EVVYX','EVZAA','EVZBA','EVZCA','EVZCP','EVZCR','EVZDP','EVZDR','EVZDX','EVZEP','EVZER','EVZEX',
                             'EVZFP','EVZFR','EVZFX','EVZGP','EVZGR','EVZGX','EVZJP','EVZJR','EVZJX','EVZKP','EVZKR','EVZKX','EVZLP','EVZLR','EVZLX',
                             'EVZMP','EVZMR','EVZPP','EVZPR','EVZPX','EVZQP','EVZQR','EVZQX','EVZRP','EVZRR','EVZRX','EVZSP','EVZSR','EVZSX','EVZTP',
                             'EVZTR','EVZTX','EVZUP','EVZUR','EVZUX','EVZVP','EVZVR','EVZVX','EVZWP','EVZWR','EVZWR','EVZWX','EVZXP','EVZXR','EVZXR',
                             'EVZXX','EVZYP','EVZYR','EVZYX','EVZZP','EVZZR','EVZZX','EYOB3','EYOB5','EYOBX','LNHL3','LNHL5','LNHL7','LNHLX','P9CB3',
                             'P9CB5','P9CBX','PA10G'
       ) THEN 'TLS'
     WHEN ABCU.USOC_CODE IN ('E10AX','E10GG','E10GN','E10GN','E10GR','E10NG','E10NG','E10PN','E10PN','E10SG','E1GAT','EG10G','EKCU1','EKCU2','EKCU3',
                             'EKCU5','EKDA1','EKDA2','EKDA3','EKDA5','EKDE1','EKDE2','EKDE3','EKDE5','EKEE1','EKEE2','EKEE3','EKEE5','EKET1','EKET2',
                             'EKET3','EKET5','EKFM3','EKFS1','EKFS2','EKFS3','EKFS5','EM3P1','EM3P2','EM3P3','EM3P5','EM5P1','EM5P2','EM5P3','EM5P5',
                             'EM8P1','EM8P2','EM8P3','EM8P5','EMP31','EMP32','EMP33','EMP35','EMP51','EMP52','EMP53','EMP55','EP10A','EP10A','EP10G',
                             'ES10G','ESCU1','ESCU2','ESCU3','ESCU5','ESMU1','ESMU2','ESMU3','ESMU5','ESP31','ESP31','ESP32','ESP32','ESP33','ESP33',
                             'ESP35','ESP35','ESP51','ESP52','ESP53','ESP55','ESP81','ESP82','ESP83','ESP85','EV10T','EV10U','EV10U','EV15S','EV15T',
                             'EV15U','EV15U','EV20T','EV20U','EV20U','EV25U','EV2CT','EV2CU','EV2CU','EV2GG','EV2PG','EV2SG','EV30T','EV30U','EV30U',
                             'EV3CT','EV3CU','EV3CU','EV3GG','EV3PG','EV3SG','EV40T','EV40U','EV40U','EV4CT','EV4CU','EV4CU','EV4GG','EV4PG','EV4SG',
                             'EV50T','EV50U','EV50U','EV5CT','EV5CU','EV5CU','EV5GG','EV5PG','EV5SG','EV60T','EV60U','EV60U','EV6CT','EV6CU','EV6CU',
                             'EV6GG','EV6PG','EV6SG','EV70T','EV70U','EV70U','EV7CT','EV7CU','EV7CU','EV7GG','EV7PG','EV7SG','EV80T','EV80U','EV80U',
                             'EV8CT','EV8CU','EV8GG','EV8PG','EV8SG','EV90T','EV90U','EV90U','EV9CT','EV9CU','EV9GG','EV9PG','EV9SG','EVCGO','EVCGO',
                             'EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO',
                             'EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCGO','EVCPL','EVCPL','EVCPL',
                             'EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL',
                             'EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCPL','EVCSI','EVG01','EVG02','EVG03',
                             'EVG04','EVG05','EVG06','EVG07','EVG08','EVG09','EVG10','EVG15','EVG20','EVG30','EVG31','EVG32','EVG33','EVG35','EVG40',
                             'EVG50','EVG51','EVG52','EVG53','EVG55','EVG60','EVG70','EVG80','EVG90','EVGC1','EVGGA','EVGGA','EVGGP','EVGM1','EVGSP',
                             'EVGSP','EVGV2','EVGV3','EVGV4','EVGV5','EVGV6','EVGV7','EVGV8','EVGV9','EVGVC','EVGVM','EVGX1','EVL1T','EVL1U','EVL1U',
                             'EVL2T','EVL2U','EVL2U','EVL3T','EVL3U','EVL3U','EVL4T','EVL4U','EVL4U','EVL5T','EVL5U','EVL5U','EVL6T','EVL6U','EVL6U',
                             'EVL7T','EVL7U','EVL7U','EVL8T','EVL8U','EVL8U','EVL9T','EVL9U','EVL9U','EVLCT','EVLCU','EVLCU','EVLGT','EVLMT','EVLMU',
                             'EVLMU','EVP01','EVP02','EVP03','EVP04','EVP05','EVP06','EVP07','EVP08','EVP09','EVP10','EVP15','EVP20','EVP30','EVP40',
                             'EVP50','EVP60','EVP70','EVP80','EVP90','EVPC1','EVPGA','EVPGA','EVPGP','EVPM1','EVPV2','EVPV3','EVPV4','EVPV5','EVPV6',
                             'EVPV7','EVPV8','EVPV9','EVPVC','EVPVM','EVPX1','EVSPA','EVSPA'
       ) THEN 'EVPL'
     WHEN ABCU.USOC_CODE IN ('AS3EC','EYQEX','EYQFX','EYQGX','EYQLX','EYQMX','EYQNX','R61BX','R61CX','R61FX','R61HX','R61NX','R61RX','R61SX','R6E2X',
                             'R6E4X','R6E8X','R6EAX','R6EBX','R6EDX','R6EHX','R6ELX','R6ENX','R6EOX','R6EQX','R6ERX','R6ESX','R6ETX','R6EUX','R6EZX','SWEVC'
       ) THEN 'ASE' 
     WHEN ABCU.USOC_CODE IN ('AG121','AG123','AG125','AG131','AG133','AG135','AG141','AG143','AG145','AG15X','AG161','AG163','AG165','ECN10','EOE31',
                             'EOE33','EOE35','EOE3X','EOE41','EOE43','EOE45','EOE4X','EOE51','EOE53','EOE55','EOE5X','EOE61','EOE63','EOE65','EOE6X',
                             'EOE71','EOE73','EOE75','EOE7X','EOEA1','EOEA3','EOEA5','EOEAX','EOEB1','EOEB3','EOEB5','EOEBX','EOEC1','EOEC3','EOEC5',
                             'EOECX','EOED1','EOED3','EOED5','EOEDX','EOEE1','EOEE3','EOEE5','EOEEX','EOEF1','EOEF3','EOEF5','EOEFX','EOEG1','EOEG3',
                             'EOEG5','EOEGX','EOEH1','EOEH3','EOEH5','EOEHX','EOEJ1','EOEJ3','EOEJ5','EOEJX','EOEK1','EOEK3','EOEK5','EOEKX','EOEL1',
                             'EOEL3','EOEL5','EOELX','EOEM1','EOEM3','EOEM5','EOEMX','EOEN1','EOEN3','EOEN5','EOENX','EOEO1','EOEO3','EOEO5','EOEOX',
                             'EOEP1','EOEP3','EOEP5','EOEPX','EOES1','EOES3','EOES5','EOESX','EOET1','EOET3','EOET5','EOETX','EOEU1','EOEU3','EOEU5',
                             'EOEUX','EOEV1','EOEV3','EOEV5','EOEVX','EOEW1','EOEW3','EOEW5','EOEWX','EOEX1','EOEX3','EOEX5','EOEXX','EOEY1','EOEY3',
                             'EOEY5','EOEYX','EOEZ1','EOEZ3','EOEZ5','EOEZX','EWS10','OAOUX','ORUDX','S9R'
       ) THEN 'VZON'
     WHEN ABCU.USOC_CODE IN ('E10PG','E10PP','E10PS','EP1NG','EP1NP','EP1NS','EP20G','EP20P','EP20S','EP2GG','EP2GP','EP2GS','EP30G','EP30P','EP3GG',
                             'EP3GP','EP3GS','EP40G','EP40P','EP4GG','EP4GP','EP4GS','EP50G','EP50P','EP5GG','EP5GP','EP5GS','EP60P','EP6GG','EP6GP',
                             'EP6GS','EP70G','EP70P','EP7GG','EP7GP','EP7GS','EP80G','EP80P','EP8GG','EP8GP','EP8GS','EP90P','EP9GG','EP9GP','EP9GS',
                             'EPL1B','EPL1D','EPL1G','EPL1P','EPL1R','EPL1S','EPL2B','EPL2D','EPL2G','EPL2P','EPL2R','EPL2S','EPL3B','EPL3D','EPL3G',
                             'EPL3P','EPL3R','EPL3S','EPL4B','EPL4D','EPL4G','EPL4P','EPL4R','EPL4S','EPL5B','EPL5D','EPL5G','EPL5P','EPL5R','EPL5S',
                             'EPL6B','EPL6D','EPL6G','EPL6P','EPL6R','EPL6S','EPL7B','EPL7D','EPL7G','EPL7P','EPL7R','EPL7S','EPL8B','EPL8D','EPL8G',
                             'EPL8P','EPL8R','EPL8S','EPL9B','EPL9D','EPL9G','EPL9P','EPL9R','EPL9S','EPLAB','EPLAD','EPLAG','EPLAP','EPLAR','EPLAS',
                             'EPLBB','EPLBD','EPLBG','EPLBP','EPLBR','EPLBS','EPLCB','EPLCD','EPLCG','EPLCP','EPLCR','EPLCS','EPLDB','EPLDD','EPLDG',
                             'EPLDP','EPLDR','EPLDS','EPLEB','EPLED','EPLEG','EPLEP','EPLER','EPLES','EPLFB','EPLFD','EPLFG','EPLFP','EPLFR','EPLFS',
                             'EPLGB','EPLGD','EPLGG','EPLGP','EPLGR','EPLGS','EPLHB','EPLHD','EPLHG','EPLHP','EPLHR','EPLHS','EPLIB','EPLID','EPLIG',
                             'EPLIP','EPLIR','EPLIS','EPLJB','EPLJD','EPLJG','EPLJP','EPLJR','EPLJS','EPLKB','EPLKD','EPLKG','EPLKP','EPLKR','EPLKS',
                             'EPLLB','EPLLD','EPLLR','EPLMB','EPLMD','EPLMR','EPLMS','EPLNB','EPLND','EPLNS','EPLOB','EPLOD','EPLOR','EPLOS','EPLPB',
                             'EPLPD','EPLPG','EPLPR','EPLPS','EPLQB','EPLQD','EPLQR','EPLQS','EPLRB','EPLRD','EPLRR','EPLRS','EPLSB','EPLSD','EPLSG',
                             'EPLSR','EPLSS','EPLTB','EPLTD','EPLTR','EPLUG','EPLUP','EPLUR','EPLUS','EPLVG','EPLVP','EPLVS'
       ) THEN 'EPL'
     WHEN ABCU.USOC_CODE IN ('1H48S','1L5XX','CPAAX','CPAEX','CPAFX','CPAGX','CPAHX','CPALX','CPATX','OCLGX','TMECS','VBBGX','VU4'
       ) THEN 'GIGA,DECA,WAVE'
     WHEN ABCU.USOC_CODE IN ('M2CBX','OPTSE','P9FEX','P9FFX','P9FGX','P9FHX','R6E2B','R6E2C','R6E4B','R6E4C','R6E8B','R6E8C','R6EAB','R6EAC','R6EBB',
                             'R6EBC','R6EDB','R6EDC','R6EHB','R6EHB','R6EHC','R6ELB','R6ELC','R6ENB','R6ENC','R6EQB','R6EQC','R6ETB','R6ETC','R6EUB',
                             'R6EUC','R6EZB','R6EZC'
       ) THEN 'OPT-E-MAN'
     WHEN ABCU.USOC_CODE IN ('DKFWC'
       ) THEN 'DRK FBR - NON REG'
     WHEN ABCU.USOC_CODE IN ('1ZUTH','OD71X','TNTQX','TNTRX','TNTSX'
       ) THEN 'OWS'
     WHEN ABCU.USOC_CODE IN ('APTBX','APTMX','APTU1'
       ) THEN 'ATM'
     WHEN ABCU.USOC_CODE IN ('EOSJX'
       ) THEN 'ETH OVER SONET'
     WHEN ABCU.USOC_CODE IN ('EISX3'
       ) THEN 'TDM'
     ELSE NULL END AS ETH_PROD   
FROM ACCESS_BILLING_CIRCUIT_DATA ABCD
INNER JOIN ACCESS_BILLING_CKT_LOC_USOCS ABCU ON ABCD.CABS_CIRCUIT_ID = ABCU.CABS_CIRCUIT_ID
WHERE SUBSTR(ABCD.EXCHANGE_CARRIER_CIRCUIT_ID,4,1) IN ('K','S')
AND ABCD.DOCUMENT_NUMBER = SUBQ2.DOC_NUM
)SUBQ1
WHERE SUBQ1.ETH_PROD <> 'OTHER'),
  CASE WHEN SUBSTR(P_NUM,1,4) = 'EPAV' THEN 'EPATH TIER'
       WHEN SUBSTR(P_NUM,1,3) = 'EPA' THEN 'EPATH'
       WHEN SUBSTR(P_NUM,1,4) IN ('EIAV','EIBV') THEN 'EIA TIER'  
       WHEN SUBSTR(P_NUM,1,2) = 'EI' THEN 'EIA'  
       WHEN SUBSTR(P_NUM,1,3) IN ('FOT','VEL') THEN 'FOTS'
       WHEN SUBSTR(P_NUM,1,3) IN ('DKF') THEN 'DRKFBR_NONREG'
       WHEN SUBSTR(P_NUM,1,3) IN ('EDG') THEN 'COLLO_NONREG'
       ELSE NULL END
)AS ETH_PROD,
ORIG_FOC_DD, CABS_TIER,
(SELECT AUD.CRDD FROM ASR_USER_DATA AUD WHERE AUD.DOCUMENT_NUMBER = SUBQ2.DOC_NUM) AS CRDD 
FROM 
( -- SUBQ2 - ADD OTHER NEEDED INFO ON CIRCUITS ----------------------------------------------------------------------------------
SELECT DISTINCT
AE.PRIMARY_CARRIER_NAME,
CASE WHEN AE.PRIMARY_ID = 'WIRELESS' THEN 'WIRELESS' ELSE 'WIRELINE' END AS SGMT,
(SELECT MAX(CCV.CA_VALUE) KEEP (DENSE_RANK LAST ORDER BY CCV.CONN_CA_VALUE_ID) * 
  (CASE WHEN MAX(CCV.CA_VALUE_UOM) KEEP (DENSE_RANK LAST ORDER BY CCV.CONN_CA_VALUE_ID) = 'G' THEN 1000 ELSE 1 END)
  FROM CONN_CA_VALUE CCV  WHERE SUBQ.DESIGN_ID = CCV.CIRCUIT_DESIGN_ID AND  CCV.CA_VALUE_LABEL = 'CIR') AS EVC_SPEED,
NVL((SELECT MAX(CCV.CA_VALUE) KEEP (DENSE_RANK LAST ORDER BY CCV.CONN_CA_VALUE_ID) * 
     (CASE WHEN MAX(CCV.CA_VALUE_UOM) KEEP (DENSE_RANK LAST ORDER BY CCV.CONN_CA_VALUE_ID) = 'G' THEN 1000 ELSE 1 END)
     FROM CONN_CA_VALUE CCV  WHERE SUBQ.DESIGN_ID = CCV.CIRCUIT_DESIGN_ID AND  CCV.CA_VALUE_LABEL = 'SPEED'), 
   CASE WHEN (SUBQ.NC = 'KD' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KD') THEN 10
     WHEN (SUBQ.NC = 'KE' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KE') THEN 100
     WHEN (SUBQ.NC = 'KF' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KF') THEN 1000
     WHEN (SUBQ.NC = 'KG' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KG') THEN 10000
     WHEN (SUBQ.NC = 'KJ' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KJ') THEN 100000
     WHEN (SUBQ.NC = 'KP' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KP') THEN 10
     WHEN (SUBQ.NC = 'KQ' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KQ') THEN 100
     WHEN (SUBQ.NC = 'KR' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KR') THEN 1000
     WHEN (SUBQ.NC = 'KS' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KS') THEN 10000     
     WHEN (SUBQ.NC = 'KU' OR SUBSTR(SUBQ.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'KU') THEN 100000
     ELSE NULL END
  )AS UNI_SPEED,
SUBQ.*, 
--------------------------------------------------------------------------------------------------------------------------------
(SELECT NL.LOCATION_NAME FROM NETWORK_LOCATION NL WHERE NL.LOCATION_ID = SL.LOCATION_ID) AS EU_NAME,
TRIM((SELECT ADDR.STREET_NBR ||' '|| ADDR.ADDR_COMP2 ||' '|| ADDR.ADDR_COMP3 ||' '|| ADDR.STREET_NM ||' '|| ADDR.STREET_SUF 
           FROM ADDRESS ADDR WHERE SL.ADDRESS_ID = ADDR.ADDRESS_ID)) AS EU_ADDRESS,
(SELECT GA.INSTANCE_VALUE FROM ADDRESS ADDR 
      INNER JOIN GA_INSTANCE GA ON ADDR.GA_INSTANCE_ID_CITY = GA.GA_INSTANCE_ID
      WHERE SL.ADDRESS_ID = ADDR.ADDRESS_ID AND GA.GAT_TYPE_NM = 'CITY' AND GA.GAT_TYPE_COUNTRY_EXT_ID = 47) AS EU_CITY,
(SELECT GA.INSTANCE_VALUE_ABBREV FROM ADDRESS ADDR 
      INNER JOIN GA_INSTANCE GA ON ADDR.GA_INSTANCE_ID_STATE_CD = GA.GA_INSTANCE_ID
      WHERE SL.ADDRESS_ID = ADDR.ADDRESS_ID AND GA.GAT_TYPE_NM = 'STATE' AND GA.GAT_TYPE_COUNTRY_EXT_ID = 47) AS EU_STATE,
(SELECT ADDR.POSTAL_CD FROM ADDRESS ADDR WHERE SL.ADDRESS_ID = ADDR.ADDRESS_ID) AS EU_ZIPCD,      
--------------------------------------------------------------------------------------------------------------------------------
     (SELECT MIN(NTS3.DATE_ENTERED) FROM NOTES NTS3 WHERE SUBQ.DOC_NUM = NTS3.DOCUMENT_NUMBER AND NTS3.NOTE_TEXT = 'ASR-CONF TASK COMPLETED') AS ORIG_CONF_DT,
     TRUNC((SELECT MIN(NTS.DATE_ENTERED) FROM NOTES NTS WHERE SUBQ.DOC_NUM = NTS.DOCUMENT_NUMBER AND NTS.DATE_ENTERED > '01-JAN-1900' AND NTS.SYSTEM_GEN_IND = 'Y')) AS INIT_ASR,
     AUD.BUILD_OSP,
     AUD.BUILD_IOF,
     JT.JEOPARDY_REASON_DESCRIPTION WMRCA_DESC,
     (SELECT MIN(NOTE.NOTE_TEXT) KEEP (DENSE_RANK FIRST ORDER BY NOTE.NOTES_ID) FROM NOTES NOTE WHERE NOTE.DOCUMENT_NUMBER = SUBQ.DOC_NUM) FIRST_NOTE
FROM
(  -- SUBQ - ADD OTHER NEEDED INFO ON CIRCUITS ----------------------------------------------------------------------------------
SELECT DISTINCT
SR.DOCUMENT_NUMBER AS DOC_NUM,
SR.PON,
SR.SUPPLEMENT_TYPE AS SUPP,
SR.ACTIVITY_IND AS ACT_IND,
SR.CCNA,
SR.CCNA_NAME,
SR.ACNA,
SR.ACNA_NAME,
TRUNC(ASR.DATE_TIME_SENT) CLEAN_ASR,
ASR.DESIRED_DUE_DATE AS DESIRED_DD,
CIR.CIRCUIT_DESIGN_ID AS DESIGN_ID,
CIR.EXCHANGE_CARRIER_CIRCUIT_ID,
CIR.NETWORK_CHANNEL_SERVICE_CODE AS NC,
CIR.NETWORK_CHANNEL_OPTION_CODE AS NC_OPT,
CIR.RATE_CODE,
CIR.ECCKT_TYPE,
ASR.EXPEDITE_INDICATOR AS EXPEDITE,
ASR.SWITCHED_ETHERNET_INDICATOR AS SEI,
ASR.EVC_IND EVCI,
ASR.SERVICE_AND_PRODUCT_ENHANC_COD AS SPEC,
ASR.ACCESS_PROVIDER_SERV_CTR_CODE AS ICSC,
TRUNC(AUD.ACCEPTANCE_DATE) ACCEPTANCE_DT,
AUD.ORIG_FOC_DD,
TRUNC(T.ACTUAL_COMPLETION_DATE) DD_TASK_COMP,
SUBSTR(AUD.CABS_TIER,1,3) AS CABS_TIER,
ELS.SERVICE_AND_PRODUCT_ENHANC_COD AS LREF_SPEC,
EVC.RUID AS RUID1,
EVC2.RUID AS RUID2,
EVC.LOS,
JWRCA.JEOPARDY_REASON_CODE WMRCA,
JWRCA.JEOPARDY_TYPE_CD RCA_JEOP_TYPE,
CASE 
  WHEN SUBSTR (ASR.NETWORK_CHANNEL_SERVICE_CODE, 1, 1) IN ('K') AND ASRD.ACTL IS NOT NULL AND SALI2.EUNAME IS NULL AND ASR.SWITCHED_ETHERNET_INDICATOR IS NOT NULL THEN 'ETHERNET-NNI' 
  WHEN (SUBSTR(CIR.NETWORK_CHANNEL_SERVICE_CODE,1,2)    = 'SN' )
       OR (SUBSTR(ASR.SERVICE_AND_PRODUCT_ENHANC_COD,1,6)  IN ('EVPLSN','EVPLGN','EVPLPN'))
       OR (SUBSTR(ASR.SERVICE_AND_PRODUCT_ENHANC_COD,1,7)  IN ('EPLELSN','EPLELGN','EPLELPN','EPATHCP'))
       OR (SUBSTR(CIR.NETWORK_CHANNEL_SERVICE_CODE,1,1)    = 'K'
       AND NLA.CLLI_CODE IS NOT NULL 
       AND NLU.LOCATION_NAME IS NULL 
       AND ASR.SERVICE_AND_PRODUCT_ENHANC_COD <> 'GGAMAN' ) THEN 'ETHERNET-NNI'
  WHEN (SUBSTR(CIR.NETWORK_CHANNEL_SERVICE_CODE,1,2) IN ('HC','HX','PF','PK','TD') OR SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) IN ('HC','DH')) THEN 'DS1' 
  WHEN (SUBSTR (CIR.NETWORK_CHANNEL_SERVICE_CODE,1,2) = 'HF' OR SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) = 'HF') THEN 'DS3' 
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,4,1) = 'L' AND SUBSTR(ASR.PROMOTION_NBR,1,3) = 'DKF' THEN 'DK_FIBER'
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,6,5) = '/COLO' AND SUBSTR(ASR.PROMOTION_NBR,1,3) = 'EDG' THEN 'EDG_COLLO'
  WHEN SUBSTR(CIR.NETWORK_CHANNEL_SERVICE_CODE,1,1) IN ('L','X') THEN 'DS0' 
  WHEN (SUBSTR(CIR.NETWORK_CHANNEL_SERVICE_CODE,1,1) = 'K' OR SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,4,1) = 'K') THEN 'ETHERNET-UNI' 
  WHEN SUBSTR(CIR.NETWORK_CHANNEL_SERVICE_CODE,1,2) = 'SN' THEN 'ETHERNET-UNI' 
  WHEN SUBSTR(CIR.NETWORK_CHANNEL_SERVICE_CODE,1,2) IN ('OB','OD','OF','OG','OH','DU') THEN 'OCN'
  WHEN SUBSTR(CIR.NETWORK_CHANNEL_SERVICE_CODE,1,2) = 'SD' THEN 'SWITCHED' 
  WHEN SUBSTR(SR.REQUEST_TYPE,1,1) IN ('M','L') THEN 'SWITCHED' 
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) IN ('VL','CU') THEN 'ETHERNET-EVC' 
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) IN ('L1','L2','LO','LU','LV') THEN 'ETHERNET-UNI' 
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,4,1) IN ('L','X') THEN 'DS0'  
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,6,2) = 'T1' THEN 'DS1' 
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,7,2) = 'T1' THEN 'DS1'  
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,6,2) = 'T3' THEN 'DS3'  
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,7,2) = 'T3' THEN 'DS3' 
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,5,2) = '/O' THEN 'OCN' 
  WHEN SUBSTR(CIR.EXCHANGE_CARRIER_CIRCUIT_ID,3,2) = '/O' THEN 'OCN' 
  WHEN SUBSTR(ASR.NETWORK_CHANNEL_SERVICE_CODE,1,1) = 'K' THEN 'ETHERNET'
   WHEN SUBSTR(ASR.NETWORK_CHANNEL_SERVICE_CODE,1,2) = 'VL' THEN 'ETHERNET'
     ELSE 'UNKNOWN' END CIRCUIT_TYPE,
SUBSTR(NN.EXCHANGE_AREA_CLLI,5,2) AS STATE,
NN.EXCHANGE_AREA_CLLI AS EO_CLLI,
COE.LATA_NUMBER AS LATA,
TRUNC((SELECT ACTUAL_COMPLETION_DATE FROM TASK WHERE SR.DOCUMENT_NUMBER = TASK.DOCUMENT_NUMBER AND TASK_TYPE = 'ASR-CONF'),'DD') AS ASRCONF_DT,
(SELECT TSKD.ACTUAL_COMPLETION_DATE FROM TASK TSKD WHERE SR.DOCUMENT_NUMBER = TSKD.DOCUMENT_NUMBER AND TSKD.TASK_TYPE = 'DD') AS DD_COMPL_DT,
       ASR.PROMOTION_NBR AS P_NUM,
       ASR.PROJECT_IDENTIFICATION AS PROJECT_ID
FROM 
(SELECT ASR.DOCUMENT_NUMBER, ASR.DATE_TIME_SENT, ASR.DESIRED_DUE_DATE, ASR.NPA, ASR.NXX, ASR.PROJECT_IDENTIFICATION, ASR.PROMOTION_NBR, 
  ASR.LOCATION_ID, ASR.NETWORK_CHANNEL_SERVICE_CODE, REQUEST_TYPE,
  VARIABLE_TERM_ID, ACCESS_PROVIDER_SERV_CTR_CODE, SERVICE_AND_PRODUCT_ENHANC_COD, EVC_IND, NETWORK_CHANNEL_INTERFACE_CODE, EXPEDITE_INDICATOR,
  SWITCHED_ETHERNET_INDICATOR
FROM ACCESS_SERVICE_REQUEST ASR
WHERE ASR.ACTIVITY_INDICATOR IN ('N','C')  
AND (ASR.SUPPLEMENT_TYPE <> '1' OR ASR.SUPPLEMENT_TYPE IS NULL)
AND ASR.DATE_TIME_SENT > SYSDATE - 640) ASR
LEFT OUTER JOIN SERV_REQ SR ON ASR.DOCUMENT_NUMBER = SR.DOCUMENT_NUMBER
LEFT OUTER JOIN NPA_NXX NN ON ASR.NPA = NN.NPA AND ASR.NXX = NN.NXX
LEFT OUTER JOIN EVC_LVL_SERV ELS ON ASR.DOCUMENT_NUMBER = ELS.DOCUMENT_NUMBER
LEFT OUTER JOIN CENTRAL_OFFICE_EXCHANGE_AREA COE ON NN.EXCHANGE_AREA_CLLI = COE.EXCHANGE_AREA_CLLI
LEFT OUTER JOIN SERVICE_REQUEST_CIRCUIT SRC ON ASR.DOCUMENT_NUMBER = SRC.DOCUMENT_NUMBER
LEFT OUTER JOIN CIRCUIT CIR ON SRC.CIRCUIT_DESIGN_ID = CIR.CIRCUIT_DESIGN_ID
LEFT OUTER JOIN TASK TRCA ON ASR.DOCUMENT_NUMBER = TRCA.DOCUMENT_NUMBER AND TRCA.TASK_TYPE = 'RCA'
LEFT OUTER JOIN TASK_JEOPARDY_WHYMISS JWRCA ON TRCA.TASK_NUMBER = JWRCA.TASK_NUMBER AND JWRCA.JEOPARDY_TYPE_CD = 'W'
LEFT OUTER JOIN ASR_USER_DATA AUD ON ASR.DOCUMENT_NUMBER = AUD.DOCUMENT_NUMBER
LEFT OUTER JOIN EVC_LVL_SERV ELS ON ASR.DOCUMENT_NUMBER = ELS.DOCUMENT_NUMBER
LEFT OUTER JOIN TASK T ON ASR.DOCUMENT_NUMBER = T.DOCUMENT_NUMBER AND T.TASK_TYPE = 'DD'
LEFT OUTER JOIN CIRCUIT_USER_DATA CUD ON CIR.CIRCUIT_DESIGN_ID = CUD.CIRCUIT_DESIGN_ID AND SECNCI_CODE IS NOT NULL
LEFT OUTER JOIN DATA_EXT.ASR_SALI SALI ON ASR.DOCUMENT_NUMBER = SALI.DOCUMENT_NUMBER
LEFT OUTER JOIN DATA_EXT.ASR_EVC EVC ON ASR.DOCUMENT_NUMBER = EVC.DOCUMENT_NUMBER AND (EVC.UREF = '01' OR EVC.UREF IS NULL)
LEFT OUTER JOIN DATA_EXT.ASR_EVC EVC2 ON ASR.DOCUMENT_NUMBER = EVC2.DOCUMENT_NUMBER AND (EVC.UREF = '02' OR EVC.UREF IS NULL)
LEFT OUTER JOIN DATA_EXT.ASR_DETAIL ASRD ON ASR.DOCUMENT_NUMBER = ASRD.DOCUMENT_NUMBER
LEFT OUTER JOIN MK_ASR_SALI SALI2 ON SR.DOCUMENT_NUMBER = SALI2.DOCUMENT_NUMBER
LEFT OUTER JOIN ASAP.END_USER_LOCATION_USAGE EULU
                                                                    ON SR.DOCUMENT_NUMBER       = EULU.DOCUMENT_NUMBER AND
                                                                       EULU.USAGE_TYPE          = 'PRILOC' -----
                                                                LEFT OUTER JOIN ASAP.SRSI_SR_LOC SSL
                                                                    ON EULU.DOCUMENT_NUMBER     = SSL.DOCUMENT_NUMBER AND
                                                                       EULU.SERV_ITEM_ID        = SSL.SERV_ITEM_ID AND
                                                                       EULU.USAGE_TYPE          = SSL.SERV_LOC_USE
                                                                LEFT OUTER JOIN ASAP.SR_LOC SL
                                                                    ON SSL.LOCATION_ID          = SL.LOCATION_ID AND
                                                                       SSL.DOCUMENT_NUMBER      = SL.DOCUMENT_NUMBER
                                                                LEFT OUTER JOIN ASAP.NETWORK_LOCATION NLU
                                                                    ON SL.LOCATION_ID           = NLU.LOCATION_ID 
                                                                LEFT OUTER JOIN ASAP.NETWORK_LOCATION NLA
                                                                    ON ASR.LOCATION_ID          = NLA.LOCATION_ID


WHERE SR.TYPE_OF_SR IN ('ASR')
AND ASR.REQUEST_TYPE IN ('S','E')
AND TO_CHAR(T.ACTUAL_COMPLETION_DATE,'YYYYMM') = '202311'
--AND SR.DOCUMENT_NUMBER IN ('3961862','3907362','3910240','3915366','3918838','3918985','3920325','3920340','3804489','3934395')
and sr.document_number in ('3800725','3802832')
AND SR.ACTIVITY_IND IN ('N','C')
AND SR.CCNA NOT IN ('BLI','CQV','CZJ','CZX','EPX','FLR','FLX','FTR','GOV','SUV','ZWV','ZZZ',
                    'FIS','W05','ANV','FCA','GVN','ZAP','GSW','WBY','CUS','VZN','ZTK')
  ) SUBQ
LEFT OUTER JOIN ASR_OM.ASR_ACCOUNT_MANAGER AE ON SUBQ.ACNA = AE.SECONDARY_ID
LEFT OUTER JOIN ASR_USER_DATA AUD ON SUBQ.DOC_NUM = AUD.DOCUMENT_NUMBER
LEFT OUTER JOIN JEOPARDY_TYPE JT ON SUBQ.WMRCA = JT.JEOPARDY_REASON_CODE AND SUBQ.RCA_JEOP_TYPE = JT.JEOPARDY_TYPE_CD
LEFT OUTER JOIN JEOPARDY_TYPE JT ON SUBQ.WMRCA = JT.JEOPARDY_REASON_CODE
--------------------------------------------------------------------------------------------------------------------------------
LEFT OUTER JOIN (SELECT DISTINCT * FROM
  (SELECT DOCUMENT_NUMBER, SERV_ITEM_ID, USAGE_TYPE, 
  ROW_NUMBER() OVER (PARTITION BY DOCUMENT_NUMBER, SERV_ITEM_ID ORDER BY USAGE_TYPE) AS ROW_NUM FROM END_USER_LOCATION_USAGE)
  WHERE ROW_NUM = 1) EULU ON SUBQ.DOC_NUM = EULU.DOCUMENT_NUMBER
LEFT OUTER JOIN SRSI_SR_LOC SSL ON EULU.DOCUMENT_NUMBER = SSL.DOCUMENT_NUMBER
  AND EULU.SERV_ITEM_ID = SSL.SERV_ITEM_ID AND EULU.USAGE_TYPE = SSL.SERV_LOC_USE
LEFT OUTER JOIN SR_LOC SL ON SSL.LOCATION_ID = SL.LOCATION_ID
  AND SSL.DOCUMENT_NUMBER = SL.DOCUMENT_NUMBER
--------------------------------------------------------------------------------------------------------------------------------  
WHERE SUBQ.CIRCUIT_TYPE NOT IN ('SWITCHED')
ORDER BY 8
)SUBQ2   ---------------------------------------------------------------------------------------------------------------
WHERE SUBSTR(EXCHANGE_CARRIER_CIRCUIT_ID,7,1) <> 'U'
) SUBQ3
) SUBQ4
ORDER BY INIT_ASR
SELECT PON, DOCNO, ACNA, ACT_IND, CKT, D_REC, DD, CRDD, ACCEPT_DT, DD_TASK_COMP_DT, CAD_COMP_DT,ADDRESS, CITY,
       CASE WHEN STATE IS NOT NULL THEN STATE ELSE NPASTATE END STATE,
       ZIP, PRODUCT, CNO, CRT, NC, NC_OPT, NCI, SECNCI, SUPP, ACTL, SPEC, LREF_SPEC, VTA, PNUM,
       INIT, INIT_TEL_NO, INIT_EMAIL, DSGCON, DSG_TEL_NO, LCON, LCON_EMAIL, ACTEL,
       listagg(task_at_ready, ' / ') WITHIN GROUP (ORDER BY task_at_ready) as TASK_AT_READY,
       listagg(task_at_jeop, ' / ') WITHIN GROUP (ORDER BY task_at_jeop) as TASK_AT_JEOP,
       listagg(jeop_code, ' / ') WITHIN GROUP (ORDER BY jeop_code) as JEOP_CODE, 
       listagg(jeop_desc, ' / ') WITHIN GROUP (ORDER BY jeop_desc) as JEOP_DESC
FROM (
SELECT PON, DOCUMENT_NUMBER DOCNO, ACNA, ACT_IND, CKT, D_REC, DD, CRDD, ACCEPT_DT, DD_COMP DD_TASK_COMP_DT, 
       CAD_COMP_DT, ICSC, 
       CASE WHEN SPEC IN 'EPATHU' THEN 'EPATH-UNI'
            WHEN SPEC IN 'EPATHN' THEN 'EPATH-NNI'
            WHEN SPEC IN 'EPATHES' THEN 'EPATH-EVC-SILVER'
            WHEN SPEC IN 'EPATHEG' THEN 'EPATH-EVC-GOLD'
            WHEN SPEC IN 'EPATHEP' THEN 'EPATH-EVC-PLATINUM'
            WHEN SPEC IN 'EPATHCP' THEN 'EPATH-CORE POP'
            ELSE NULL END PRODUCT,     
       PROJ, RATE_CODE, NC, NC_OPT, EUNAME, NCI, SECNCI, ADDRESS, CITY, STATE, SUBSTR(NPA.EXCHANGE_AREA_CLLI,5,2) NPASTATE,
       ZIP, LD1, LV1, LD2, LV2, LD3, LV3, SPEC, LREF_SPEC, PNUM, VTA, ACTL, INIT, INIT_TEL_NO, INIT_EMAIL,
       DSGCON, DSG_TEL_NO, LCON, LCON_EMAIL, ACTEL, CNO, CRT, TASK_AT_READY, TASK_AT_JEOP, JEOP_CODE, 
       REPLACE(REPLACE(JT.JEOPARDY_REASON_DESCRIPTION,CHR(13),''),CHR(10),'') JEOP_DESC, SUPP_TYPE SUPP
FROM
(
SELECT SR.PON,
  SR.DOCUMENT_NUMBER,    
  MAX(SR.ACTIVITY_IND) KEEP (DENSE_RANK LAST ORDER BY SR.LAST_MODIFIED_DATE) ACT_IND,
  MAX(SR.SUPPLEMENT_TYPE) KEEP (DENSE_RANK LAST ORDER BY SR.LAST_MODIFIED_DATE) SUPP_TYPE,
  MAX(SR.FIRST_ECCKT_ID) KEEP (DENSE_RANK LAST ORDER BY SR.LAST_MODIFIED_DATE) CKT,
  MAX(ASR.DATE_TIME_SENT) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) D_REC, 
  MAX(ASR.DESIRED_DUE_DATE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) DD, 
  MAX(AUD.CRDD) KEEP (DENSE_RANK LAST ORDER BY AUD.LAST_MODIFIED_DATE) CRDD,
  MAX(AUD.ACCEPTANCE_DATE) KEEP (DENSE_RANK LAST ORDER BY AUD.LAST_MODIFIED_DATE) ACCEPT_DT,
  MAX(TRUNC(TSK.ACTUAL_COMPLETION_DATE)) KEEP (DENSE_RANK LAST ORDER BY TSK.LAST_MODIFIED_DATE) DD_COMP,
  MAX(TRUNC(TSK2.ACTUAL_COMPLETION_DATE)) KEEP (DENSE_RANK LAST ORDER BY TSK2.LAST_MODIFIED_DATE) CAD_COMP_DT,
  MAX(ASR.ACCESS_PROVIDER_SERV_CTR_CODE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) ICSC,
  MAX(ASR.CASE_NUMBER) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) CNO,
  MAX(AUD.CRT) KEEP (DENSE_RANK LAST ORDER BY AUD.LAST_MODIFIED_DATE) CRT,
  MAX(REPLACE(SR.PROJECT_IDENTIFICATION,' ')) KEEP (DENSE_RANK LAST ORDER BY SR.LAST_MODIFIED_DATE) PROJ,
  MAX(SR.ACNA) KEEP (DENSE_RANK LAST ORDER BY SR.LAST_MODIFIED_DATE) ACNA,
  MAX(CIR.RATE_CODE) KEEP (DENSE_RANK LAST ORDER BY CIR.LAST_MODIFIED_DATE) RATE_CODE,
  MAX(CIR.SERVICE_TYPE_CODE) KEEP (DENSE_RANK LAST ORDER BY CIR.LAST_MODIFIED_DATE) SVC_CODE,
  MAX(ASR.NETWORK_CHANNEL_SERVICE_CODE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NC,
  MAX(ASR.NETWORK_CHANNEL_OPTION_CODE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NC_OPT,
  MAX(ASR.NETWORK_CHANNEL_INTERFACE_CODE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NCI,
  MAX(DLR.SEC_NETWORK_CHANNEL_INTERFACE) KEEP (DENSE_RANK LAST ORDER BY DLR.LAST_MODIFIED_DATE) SECNCI,
  MAX(CIR.EXCHANGE_CARRIER_CIRCUIT_ID) KEEP (DENSE_RANK LAST ORDER BY CIR.LAST_MODIFIED_DATE) CIRCKT,
  MAX(ASR.NPA) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NPA,
  MAX(ASR.NXX) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NXX,
  SALI.EUNAME,
  SANO||' '||SASF||' '||SASD||' '||SASN||' '||SATH||' '||SASS ADDRESS, 
  SALI.CITY, 
  SUBSTR(SALI.STATE,1,2) STATE,
  SALI.ZIP,
  SALI.LD1, SALI.LV1, SALI.LD2, SALI.LV2, SALI.LD3, SALI.LV3,
  MAX(ASR.SERVICE_AND_PRODUCT_ENHANC_COD) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) SPEC,
  MAX(ELS.SERVICE_AND_PRODUCT_ENHANC_COD) KEEP (DENSE_RANK LAST ORDER BY ELS.LAST_MODIFIED_DATE) LREF_SPEC,
  DET.BILL_PNUM PNUM,
  DET.BILL_VTA VTA,
  DET.ACTL,
  DET.INIT,
  DET.INIT_TEL_NO,
  DET.INIT_EMAIL,
  DET.DSGCON,
  DET.DSG_TEL_NO,
  SALI.LCON,
  EULU.LOCAL_CONTACT_EMAIL LCON_EMAIL,
  SALI.ACTEL,
  TSK3.TASK_TYPE TASK_AT_READY,
  TSK4.TASK_TYPE TASK_AT_JEOP,
  JW.JEOPARDY_REASON_CODE JEOP_CODE
--
FROM SERV_REQ SR, 
     ACCESS_SERVICE_REQUEST ASR, 
     CIRCUIT CIR,
     DESIGN_LAYOUT_REPORT DLR, 
     TASK TSK,
     TASK TSK2,
     TASK TSK3,
     TASK TSK4,
     TASK_JEOPARDY_WHYMISS JW,
     ASR_USER_DATA AUD,
     DATA_EXT.ASR_SALI SALI,
     DATA_EXT.ASR_DETAIL DET,
     END_USER_LOCATION_USAGE EULU,
     EVC_LVL_SERV ELS
--
WHERE SR.DOCUMENT_NUMBER = ASR.DOCUMENT_NUMBER(+)
AND SR.DOCUMENT_NUMBER = TSK.DOCUMENT_NUMBER (+)
AND SR.DOCUMENT_NUMBER = TSK2.DOCUMENT_NUMBER (+)
AND SR.DOCUMENT_NUMBER = TSK3.DOCUMENT_NUMBER (+)
AND SR.DOCUMENT_NUMBER = JW.DOCUMENT_NUMBER (+)
AND JW.TASK_NUMBER = TSK4.TASK_NUMBER (+)
AND SR.DOCUMENT_NUMBER = DLR.DOCUMENT_NUMBER (+)
AND SR.DOCUMENT_NUMBER = AUD.DOCUMENT_NUMBER (+)
AND DLR.CIRCUIT_DESIGN_ID = CIR.CIRCUIT_DESIGN_ID (+)
AND SR.DOCUMENT_NUMBER = SALI.DOCUMENT_NUMBER(+)
AND SR.DOCUMENT_NUMBER = DET.DOCUMENT_NUMBER (+)
AND SR.DOCUMENT_NUMBER = EULU.DOCUMENT_NUMBER (+)
AND SR.DOCUMENT_NUMBER = ELS.DOCUMENT_NUMBER (+)
AND SR.TYPE_OF_SR IN ('ASR')
AND ASR.REQUEST_TYPE IN ('S','E')
AND ASR.ACTIVITY_INDICATOR IN ('N','C','R')
AND TSK.TASK_TYPE(+) = 'DD'
AND TSK2.TASK_TYPE(+) = 'CAD'
AND TSK3.TASK_STATUS (+) = 'Ready'
AND JW.JEOPARDY_TYPE_CD (+) = 'J'
AND JW.DATE_CLOSED (+) IS NULL
AND SUBSTR(ASR.SERVICE_AND_PRODUCT_ENHANC_COD,1,5) = 'EPATH'
--
GROUP BY SR.DOCUMENT_NUMBER,
  SR.PON, SALI.EUNAME, DET.BILL_PNUM, SANO, SASD, SASN, SATH, SALI.CITY, SALI.STATE, DET.ACTL,
  DET.BILL_VTA,
  DET.INIT,
  DET.INIT_TEL_NO,
  DET.INIT_EMAIL,
  DET.DSGCON,
  DET.DSG_TEL_NO,
  SALI.LCON,
  EULU.LOCAL_CONTACT_EMAIL,
  SALI.ACTEL,
  SALI.SASF,
  SALI.SASS,
  SALI.ZIP, SALI.LD1, SALI.LV1, SALI.LD2, SALI.LV2, SALI.LD3, SALI.LV3,
  TSK3.TASK_TYPE,
  TSK4.TASK_TYPE,
  JW.JEOPARDY_REASON_CODE
)
--
DATA, NPA_NXX NPA, JEOPARDY_TYPE JT
WHERE DATA.NPA = NPA.NPA (+)
  AND DATA.NXX = NPA.NXX (+)
  AND DATA.JEOP_CODE = JT.JEOPARDY_REASON_CODE (+)
  AND JT.JEOPARDY_TYPE_CD (+) = 'J'
AND (SUPP_TYPE <> '1' OR SUPP_TYPE IS NULL)
)
GROUP BY PON, DOCNO, ACNA, ACT_IND, CKT, D_REC, DD, CRDD, ACCEPT_DT, DD_TASK_COMP_DT, CAD_COMP_DT,ADDRESS, CITY,
       STATE, NPASTATE, ZIP, PRODUCT, CNO, CRT, NC, NC_OPT, NCI, SECNCI, SUPP, ACTL, SPEC, LREF_SPEC, VTA, PNUM,
       INIT, INIT_TEL_NO, INIT_EMAIL, DSGCON, DSG_TEL_NO, LCON, LCON_EMAIL, ACTEL
 ORDER BY 10, 9, 7;

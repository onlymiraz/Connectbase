SELECT *
FROM (
SELECT TO_CHAR(DD_COMP,'MM/YYYY') DATA_MONTH, DOCNO, ACT, BUILD, BUILD_IOF, BUILD_OSP, NULL SPOTFIRE_BUILD, NC, PROD, EVC_LEVEL, PNUM, PON, CKT, ACNA, LATA, 
       CASE WHEN DD_MET = 'YES' AND WHY_MISS NOT IN ('CU01','CU02','CU03','CU04','CU05','DS02','CA22','EX01','CU51','CU52','CU53','CU54','DS52','PM53') THEN NULL ELSE WHY_MISS END WHY_MISS,
       CASE WHEN DD_MET = 'YES' AND WHY_MISS NOT IN ('CU01','CU02','CU03','CU04','CU05','DS02','CA22','EX01','CU51','CU52','CU53','CU54','DS52','PM53') THEN NULL ELSE MISS_REASON END MISS_REASON,
       PROJ, STATE, UNI_BDW, DD_MET, NULL INIT, NULL FIRST_CLEAN, NULL FINAL_CLEAN, NULL FIRST_FOC, NULL FINAL_FOC, DD, COMP_DT, DD_COMP
FROM (
SELECT DOCUMENT_NUMBER DOCNO, REQ, ACT, INIT, CASE WHEN CLEAN < INIT THEN INIT ELSE CLEAN END CLEAN, CLEAN CTF_INIT,
       DD, COMP_DT, NC,  
       CASE WHEN UNI_OR_NNI = 'NNI' THEN 'Ethernet-NNI'
            WHEN EVC_IND = 'B' THEN 'Ethernet-Combo'
            WHEN UNI_OR_NNI = 'UNI' THEN 'Ethernet-UNI'
            ELSE NULL END PROD,
       PNUM, PON, CKT, ACNA, DD_COMP, SEI, EVC_IND,
       CASE WHEN WMRCA IS NOT NULL THEN WMRCA ELSE WM END WHY_MISS, 
       CASE WHEN WMRCA IS NOT NULL THEN WMRCA_DESC ELSE WM_DESC END MISS_REASON, 
       PROJ, STATE, UNI_OR_NNI,  
       CASE WHEN (COMP_DT <= DD OR DD IS NULL) THEN 'YES'
            WHEN (COMP_DT > DD AND WMRCA IN ('CU01','CU02','CU03','CU04','CU05','DS02','CA22','EX01','CU51','CU52','CU53','CU54','DS52','PM53')) THEN 'YES'
            WHEN (COMP_DT > DD AND WMRCA IS NULL AND WM IN ('CU01','CU02','CU03','CU04','CU05','DS02','CA22','EX01','CU51','CU52','CU53','CU54','DS52','PM53')) THEN 'YES'
            ELSE 'NO' END DD_MET,     
       CASE WHEN BUILD_IOF LIKE '%IOFMINOR%' THEN 'MINOR BUILD'
            WHEN BUILD_IOF LIKE '%IOFMAJOR%' THEN 'MAJOR BUILD'
            WHEN BUILD_IOF LIKE '%IOFCOMPLEX%' THEN 'MAJOR BUILD'
            WHEN BUILD_OSP LIKE '%OSPMINOR%' THEN 'MINOR BUILD'
            WHEN BUILD_OSP LIKE '%OSPMAJOR%' THEN 'MAJOR BUILD'
            WHEN BUILD_OSP LIKE '%OSPCOMPLEX%' THEN 'MAJOR BUILD'
            ELSE 'NO BUILD' END BUILD,
       BUILD_IOF, BUILD_OSP, UNI_BDW, LATA, 
       CASE WHEN LOS = ('EBE') THEN 'Silver'
            WHEN LOS = ('EBS') THEN 'Silver'
            WHEN LOS = ('EPD') THEN 'Gold' 
            WHEN LOS = ('ERT') THEN 'Platinum'
            WHEN LOS = ('BASIC') THEN 'Silver'
            WHEN LOS = ('PD') THEN 'Gold' 
            WHEN LOS = ('RT') THEN 'Platinum'
            WHEN EVC_SPEC = 'EVPLSE' THEN 'Silver'
            WHEN EVC_SPEC = 'EPATHES' THEN 'Silver'
            WHEN EVC_SPEC = 'EPATHEG' THEN 'Gold'
            WHEN EVC_SPEC = 'EPATHEP' THEN 'Platinum'
            ELSE NULL END EVC_LEVEL   
FROM (
SELECT DOCUMENT_NUMBER, TRUNC(CLEAN) CLEAN, DD, DD_COMP, ACCEPT_DT, 
       CASE WHEN DD_COMP IS NULL AND ACCEPT_DT > CLEAN THEN ACCEPT_DT
            WHEN ACCEPT_DT IS NULL THEN DD_COMP
            WHEN ACCEPT_DT <= DD_COMP AND ACCEPT_DT > CLEAN THEN ACCEPT_DT 
            ELSE DD_COMP END COMP_DT,    
       CASE WHEN SVC_CD IN ('KD','KP') THEN '10M'
            WHEN SVC_CD IN ('KE','KQ') THEN '100M'                
            WHEN SVC_CD IN ('KF','KR') THEN '1G'
            WHEN SVC_CD IN ('KG','KS') THEN '10G'
            WHEN SVC_CD IN ('KJ') THEN '100G'
            WHEN SVC_CD = 'VL' THEN 'EVC'
            WHEN SUBSTR(CKT,4,1) = 'V' THEN 'EVC'
            ELSE NULL END UNI_BDW,       
        PON, ACNA, TRUNC(ASR_INIT) INIT,  
        PROJ, WM, B.JEOPARDY_REASON_DESCRIPTION WM_DESC, WMRCA, C.JEOPARDY_REASON_DESCRIPTION WMRCA_DESC,
        STATE, SEI, ACT, EVC_IND, PNUM, 
        SUPP, CKT, REQ, NC, NPA, LATA, LOS, EVC_SPEC,
       (SELECT UDCV.DISPLAY_VALUE FROM USER_DATA_CATEGORY_VALUES UDCV WHERE A.UNI_OR_NNI = UDCV.USER_DATA_CATEGORY_VALUE_ID) AS UNI_OR_NNI, 
       (SELECT UDCV.DISPLAY_VALUE FROM USER_DATA_CATEGORY_VALUES UDCV WHERE A.BUILD_IOF = UDCV.USER_DATA_CATEGORY_VALUE_ID) AS BUILD_IOF,
       (SELECT UDCV.DISPLAY_VALUE FROM USER_DATA_CATEGORY_VALUES UDCV WHERE A.BUILD_OSP = UDCV.USER_DATA_CATEGORY_VALUE_ID) AS BUILD_OSP
FROM (

SELECT SR.DOCUMENT_NUMBER, 
       ASR.REQUEST_TYPE REQ, 
       MAX(ASR.PROJECT_IDENTIFICATION) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) PROJ, 
       MAX(ASR.DATE_TIME_SENT) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) CLEAN, 
       MAX(ASR.DESIRED_DUE_DATE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) DD,
       MAX(AUD.ACCEPTANCE_DATE) KEEP (DENSE_RANK LAST ORDER BY AUD.LAST_MODIFIED_DATE) ACCEPT_DT,
       TRUNC(T.ACTUAL_COMPLETION_DATE)  DD_COMP,
       MAX(ASR.NETWORK_CHANNEL_SERVICE_CODE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NC, 
       MAX(ASR.PON) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) PON,  
       MAX(SR.ACNA) ACNA,  
       MAX(ASR.ACTIVITY_INDICATOR) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) ACT, 
       MAX(JW.JEOPARDY_REASON_CODE) KEEP (DENSE_RANK LAST ORDER BY JW.LAST_MODIFIED_DATE) WM,
       MAX(JWRCA.JEOPARDY_REASON_CODE) KEEP (DENSE_RANK LAST ORDER BY JWRCA.LAST_MODIFIED_DATE) WMRCA,
       JW.JEOPARDY_TYPE_CD JEOP_TYPE,
       JWRCA.JEOPARDY_TYPE_CD RCA_JEOP_TYPE,    
       MAX(ASR.SUPPLEMENT_TYPE) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) SUPP,
       MAX(ASR.EVC_IND) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) EVC_IND,
       MAX(ASR.PROMOTION_NBR) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) PNUM,
       C.EXCHANGE_CARRIER_CIRCUIT_ID CKT,
       BUILD_IOF, 
       BUILD_OSP, 
       MIN(NTS.LAST_MODIFIED_DATE) KEEP (DENSE_RANK FIRST ORDER BY NTS.LAST_MODIFIED_DATE) ASR_INIT,
       MAX(ASR.SWITCHED_ETHERNET_INDICATOR) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) SEI, 
       MAX(C.SERVICE_TYPE_CODE) KEEP (DENSE_RANK LAST ORDER BY C.LAST_MODIFIED_DATE) SVC_CD,
       MAX(ASR.NPA) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NPA,
       MAX(ASR.NXX) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) NXX,
       MAX(ASR.LATA_NUMBER) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) LATA,
      -- MAX(ASR.SERVICE_AND_PRODUCT_ENHANC_COD) KEEP (DENSE_RANK LAST ORDER BY ASR.LAST_MODIFIED_DATE) SPEC,
       SUBSTR(NPA.EXCHANGE_AREA_CLLI,5,2) STATE, UNI_OR_NNI,
       ELS.LVL_OF_SERV_NM AS LOS, ELS.SERVICE_AND_PRODUCT_ENHANC_COD AS EVC_SPEC
FROM ASR_USER_DATA AUD, 
     ACCESS_SERVICE_REQUEST ASR,
     SERV_REQ SR,
     SERVICE_REQUEST_CIRCUIT SRC,
     TASK_JEOPARDY_WHYMISS JW,
     TASK_JEOPARDY_WHYMISS JWRCA,
     TASK T,
     TASK T2,
     CIRCUIT C,
     NOTES NTS,
     DATA_EXT.ASR_DETAIL DET,
     NPA_NXX NPA,
     CIRCUIT_USER_DATA CUD,
     EVC_UNI_MAP EUM,
     EVC_LVL_SERV ELS 
WHERE SR.DOCUMENT_NUMBER = ASR.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = AUD.DOCUMENT_NUMBER(+)
  AND SR.DOCUMENT_NUMBER = SRC.DOCUMENT_NUMBER
  AND SRC.CIRCUIT_DESIGN_ID = C.CIRCUIT_DESIGN_ID (+)
  AND SR.DOCUMENT_NUMBER = EUM.DOCUMENT_NUMBER (+)
  AND EUM.DOCUMENT_NUMBER = ELS.DOCUMENT_NUMBER (+)
  AND EUM.EVC_UNI_MAP_ID = ELS.EVC_UNI_MAP_ID(+)
  AND SR.DOCUMENT_NUMBER = T.DOCUMENT_NUMBER
  AND SR.DOCUMENT_NUMBER = T2.DOCUMENT_NUMBER (+)
  AND T.TASK_NUMBER = JW.TASK_NUMBER(+)
  AND T2.TASK_NUMBER = JWRCA.TASK_NUMBER(+)
  AND SR.DOCUMENT_NUMBER = NTS.DOCUMENT_NUMBER (+)
  AND SR.DOCUMENT_NUMBER = DET.DOCUMENT_NUMBER (+)
  AND ASR.NPA = NPA.NPA (+)
  AND ASR.NXX = NPA.NXX (+)
  AND C.CIRCUIT_DESIGN_ID = CUD.CIRCUIT_DESIGN_ID (+)
  AND TO_CHAR(T.ACTUAL_COMPLETION_DATE,'yyyymm') = '202311'    --CURRENT REPORTING MONTH 
  AND ASR.REQUEST_TYPE IN ('S','E')
  AND ASR.ACTIVITY_INDICATOR IN ('N')
  AND ASR.ORDER_TYPE = 'ASR'
  AND JW.JEOPARDY_TYPE_CD(+) = 'W' 
  AND JWRCA.JEOPARDY_TYPE_CD(+) = 'W'
  AND T.TASK_TYPE = 'DD'
  AND T2.TASK_TYPE (+) = 'RCA'
  AND ASR.PROMOTION_NBR = 'EPAV001999SCM792'
  AND SR.ACNA IN ('AAV','AVA','ATX','LOA','SBB','SBZ','SUV','TPM')
  AND C.SERVICE_TYPE_CODE <> 'VL'
GROUP BY SR.DOCUMENT_NUMBER, ASR.REQUEST_TYPE, T.ACTUAL_COMPLETION_DATE, JW.JEOPARDY_TYPE_CD, JWRCA.JEOPARDY_TYPE_CD, BUILD_IOF, BUILD_OSP, 
         EUSA_SEC_SEI, NPA.EXCHANGE_AREA_CLLI, DET.RTR, UNI_OR_NNI, C.EXCHANGE_CARRIER_CIRCUIT_ID,
         ELS.LVL_OF_SERV_NM, ELS.SERVICE_AND_PRODUCT_ENHANC_COD
) A, JEOPARDY_TYPE B, JEOPARDY_TYPE C    
  WHERE A.WM = B.JEOPARDY_REASON_CODE(+) 
  AND A.JEOP_TYPE = B.JEOPARDY_TYPE_CD(+)
  AND A.WMRCA = C.JEOPARDY_REASON_CODE(+) 
  AND A.RCA_JEOP_TYPE = C.JEOPARDY_TYPE_CD(+)
)     
 WHERE (SUPP <> 1 OR SUPP IS NULL)
 GROUP BY DOCUMENT_NUMBER, REQ, ACT, INIT, CLEAN, DD, COMP_DT, NC, UNI_OR_NNI, EVC_IND, PNUM, PON, CKT, ACNA, DD_COMP, SEI, 
          WMRCA, WM, WMRCA_DESC, WM_DESC, PROJ, STATE, BUILD_IOF, BUILD_OSP, UNI_BDW, LATA, LOS, EVC_SPEC   
))
ORDER BY 25, 1;         
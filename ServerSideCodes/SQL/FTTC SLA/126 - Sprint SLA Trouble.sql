SELECT TICKET_ID, CREATE_DATE, CLEARED_DT, CLOSED_DT, CKT_ID, 
       REPLACE(RTRIM(CIRCUIT,'.'),' ','') CIRCUIT, STATE, TTR, 
       TRUNC(((((31*24)-(TTR))/(31*24))*100),3) CIRCUIT_AVAIL,  --MUST CHANGE THE # OF DAYS FOR THIS FORMULA EACH MONTH 
       REQUEST_TYPE, REPAIR_CODE, DISP,
       CASE WHEN REQUEST_TYPE = 'Information' THEN 'No'
            WHEN DISP IN ('CPE','REF','EXC','NTF','CC') THEN 'No'
            ELSE 'Yes' END "Include in MTTR",
       NULL "Remove for Fiber Cut",
       NULL "Notes",   
       TROUBLE_DESC, PROFILE
FROM (
-- 4 
SELECT DISTINCT TICKET_ID, STATE, CLEC_ID, CKT_ID, 
       SUBSTR(REPLACE(REPLACE(CKT_ID,'/','.'),' ',''),1,20) CIRCUIT,
       PRODUCT, TRBL_DETECT_DT, CREATE_DATE, CLEARED_DT, CLOSED_DT, TTR,  
       CASE WHEN TRBL_FOUND_NUMBER IS NOT NULL THEN TRBL_FOUND_NUMBER
            ELSE TRBL_FOUND_NUMBER2 END TRBL_FOUND_CD,
       CASE WHEN TRBL_FOUND_DESC IS NOT NULL THEN TRBL_FOUND_DESC
            ELSE TRBL_FOUND_DESC2 END TRBL_FOUND_DESC,        
       CASE WHEN DISP3 IS NOT NULL THEN DISP3
            WHEN DISP IS NOT NULL THEN DISP
            ELSE DISP2 END DISP, 
       REQSTAT, TRBLSTAT, REPAIR_CODE, REQUEST_TYPE, TROUBLE_DESC, PROFILE 
FROM (
-- 3
SELECT DISTINCT TICKET_ID, 
       CASE WHEN SITE_STATE IS NOT NULL AND SITE_STATE IN ('NY','PA','CT','WV','MD','VA','SC','NC','IL','MN','OH','IN','KY','MI','CA','AZ','NV','NM','UT','WI','IA','NE','AL','FL','GA','MS','TN','TX') THEN SITE_STATE
            WHEN PRILOC_STATE IS NOT NULL AND PRILOC_STATE IN ('NY','PA','CT','WV','MD','VA','SC','NC','IL','MN','OH','IN','KY','MI','CA','AZ','NV','NM','UT','WI','IA','NE','AL','FL','GA','MS','TN','TX') THEN PRILOC_STATE
            ELSE CLLI_STATE END STATE,
       CASE WHEN CCNA1 IN ('MJC') THEN CCNA1
            WHEN ACNA3 IN ('MJC') THEN ACNA3
            WHEN CCNA2 IN ('MJC') THEN CCNA2
            WHEN ACNA1 IN ('MJC') THEN ACNA1
            WHEN ACNA2 IN ('MJC') THEN ACNA2
            WHEN ACNA2 IN ('MJC') THEN ACNA2
            ELSE ACNA END CLEC_ID,         
       CKT_ID,  
       CASE WHEN SUBSTR(SERVICE_TYPE_CODE,1,1) IN ('K','V') THEN 'Ethernet'
            WHEN SUBSTR(CIRCUIT,3,1) IN ('K','V') THEN 'Ethernet'
            ELSE NULL END PRODUCT,
       TRBL_DETECT_DT, CREATE_DATE, 
       CASE WHEN CLEARED_DT IS NOT NULL THEN CLEARED_DT
            ELSE CLOSED_DT END CLEARED_DT, 
       CASE WHEN CLOSED_DT IS NOT NULL THEN CLOSED_DT
            ELSE CLEARED_DT END CLOSED_DT,
       TTR,
       B.TRBL_FOUND_NUMBER, B.TRBL_FOUND_DESC, B.DISP, C.TRBL_FOUND_NUMBER TRBL_FOUND_NUMBER2, C.TRBL_FOUND_DESC TRBL_FOUND_DESC2, C.DISP DISP2, D.DISP DISP3,
       A2.REPAIR_CODE, REQSTAT, TRBLSTAT, REQUEST_TYPE, TROUBLE_DESC, PROFILE
FROM (
-- 2 
SELECT TICKET_ID, SITE_CLLI6, SITE_STATE, CKT_ID, A.CIRCUIT, A.ACNA, REQUEST_TYPE, CREATE_DATE,
       CLEARED_DT, CLOSED_DT, TTR, REPAIR_CODE, REQSTAT, A.LOCATION_NAME, TRBL_FOUND_CD, TRBL_DETECT_DT,
       PROFILE, SERVICE_TYPE_CODE, RATE_CODE, TROUBLE_DESC, TRBLSTAT, 
       MAX(TRIM(D.ACNA)) KEEP (DENSE_RANK LAST ORDER BY D.LAST_MODIFIED_DATE) ACNA1, 
       MAX(TRIM(D.CCNA)) KEEP (DENSE_RANK LAST ORDER BY D.LAST_MODIFIED_DATE) CCNA1,
       MAX(TRIM(D.ACNA)) KEEP (DENSE_RANK FIRST ORDER BY D.ACNA) ACNA2, 
       MAX(TRIM(D.CCNA)) KEEP (DENSE_RANK FIRST ORDER BY D.CCNA) CCNA2,
       TRIM(D2.CLEC_ID) ACNA3,
       MAX(SUBSTR(D.PRIMARY_LOCATION,5,2)) KEEP (DENSE_RANK LAST ORDER BY D.LAST_MODIFIED_DATE) PRILOC_STATE,
       MAX(SUBSTR(F2.CLLI_CODE,5,2)) KEEP (DENSE_RANK LAST ORDER BY F2.LAST_MODIFIED_DATE) CLLI_STATE
 FROM (
--  1 
SELECT A.FLD_REQUESTID TICKET_ID,
       MAX(SUBSTR(A.FLD_SITEID,1,6)) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) SITE_CLLI6,
       MAX(SUBSTR(A.FLD_SITEID,5,2)) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) SITE_STATE,
       MAX(A.FLD_CUSTOMERADDRESSSTATE) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) REM_STATE,
       A.EXCHANGE_CARRIER_CIRCUIT_ID CKT_ID, 
       REPLACE(REPLACE(A.EXCHANGE_CARRIER_CIRCUIT_ID,' '),'/') CIRCUIT,
       MAX(TRIM(A.ACNA)) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) ACNA,
       MAX(A.FLD_REQUESTTYPE) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) REQUEST_TYPE,
       MAX(A.FLD_TROUBLE_DETECTION_DATE) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) TRBL_DETECT_DT, 
       MAX(A.FLD_STARTDATE) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) CREATE_DATE,
       MAX(A.FLD_EVENT_END_TIME) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) CLEARED_DT, 
       MAX(A.DTE_CLOSEDDATETIME) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) CLOSED_DT,
       MAX(ROUND(A.FLD_MTTREPAIR/3600,2)) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) TTR,
       MAX(FLD_COMPLETE_REPAIRCODE) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) REPAIR_CODE,
       MAX(FLD_TROUBLEFOUNDINT) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) TRBL_FOUND_CD,
       MAX(A.FLD_REQUESTSTATUS) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) REQSTAT,
       MAX(A.FLD_ALOCATIONACCESSNAME2) LOCATION_NAME,
       MAX(TRIM(A.FLD_ASSIGNMENTPROFILE)) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) PROFILE,
       MAX(E.SERVICE_TYPE_CODE) KEEP (DENSE_RANK LAST ORDER BY E.LAST_MODIFIED_DATE) SERVICE_TYPE_CODE, 
       MAX(E.RATE_CODE) KEEP (DENSE_RANK LAST ORDER BY E.LAST_MODIFIED_DATE) RATE_CODE,
       MAX(A.FLD_TROUBLEREPORTSTATE) KEEP (DENSE_RANK LAST ORDER BY A.FLD_MODIFIEDDATE) TRBLSTAT,
       MAX(E.LOCATION_ID) KEEP (DENSE_RANK LAST ORDER BY E.LAST_MODIFIED_DATE) LOCATION_ID,
       MAX(E.LOCATION_ID_2) KEEP (DENSE_RANK LAST ORDER BY E.LAST_MODIFIED_DATE) LOCATION_ID_2,
       REPLACE(REPLACE(A.FLD_DESCRIPTIONOFSYMPTON,CHR(10),''),CHR(13),'') TROUBLE_DESC
FROM CASDW.TROUBLE_TICKET_R A,
     CASDW.CIRCUIT E
WHERE A.EXCHANGE_CARRIER_CIRCUIT_ID = E.EXCHANGE_CARRIER_CIRCUIT_ID(+) 
 AND A.FLD_TROUBLEREPORTSTATE = 'closed'
 AND (E.TYPE <> 'T' OR TYPE IS NULL) 
 AND E.STATUS (+) = '6'
 AND SUBSTR(A.EXCHANGE_CARRIER_CIRCUIT_ID,4,2) <> 'KG'
 AND (TO_CHAR(DTE_CLOSEDDATETIME,'yyyymm') = '202401'                                      --NEED TO CHANGE THIS EACH MONTH (CURRENT AND PREVIOUS MONTHS)
    OR (DTE_CLOSEDDATETIME IS NULL AND TO_CHAR(FLD_EVENT_END_TIME,'yyyymm') = '202401'))   --NEED TO CHANGE THIS EACH MONTH (CURRENT AND PREVIOUS MONTHS) 
GROUP BY A.FLD_REQUESTID, A.EXCHANGE_CARRIER_CIRCUIT_ID, A.FLD_DESCRIPTIONOFSYMPTON
-- 1 
)A,
 CASDW.DESIGN_LAYOUT_REPORT D,
 RVV827.DLR_TEMP D2,
 CASDW.NETWORK_LOCATION F,
 CASDW.NETWORK_LOCATION F2
 WHERE A.CKT_ID = D.ECCKT(+)
 AND A.CKT_ID = D2.CIRCUIT(+)
 AND A.LOCATION_ID = F.LOCATION_ID(+)
 AND A.LOCATION_ID_2 = F2.LOCATION_ID(+)
 AND SUBSTR(CKT_ID,7,1) <> 'U'   
 AND REQSTAT = 'Closed' 
 GROUP BY TICKET_ID, SITE_CLLI6, SITE_STATE, CKT_ID, A.CIRCUIT, A.ACNA, REQUEST_TYPE, CREATE_DATE,
          CLEARED_DT, CLOSED_DT, TTR, REPAIR_CODE, REQSTAT, A.LOCATION_NAME, TRBL_FOUND_CD,
          PROFILE, SERVICE_TYPE_CODE, RATE_CODE, TROUBLE_DESC, D2.CLEC_ID
-- 2 
)
 A2, TRBL_FOUND_REMEDY B, REPAIR_CODE C, TRBL_FOUND_REMEDY D
WHERE A2.TRBL_FOUND_CD = B.TRBL_FOUND_NUMBER (+)
AND A2.REPAIR_CODE = C.REPAIR_CODE (+)
AND A2.REPAIR_CODE = D.TRBL_FOUND_DESC (+)
AND REQSTAT = 'Closed'
-- 3  
)
-- 4  
WHERE CLEC_ID IN ('MJC')
  AND STATE <> 'CT'
  AND PRODUCT = 'Ethernet' 
)
--5             
ORDER BY 4,3,1  
import os
import teradatasql
import pyodbc

# Paths to your key and password files
PasswordEncryptionKeyFileName = r'D:\Program Files\Python\teradatasql\samples\s_WAD3Key.properties'
EncryptedPasswordFileName = r'D:\Program Files\Python\teradatasql\samples\s_wad3Pass.properties'

# Verify if the key and password files exist
if not os.path.exists(PasswordEncryptionKeyFileName):
    raise FileNotFoundError(f"Key file not found: {PasswordEncryptionKeyFileName}")
if not os.path.exists(EncryptedPasswordFileName):
    raise FileNotFoundError(f"Password file not found: {EncryptedPasswordFileName}")

# Set the TDGSSCONFIG environment variable
os.environ['TDGSSCONFIG'] = PasswordEncryptionKeyFileName

# Print environment variables for debugging
print("TDGSSCONFIG:", os.getenv('TDGSSCONFIG'))


# Connect to Teradata using the decrypted credentials
encrypted_password = f"ENCRYPTED_PASSWORD(file:{PasswordEncryptionKeyFileName},file:{EncryptedPasswordFileName})"
teradata_conn= teradatasql.connect(
    host='10.209.129.144',
     user='s_WAD3',
     password=encrypted_password,
     encryptdata='true'
)


# Define multiple update queries
update_queries =["delete USER_WORK.TBL_CABS_MRC_ARPU_EVC_UNI;","""insert into USER_WORK.TBL_CABS_MRC_ARPU_EVC_UNI
SELECT DISTINCT
CURRENT_DATE - 1 AS RESULTS_THROUGH,
BILL_MONTH_DT,
WIRELESS,
TOP_CUST,
PRIMARY_CARRIER_NAME,
PRODUCT,
STATE,
'UNI' AS SVC_GROUP,
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI','ETH_EVC') 
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1)-- AND WIRELESS = 'WIRELINE' 
  THEN TOTAL_MRC END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) AS MRC_ALL_BILLED,
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI') 
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1)-- AND WIRELESS = 'WIRELINE'
  THEN CMPY_NO_COUNT END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) AS COUNT_ALL_BILLED,
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI','ETH_EVC') 
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1)-- AND WIRELESS = 'WIRELINE'
  THEN TOTAL_MRC END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) /
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI') 
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1)-- AND WIRELESS = 'WIRELINE'
  THEN CMPY_NO_COUNT END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) AS ARPU_ALL_BILLED,
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI','ETH_EVC') AND FIRST_BILL_MONTH_DT = BILL_MONTH_DT -- AND WIRELESS = 'WIRELINE' 
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1) 
  THEN TOTAL_MRC END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) AS MRC_FIRST_BILL,
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI') AND FIRST_BILL_MONTH_DT = BILL_MONTH_DT -- AND WIRELESS = 'WIRELINE'
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1) 
  THEN CMPY_NO_COUNT END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) AS COUNT_FIRST_BILL,
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI','ETH_EVC') AND FIRST_BILL_MONTH_DT = BILL_MONTH_DT -- AND WIRELESS = 'WIRELINE'
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1) 
  THEN TOTAL_MRC END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) /
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI') AND FIRST_BILL_MONTH_DT = BILL_MONTH_DT -- AND WIRELESS = 'WIRELINE'
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1) 
  THEN CMPY_NO_COUNT END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) AS ARPU_FIRST_BILL,
  
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI','ETH_EVC') AND LAST_BILL_MONTH_DT = BILL_MONTH_DT
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1) -- AND WIRELESS = 'WIRELINE' 
  THEN TOTAL_MRC END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) AS MRC_LAST_BILL,
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI') AND LAST_BILL_MONTH_DT = BILL_MONTH_DT
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1) -- AND WIRELESS = 'WIRELINE'
  THEN CMPY_NO_COUNT END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) AS COUNT_LAST_BILL,
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI','ETH_EVC') AND LAST_BILL_MONTH_DT = BILL_MONTH_DT 
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1) -- AND WIRELESS = 'WIRELINE'
  THEN TOTAL_MRC END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) /
SUM(CASE WHEN SVC_GROUP IN ('ETH_UNI') AND LAST_BILL_MONTH_DT = BILL_MONTH_DT 
  AND BILL_CYCLE_DT >= BILL_MONTH_DT AND BILL_CYCLE_DT < ADD_MONTHS(BILL_MONTH_DT,1) -- AND WIRELESS = 'WIRELINE'
  THEN CMPY_NO_COUNT END) OVER (PARTITION BY BILL_MONTH_DT,WIRELESS,TOP_CUST,PRIMARY_CARRIER_NAME,PRODUCT,STATE) AS ARPU_LAST_BILL
FROM
(SELECT DISTINCT
SUBQ2.CMPY_NO, SUBQ2.CMPY_NO_COUNT, SUBQ2.STATE, SUBQ2.CIRCUIT_NO, SUBQ2.NC_PRODUCT_CD, SUBQ2.BILL_MONTH_DT, SUBQ2.JURIS_CD, 
SUBQ2.BILL_CYCLE_DT, SUBQ2.TOTAL_MRC, SUBQ2.PRIMARY_CARRIER_NAME, 
CASE WHEN PRIMARY_CARRIER_NAME IN ('AT'||chr(38)||'T','AT'||chr(38)||'T MOBILITY') THEN '01-AT'||chr(38)||'T' 
     WHEN PRIMARY_CARRIER_NAME IN ('VERIZON','VERIZON WIRELESS') THEN '02-VERIZON'
     WHEN PRIMARY_CARRIER_NAME IN ('LUMEN TECHNOLOGIES') THEN '03-LUMEN TECHNOLOGIES'
     WHEN PRIMARY_CARRIER_NAME IN ('WINDSTREAM') THEN '04-WINDSTREAM'
     WHEN PRIMARY_CARRIER_NAME IN ('TPX COMMUNICATIONS') THEN '05-TPX COMMUNICATIONS'
     WHEN PRIMARY_CARRIER_NAME IN ('NITEL, INC') THEN '06-NITEL, INC'
     WHEN PRIMARY_CARRIER_NAME IN ('GRANITE TELECOMMUNICATIONS') THEN '07-GRANITE TELECOMMUNICATIONS'
     WHEN PRIMARY_CARRIER_NAME IN ('GTT COMMUNICATIONS') THEN '08-GTT COMMUNICATIONS'
     WHEN PRIMARY_CARRIER_NAME IN ('COMCAST BUSINESS COMMUNICATIONS') THEN '09-COMCAST BUSINESS COMMUNICATIONS'
     WHEN PRIMARY_CARRIER_NAME IN ('METTEL') THEN '10-METTEL'
     WHEN PRIMARY_CARRIER_NAME IN ('CHARTER COMMUNICATIONS') THEN '11-CHARTER COMMUNICATIONS'
     WHEN PRIMARY_CARRIER_NAME IN ('ZAYO BANDWIDTH') THEN '12-ZAYO BANDWIDTH'
     WHEN PRIMARY_CARRIER_NAME IN ('AIRESPRING, INC.') THEN '13-AIRESPRING, INC.' 
     WHEN PRIMARY_CARRIER_NAME IN ('SPRINT PCS') THEN '14-T-MOBILE'
     WHEN PRIMARY_CARRIER_NAME IN ('T-MOBILE') THEN '14-T-MOBILE'
     WHEN PRIMARY_CARRIER_NAME IN ('US CELLULAR') THEN '15-US CELLULAR'
     WHEN PRIMARY_CARRIER_NAME IN ('SPECTROTEL') THEN '16-SPECTROTEL'
     WHEN PRIMARY_CARRIER_NAME IN ('SPRINT COMMUNICATIONS COMPANY LP') THEN '17-SPRINT COMMUNICATIONS COMPANY LP'
     WHEN PRIMARY_CARRIER_NAME IN ('NEW HORIZON COMMUNICATIONS GROUP') THEN '18-NEW HORIZON COMMUNICATIONS GROUP  '
     WHEN PRIMARY_CARRIER_NAME IN ('COX COMMUNICATIONS') THEN '19-COX COMMUNICATIONS'
     WHEN PRIMARY_CARRIER_NAME IN ('COGENT COMMUNICATIONS') THEN '20-COGENT COMMUNICATIONS'
     WHEN PRIMARY_CARRIER_NAME IN ('WAVE BROADBAND') THEN '21-WAVE BROADBAND'
     WHEN PRIMARY_CARRIER_NAME IN ('UNITAS GLOBAL') THEN '22-UNITAS GLOBAL'
     WHEN PRIMARY_CARRIER_NAME IN ('ALTICE') THEN '23-ALTICE'
     WHEN PRIMARY_CARRIER_NAME IN ('BCN TELECOM') THEN '24-BCN TELECOM'
     WHEN PRIMARY_CARRIER_NAME IN ('SEGRA') THEN '25-SEGRA'
     -- WHEN PRIMARY_CARRIER_NAME IN ('GRANITE TELECOMMUNICATIONS') THEN '9-GRANITE TELECOMMUNICATIONS'
     ELSE '99-ALL EXCL TOP 25' END AS TOP_CUST,
SUBQ2.PLAN_ID, SUBQ2.WIRELESS, 
CASE WHEN (SUBQ2.STATE <> 'CT' AND SUBQ2.NNI = 'NNI') THEN 'ETH_NNI'
     WHEN (SUBQ2.STATE = 'CT' AND SUBSTR(SUBQ2.NC_PRODUCT_CD,1,2) IN ('KD','KF','KG','KJ','KP','KR','KS','SN')
       AND SUBSTR(SUBQ2.NC_PRODUCT_CD,4,1) IN ('0','-') AND SUBQ2.ACTLCLLI <> 'UNKNOWN'  
       AND SUBQ2.PRODUCT <> 'GIGA,DECA,WAVE') THEN 'ETH_NNI'
     -- WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,1) = 'K' THEN 'UNI'
     -- WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,2) = 'VL' THEN 'EVC'
     ELSE SUBQ2.SVC_GROUP END AS SVC_GROUP,
NVL(SUBQ2.PRODUCT, 
    CASE WHEN SUBSTR(SUBQ2.SVC_GROUP,1,3) IN ('TDM','OCN') THEN 'TDM/OCN'
         WHEN SUBSTR(SUBQ2.SVC_GROUP,1,5) = ('COLLO') THEN SUBQ2.SVC_GROUP
         WHEN SUBSTR(SUBQ2.PLAN_ID,1,3) = 'DKF' THEN 'DRK_FBR'
         WHEN SUBSTR(PNUM,1,4) = 'EPAV' THEN 'EPATH TIER'
         WHEN SUBSTR(PNUM,1,3) = 'EPA' THEN 'EPATH'
         WHEN SUBSTR(PNUM,1,4) IN ('EIAV','EIBV') THEN 'EIA TIER'  
         WHEN SUBSTR(PNUM,1,2) = 'EI' THEN 'EIA'  
         WHEN SUBSTR(PNUM,1,3) IN ('FOT','VEL') THEN 'FOTS'
         WHEN SUBSTR(PNUM,1,3) IN ('DKF') THEN 'DRKFBR_NONREG'
         WHEN SUBSTR(PNUM,1,3) IN ('EDG') THEN 'COLLO_NONREG'
    ELSE 'UNKNOWN' END) AS PRODUCT, 
NVL(SUBQ2.ETHERNET_TYPE,'UNKNOWN') AS ETHERNET_TYPE, 
CASE WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) = 'KD' THEN 10
     WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) = 'KE' THEN 100
     WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) = 'KF' THEN 1000
     WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) = 'KG' THEN 10000
     WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) = 'KJ' THEN 100000
     WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) = 'KP' THEN 10
     WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) = 'KQ' THEN 100
     WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) = 'KR' THEN 1000
     WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) = 'KS' THEN 10000     
     -- WHEN SUBSTR(cabs.CIRCUIT_NO,4,2) = 'VL' THEN CIR.MBPS     
     ELSE NULL END AS UNI_MBPS,
CASE WHEN SUBSTR(SUBQ2.CIRCUIT_NO,4,2) IN ('KP','KQ','KR','KS') THEN 'Adj' ELSE NULL END AS ADJ,
SUBQ2.EVC_MBPS, SUBQ2.NNI, 
SUBQ2.FIRST_BILL_MONTH_DT, SUBQ2.LAST_BILL_MONTH_DT
FROM
(
SELECT DISTINCT
CABSSP.CMPY_NO, 
(SELECT MAX(CABS3.PLAN_ID) FROM edw_vwmc.CABS_SPCL_ACCS_BILL_REV_DTL_V CABS3 WHERE CABS3.CIRCUIT_NO = CABSSP.CIRCUIT_NO 
 AND CABS3.BILL_MONTH_DT = CABS.BILL_MONTH_DT AND CABS3.CMPY_NO = CABSSP.CMPY_NO AND CABS3.SW_SPL_IND = 'SP' 
) AS PLAN_ID, 
(SELECT MAX(CABS4.PNUM) FROM edw_vwmc.CABS_SPCL_ACCS_BILL_REV_DTL_V CABS4 WHERE CABS4.CIRCUIT_NO = CABSSP.CIRCUIT_NO 
 AND CABS4.BILL_MONTH_DT = CABS.BILL_MONTH_DT AND CABS4.CMPY_NO = CABSSP.CMPY_NO AND CABS4.SW_SPL_IND = 'SP'
) AS PNUM,
(SELECT MIN(CABS5.JURIS_CD) FROM edw_vwmc.CABS_SPCL_ACCS_BILL_REV_DTL_V CABS5 WHERE CABS5.CIRCUIT_NO = CABSSP.CIRCUIT_NO 
 AND CABS5.BILL_MONTH_DT = CABS.BILL_MONTH_DT AND CABS5.CMPY_NO = CABSSP.CMPY_NO AND CABS5.SW_SPL_IND = 'SP' 
) AS JURIS_CD, 
-- CABS.EO_CLLI_CD, CABS.POP_CLLI_CD,
CABSSP.CMPY_NO_COUNT, -- CABSSP.STATE, 
CASE WHEN SUBSTR(CABS.EO_CLLI_CD,1,8) IN ('ARGYTXXB','BNVLTXXA','DNTNTXXA','JSTNTXXB','LWVLTXXA','LWVLTXXC','LWVLTXXB','LWVLTXXE',
'LWVLTXXF','CRTNTXXA','CRTNTXXB','CRTNTXXC','CRTNTXXD','GRPVTXXA','IRNGTXXA','IRNGTXXB','IRNGTXXC','IRNGTXXD',
'IRNGTXXE','IRNGTXXF','IRNGTXXG','KLLRTXXA','GRLDTXXA','GRLDTXXB','GRLDTXXC','GRLDTXXE','PLANTXXA','PLANTXXB',
'PLANTXXD','PLANTXXF','PLANTXXK','RWLTTXXA','WYLITXXA') THEN 'TX_S' ELSE CABSSP.STATE END AS STATE,
CABS.ACTLCLLI, CABS.CIRCUIT_NO, CABS.NC_PRODUCT_CD, CABS.BILL_MONTH_DT, -- CABS.JURIS_CD, 
CABSSP.BILL_CYCLE_DT,-- CABS.SW_SPL_IND, -- CABS.ACNA, 
(SELECT SUM(CABSM.CHRGE_AMT) FROM edw_vwmc.CABS_SPCL_ACCS_BILL_REV_DTL_V CABSM
  WHERE CABS.CIRCUIT_NO = CABSM.CIRCUIT_NO AND CABS.BILL_MONTH_DT = CABSM.BILL_MONTH_DT AND CABS.CMPY_NO = CABSM.CMPY_NO
  AND (CABSM.DISCONNECT_DT > CABSM.BILL_CYCLE_DT OR CABSM.DISCONNECT_DT IS NULL)) AS TOTAL_MRC,
NVL(MCL.PRIMARY_CARRIER_NAME,'UNKNOWN') AS PRIMARY_CARRIER_NAME,
CASE WHEN MCL.PRIMARY_FOCUS = 'WIRELESS' THEN 'WIRELESS' ELSE 'WIRELINE' END AS WIRELESS,
-- NVL(WA.PRIMARY_FOCUS,'WIRELINE') AS WIRELESS,
-- 'ALL' AS WIRELESS,
CASE WHEN MAX(USOC3.CHARGE_TYPE) OVER (PARTITION BY CABS.CIRCUIT_NO, CABS.BILL_MONTH_DT) = 'NNI' THEN 'ETH_NNI'
     WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,1) ='K' THEN 'ETH_UNI'
     WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,2) ='SN' THEN 'ETH_NNI'
     WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,2) ='VL' THEN 'ETH_EVC'
     WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,1) ='O' THEN 'OCN'
     WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,2) ='HF' THEN 'TDM_DS3'
     WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,2) ='HC' THEN 'TDM_DS1'
     -- WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,1) ='S' THEN 'SWITCHED'
     -- WHEN SUBSTR(cabs.NC_PRODUCT_CD,1,2) ='YN' THEN 'SX7'
     ELSE 'OTHER' END AS SVC_GROUP,
MAX(USOC.PRODUCT) OVER (PARTITION BY CABS.CIRCUIT_NO, CABS.BILL_MONTH_DT) AS PRODUCT, 
 MAX(USOC.ETHERNET_TYPE) OVER (PARTITION BY CABS.CIRCUIT_NO, CABS.BILL_MONTH_DT) AS ETHERNET_TYPE, 
 MAX(USOC2.MBPS) OVER (PARTITION BY CABS.CIRCUIT_NO, CABS.BILL_MONTH_DT) AS EVC_MBPS, 
 MAX(USOC3.CHARGE_TYPE) OVER (PARTITION BY CABS.CIRCUIT_NO, CABS.BILL_MONTH_DT) AS NNI,    
CASE WHEN(SELECT MIN(CABS1.BILL_MONTH_DT) FROM edw_vwmc.CABS_SPCL_ACCS_BILL_REV_DTL_V CABS1 
   WHERE CABS1.CIRCUIT_NO = CABS.CIRCUIT_NO AND CABS1.BILL_MONTH_DT >= ADD_MONTHS(CABS.BILL_MONTH_DT,-1) 
   AND CABS1.SW_SPL_IND = 'SP'AND (CABS1.DISCONNECT_DT > CABS1.BILL_CYCLE_DT OR CABS1.DISCONNECT_DT IS NULL)) = CABS.BILL_MONTH_DT THEN CABS.BILL_MONTH_DT ELSE NULL END 
   AS FIRST_BILL_MONTH_DT, -- CHECKS IF BILLED IN PRIOR MONTH TO IDENTIFY ADDS
CASE WHEN (SELECT MAX(CABS2.BILL_MONTH_DT) FROM edw_vwmc.CABS_SPCL_ACCS_BILL_REV_DTL_V CABS2
   WHERE CABS2.CIRCUIT_NO = CABS.CIRCUIT_NO AND CABS2.BILL_MONTH_DT <= ADD_MONTHS(CABS.BILL_MONTH_DT,1) 
   AND CABS2.SW_SPL_IND = 'SP' AND (CABS2.DISCONNECT_DT > CABS2.BILL_CYCLE_DT OR CABS2.DISCONNECT_DT IS NULL)) = CABS.BILL_MONTH_DT THEN CABS.BILL_MONTH_DT ELSE NULL END 
   AS LAST_BILL_MONTH_DT -- CHECKS IF BILLED IN FOLLOWING MONTH TO IDENTIFY REMOVES        
FROM 
-------------------------------------------------------------------------------------------------------------------------
(-- CABSSP SUBQUERY -- IDENTIFY ONLY CIRCUITS WITH "SP" INDICATOR AND EXCLUDE NW4 OPERATING COMPANIES
SELECT DISTINCT 
SUBQ1.*,
CAST(1.00/(COUNT(CMPY_NO) OVER (PARTITION BY CIRCUIT_NO, BILL_MONTH_DT)) AS FORMAT '9.99') AS CMPY_NO_COUNT
FROM
(
SELECT DISTINCT 
  CABS0.CIRCUIT_NO, CABS0.CMPY_NO, CABS0.BILL_CYCLE_DT, -- CABS0.ACTLCLLI, -- CABS.PLAN_ID, 
  CASE WHEN CABS0.STATE_CD IN ('AL','AZ','CA','CT','FL','GA','IA','ID','IL','IN','MI','MN',
         'MS','MT','NC','NE','NM','NV','NY','OH','OR','PA','SC','TN','TX','UT','WA','WI','WV')
         THEN CABS0.STATE_CD
       WHEN SUBSTR(CABS0.EO_CLLI_CD,5,2) IN ('AL','AZ','CA','CT','FL','GA','IA','ID','IL','IN','MI','MN',
         'MS','MT','NC','NE','NM','NV','NY','OH','OR','PA','SC','TN','TX','UT','WA','WI','WV')
         THEN SUBSTR(CABS0.EO_CLLI_CD,5,2) 
       WHEN SUBSTR(CABS0.POP_CLLI_CD,5,2) IN ('AL','AZ','CA','CT','FL','GA','IA','ID','IL','IN','MI','MN',
         'MS','MT','NC','NE','NM','NV','NY','OH','OR','PA','SC','TN','TX','UT','WA','WI','WV')
         THEN SUBSTR(CABS0.POP_CLLI_CD,5,2)   
       WHEN SUBSTR(CABS0.CIRCUIT_NO,18,2) IN ('AL','AZ','CA','CT','FL','GA','IA','ID','IL','IN','MI','MN',
         'MS','MT','NC','NE','NM','NV','NY','OH','OR','PA','SC','TN','TX','UT','WA','WI','WV')  
         THEN SUBSTR(CABS0.CIRCUIT_NO,18,2)   
       WHEN CABS0.STATE_CD IS NULL OR CABS0.EO_CLLI_CD IS NULL OR CABS0.POP_CLLI_CD IS NULL OR CABS0.CIRCUIT_NO IS NULL  
         THEN 'OTHER'     
       ELSE 'OTHER' END AS STATE, -- CHECK SERVERAL FIELDS TO DERIVE STATE SINCE NOT ALWAYS POPULATED
  CABS0.BILL_MONTH_DT
FROM edw_vwmc.CABS_SPCL_ACCS_BILL_REV_DTL_V CABS0 WHERE CABS0.BILL_MONTH_DT BETWEEN ADD_MONTHS(CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE)+1, -16) 
   AND ADD_MONTHS(CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE)+1, -1) -- >= '2019-12-01') 
  AND CABS0.SW_SPL_IND = 'SP' AND (CABS0.DISCONNECT_DT > CABS0.BILL_CYCLE_DT OR CABS0.DISCONNECT_DT IS NULL) 
) SUBQ1 
   WHERE CMPY_NO NOT IN ('0570','0572','0576','6102','6105','6106') -- EXCLUDE NWF COMPANY CODES
   -- WHERE STATE NOT IN ('WA','OR','MT','ID')  -- CHANGE TO RUN ON FTR SERVER
   -- WHERE STATE IN ('WA','OR','MT','ID')  -- CHANGE TO RUN ON NWF SERVER  
   ) CABSSP
INNER JOIN edw_vwmc.CABS_SPCL_ACCS_BILL_REV_DTL_V CABS ON CABSSP.CIRCUIT_NO = CABS.CIRCUIT_NO AND CABSSP.CMPY_NO = CABS.CMPY_NO
LEFT OUTER JOIN USER_WORK.CM_USOC_ETHERNET_TYPE4 USOC ON CABS.USOC_PRODUCT_CD = USOC.USOC 
  AND SUBSTR(USOC.CHARGE_TYPE,1,9) <> 'Mileage -'
LEFT OUTER JOIN USER_WORK.CM_USOC_ETHERNET_TYPE4 USOC2 ON CABS.USOC_PRODUCT_CD = USOC2.USOC 
  AND SUBSTR(USOC2.CHARGE_TYPE,1,9) <> 'Mileage -'
LEFT OUTER JOIN USER_WORK.CM_USOC_ETHERNET_TYPE4 USOC3 ON CABS.USOC_PRODUCT_CD = USOC3.USOC 
  AND USOC3.CHARGE_TYPE = 'NNI'
-- LEFT OUTER JOIN USER_WORK.CM_WIRELESS_ACNAS WA ON CABS.ACNA = WA.SECONDARY_ID
LEFT OUTER JOIN USER_WORK.CM_CARRIER_ACNA_MCL MCL ON CABS.ACNA = MCL.SECONDARY_ID
WHERE CABS.BILL_MONTH_DT BETWEEN ADD_MONTHS(CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE)+1, -16) 
  AND ADD_MONTHS(CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE)+1, -1) -- SPECIFY BILL MONTH RANGE TO RETRIEVE
-- AND SUBSTR(CABS.NC_PRODUCT_CD,1,2) IN ('HF','HC')
AND (SUBSTR(CABS.NC_PRODUCT_CD,1,1) IN ('K','O') OR SUBSTR(CABS.NC_PRODUCT_CD,1,2) IN ('HF','HC','VL','SN'))
AND CABS.ACNA NOT IN ('BLI','CQV','CZJ','CZX','EPX','FLR','FLX','FTR','GOV','SUV','ZWV','ZZZ',
                      'FIS','W05','ANV','FCA','GVN','ZAP','GSW','WBY','CUS','VZN'
                      'AF1','CXN','EXC','FBA','T05','WWW','ZTK') -- EXCLUDE RETAIL/AFFILIATE ACNAs
AND NOT(CABS.ACNA = 'BNK' AND CABS.CMPY_NO ='5050')
AND NOT(CABS.ACNA = 'ALN' AND CABS.CMPY_NO ='0223')
) SUBQ2
-- ORDER BY SUBQ2.CMPY_NO, SUBQ2.CIRCUIT_NO
) SUBQ3;"""]


# Execute each update query
with teradata_conn.cursor() as teradata_cursor:
    for query in update_queries:
        teradata_cursor.execute(query)
    teradata_conn.commit()

# Close connection
teradata_conn.close()
# Insert data into SQL Server
#with sql_server_conn.cursor() as sql_server_cursor:
#    insert_query = "INSERT INTO your_sql_server_table (column1, column2) VALUES (?, ?)"
#    data_to_insert = [('value1', 'value2'), ('value3', 'value4')]
#    sql_server_cursor.executemany(insert_query, data_to_insert)
#    sql_server_conn.commit()

# Close connections
#teradata_conn.close()
#sql_server_conn.close()

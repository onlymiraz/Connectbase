import os
import teradatasql
import pyodbc

# Paths to your key and password files
PasswordEncryptionKeyFileName = r'D:\Program Files\Python\teradatasql\samples\s_WAD3Key.properties'
EncryptedPasswordFileName = r'D:\Program Files\Python\teradatasql\samples\s_wad3Pass.properties'

# Verify if the key and password files exist
if not os.path.exists(PasswordEncryptionKeyFileName):
    raise FileNotFoundError(f"Key file not found: {PasswordEncryptionKeyFileName}")
if not os.path.exists(EncryptedPasswordFileName):
    raise FileNotFoundError(f"Password file not found: {EncryptedPasswordFileName}")

# Set the TDGSSCONFIG environment variable
os.environ['TDGSSCONFIG'] = PasswordEncryptionKeyFileName

# Print environment variables for debugging
print("TDGSSCONFIG:", os.getenv('TDGSSCONFIG'))


# Connect to Teradata using the decrypted credentials
encrypted_password = f"ENCRYPTED_PASSWORD(file:{PasswordEncryptionKeyFileName},file:{EncryptedPasswordFileName})"
teradata_conn= teradatasql.connect(
    host='10.209.129.144',
     user='s_WAD3',
     password=encrypted_password,
     encryptdata='true'
)


# Define multiple update queries
update_queries =["delete USER_WORK.CM_WABB_SERVICE_ORDERS;","""insert into USER_WORK.CM_WABB_SERVICE_ORDERS 
SELECT ORDNO, ENV, PON, ACT, ORD_TYPE, SERV_TYPE, STATUS, WTN, BTN, SE_CODE, NETWORK, CCNA, 
CARRIER, CUSTNM, SO_CREATE_DT, SO_EFF_COMP_DT, SO_ACT_COMP_DT, POST_DT, AGING, AGING_GRP,
ADDRESS, CITY, STATE, ZIP,MRC,
CASE WHEN SUBSTR(TRIM(TRAILING ',' FROM (XMLAGG(SV7_2.sv7itm || ',' ORDER BY SV7_2.sv7itm) (VARCHAR(500)))),1,5) in ('#18WM','#18WN','#18WR','#22WM','#22W1','#22W2','#22W3') THEN SUBSTR(TRIM(TRAILING ',' FROM (XMLAGG(SV7_2.sv7itm || ',' ORDER BY SV7_2.sv7itm) (VARCHAR(500)))),1,5) ELSE NULL END TERM_CODE,
NETWORK||SUBSTR(TERM_CODE,1,3) TERM2,
CASE WHEN NETWORK||SUBSTR(TERM_CODE,1,3) = 'Fiber#18' THEN 'FIBER MTM'
WHEN TERM_CODE = '#18WM' AND NETWORK = 'Copper' THEN 'COPPER MTM'
WHEN TERM_CODE = '#18WN' AND NETWORK = 'Copper' THEN 'COPPER 1YR'
WHEN TERM_CODE = '#18WR' AND NETWORK = 'Copper' THEN 'COPPER 2YR'
WHEN TERM_CODE = '#22WM' AND NETWORK = 'Fiber' THEN 'FIBER MTM'
WHEN TERM_CODE = '#22W1' AND NETWORK = 'Fiber' THEN 'FIBER 1YR'
WHEN TERM_CODE = '#22W2' AND NETWORK = 'Fiber' THEN 'FIBER 2YR'
WHEN TERM_CODE = '#22W3' AND NETWORK = 'Fiber' THEN 'FIBER 3YR' ELSE 'BLANK' END TERM_DESC
FROM (
SELECT ORDNO, ENV, PON, ACT, ORD_TYPE, SERV_TYPE, STATUS, WTN, BTN, SE_CODE, NETWORK, CCNA, 
CARRIER, CUSTNM, SO_CREATE_DT, SO_EFF_COMP_DT, SO_ACT_COMP_DT, POST_DT, AGING, AGING_GRP,
ADDRESS, CITY, STATE, ZIP, 
SUM(MRC) MRC
FROM (
SELECT ORDNO, ENV, PON, ACT, ORD_TYPE, SERV_TYPE, STATUS, WTN, BTN, SE_CODE, LC.COP_FIB NETWORK, SQ.CCNA, 
SQ.CARRIER_NAME CARRIER, CUSTNM, SO_CREATE_DT, SO_EFF_COMP_DT, SO_ACT_COMP_DT, POST_DT, AGING,
CASE WHEN AGING BETWEEN 0 AND 10 THEN '0-10'  
WHEN AGING BETWEEN 11 AND 20 THEN '11-20'
WHEN AGING BETWEEN 21 AND 30 THEN '21-30'
WHEN AGING BETWEEN 31 AND 60 THEN '31-60'
WHEN AGING BETWEEN 61 AND 90 THEN '61-90'
WHEN AGING IS NULL THEN NULL
ELSE '90+' END AGING_GRP,
OREPLACE(ADDRESS,'.','') ADDRESS, CITY, STATE, SUBSTR(ZIP,1,5) ZIP,
SV7.SV7RTE AS MRC, SV7.SV7ITM AS SE_CODE_MRC 
FROM (         
SELECT DISTINCT A.BILL_SUB_SYS ENV, MSOSO# AS ORDNO, E.XSOPON PON, F.PONACT ACT, 
CASE WHEN MSOTOS = 'CI' THEN 'NEW(CI)' WHEN MSOTOS = 'CO' THEN 'DISC(CO)' END ORD_TYPE,
CASE WHEN SV2STP IN ('WR','DL','LR') THEN 'RES' ELSE 'BUS' END SERV_TYPE,
CASE WHEN MSOPST > 0 THEN 'COMPLETE' ELSE 'PENDING' END STATUS, 
MSOPH# AS WTN, MSOMB# AS BTN, SV7ITM AS SE_CODE, E.XSODEC CCNA, G.PRIMARY_CARRIER_NAME CARRIER_NAME, MSOLSN||MSOFRN AS CUSTNM,  
CAST(TO_CHAR(MSOSDT) AS DATE FORMAT 'YYYYMMDD') SO_CREATE_DT,
CASE WHEN MSOEDT > 0 THEN CAST(TO_CHAR(MSOEDT) AS DATE FORMAT 'YYYYMMDD') ELSE NULL END SO_EFF_COMP_DT, 
CASE WHEN MSOCPD > 0 THEN CAST(TO_CHAR(MSOCPD) AS DATE FORMAT 'YYYYMMDD') ELSE NULL END SO_ACT_COMP_DT,
CASE WHEN MSOPST > 0 THEN CAST(TO_CHAR(MSOPST) AS DATE FORMAT 'YYYYMMDD') ELSE NULL END POST_DT,
CASE WHEN MSOPST > 0 THEN NULL ELSE CURRENT_DATE - CAST(TO_CHAR(MSOSDT) AS DATE FORMAT 'YYYYMMDD') END AGING,
TRIM(MSOST#)||' '||TRIM(MSOSTR)||' '||TRIM(MSOSST) AS ADDRESS, CTYDES AS CITY, MSOSTA AS STATE, PSAZCD ZIP
FROM STG_DPI_VW.SVORD_LOAD A
INNER JOIN STG_DPI_VW.SV07_LOAD B
ON A.MSOSO# = B.SV7SO# AND A.BILL_SUB_SYS = B.BILL_SUB_SYS
FULL JOIN STG_DPI_VW.SV02_LOAD C
ON A.MSOSO# = C.SV2SO# AND A.BILL_SUB_SYS = C.BILL_SUB_SYS
FULL JOIN STG_DPI_VW.DBCTY D
ON A.MSOCTY = D.CTYCAB AND A.BILL_SUB_SYS = D.BILL_SUB_SYS
FULL JOIN STG_DPI_VW.SVORDX_LOAD E
ON A.MSOSO# = E.XSOSO# AND A.BILL_SUB_SYS = E.BILL_SUB_SYS
LEFT OUTER JOIN STG_DPI_VW.LSPPON F
ON E.XSOPON = F.PONPON# AND E.XSODEC = F.PONCCDE AND E.BILL_SUB_SYS = F.PONENV
LEFT OUTER JOIN USER_WORK.CM_CARRIER_ACNA_MCL G
ON E.XSODEC = G.SECONDARY_ID
LEFT OUTER JOIN STG_DPI_VW.PSAMAS_LOAD H 
ON A.MSOCN# = H.PSACN# AND A.BILL_SUB_SYS = H.BILL_SUB_SYS
WHERE SV7ITM IN (
'CF15L','CF25L','CF30L','CF50L','CF75L','CFL0L','CFL1L','CFL2L','CFL3L','CFL50','CFL5L','CFL7L','FL634','HLC01','HLC02','HLC04','HLC05','HLC07','HLC08','HLC09','HLMXL','L01WD','L02WD','L03WD','L04WD','L05WD','L06WD','L07WD','L08WD','L09FD','L09WD','L10WD','L11WD','L13FD','L14FD','L14WD','L15FD','L15WD','L16FD','L16WD','L17FD','L17WD','L18FD','L18WD','L19WD','L20WD','L21WD','L22FS','L22WD','L23WD','L24WD','L27WS','L28WS','L29WS','L30WS','L31FS','L31WS','L32FS','L32WS','L33FS',
'L33WS','L34FS','L34WS','L35FS','L35WS','L36FS','L36WS','L39WS','L40WS','L41WS','L42WS','L43WS','L44WS','L45VD','L45WS','L46WS','L47WS','L48WS','L49VD','L50VD','L51VD','L52VD','L53VD','L54VD','L63VS','L67VS','L68VS','L69VS','L70VS','L71VS','L72VS','PTD1B','PTD1R','PTD3B','PTD3R','PTD3S','PTD7D','PTD7S','WBDLL','WBDML','WBMDL','WBSLL','WBSML','WBSRL','WBSTL','WDPLB','WDPLS','WDTLB','WDTLS','WDWLS','WLSLS','WMLUB','WMLUS','WRBLL','WRBXL','WRUTL','WSBLL','WSBML','WSDLL','WSDML',
'WSDPL','WSDRL','WSDTL','WSDWL','WSDXL','WSI1G','WSI2G','WSI30','WSI50','WSI70','WSLSL','WSMLD','WSMLU','WSMPL','WSMSL','WSMTL','WSMXL','WSRML','WSSLL','WSSML','WSSPL','WSSRL','WSSTL','WSSXL','WURLL')AND MSOTOS IN ('CI','CO')
AND MSOSTS <> 'D' AND SV7STS <> 'D' 
AND (MSOPST >= 20230101 OR MSOPST = 0)
) SQ LEFT OUTER JOIN USER_WORK.CM_WABB_LOOP_CODES LC 
ON SQ.SE_CODE = LC.LOOP_SE
INNER JOIN STG_DPI_VW.SV07_LOAD SV7
ON SQ.ORDNO = SV7.SV7SO# AND SQ.ENV = SV7.BILL_SUB_SYS
WHERE SV7ITM NOT IN ('WMBF','WMDSL','TAXCODE','WCBAF','FTTNR','RECR','NP') 
AND SUBSTR(SV7ITM,1,2) NOT IN ('FZ','69','LD','B1','R1','CC','CR','89','UN','PT') 
AND SV7STS <> 'D' 
) SQ2
GROUP BY ORDNO, ENV, PON, ACT, ORD_TYPE, SERV_TYPE, STATUS, WTN, BTN, SE_CODE, NETWORK, CCNA, 
CARRIER, CUSTNM, SO_CREATE_DT, SO_EFF_COMP_DT, SO_ACT_COMP_DT, POST_DT, AGING, AGING_GRP,
ADDRESS, CITY, STATE, ZIP
) SQ3
LEFT OUTER JOIN STG_DPI_VW.SV07_LOAD SV7_2
ON SQ3.ORDNO = SV7_2.SV7SO# AND SQ3.ENV = SV7_2.BILL_SUB_SYS

WHERE SV7STS <> 'D'
GROUP BY ORDNO, ENV, PON, ACT, ORD_TYPE, SERV_TYPE, STATUS, WTN, BTN, SE_CODE, NETWORK, CCNA, 
CARRIER, CUSTNM, SO_CREATE_DT, SO_EFF_COMP_DT, SO_ACT_COMP_DT, POST_DT, AGING, AGING_GRP,
ADDRESS, CITY, STATE, ZIP, MRC;"""]


# Execute each update query
with teradata_conn.cursor() as teradata_cursor:
    for query in update_queries:
        teradata_cursor.execute(query)
    teradata_conn.commit()

# Close connection
teradata_conn.close()
# Insert data into SQL Server
#with sql_server_conn.cursor() as sql_server_cursor:
#    insert_query = "INSERT INTO your_sql_server_table (column1, column2) VALUES (?, ?)"
#    data_to_insert = [('value1', 'value2'), ('value3', 'value4')]
#    sql_server_cursor.executemany(insert_query, data_to_insert)
#    sql_server_conn.commit()

# Close connections
#teradata_conn.close()
#sql_server_conn.close()

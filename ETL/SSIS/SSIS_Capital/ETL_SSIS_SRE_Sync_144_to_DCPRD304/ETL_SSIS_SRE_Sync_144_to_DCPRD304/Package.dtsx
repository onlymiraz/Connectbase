<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/29/2022 12:10:30 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="5CG2150WYX"
  DTS:CreatorName="CORP\paa789"
  DTS:DTSID="{4C219B42-2F30-446E-BF76-AC54A30D9C97}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.694.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="32"
  DTS:VersionGUID="{C8EBB72A-F4CD-48C2-9559-65F624493013}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CAPINFWWAPV01]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FCE01006-830C-4121-818A-C575466B51C2}"
      DTS:ObjectName="CAPINFWWAPV01">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=CAPINFWWAPV01;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{FCE01006-830C-4121-818A-C575466B51C2}CAPINFWWAPV01;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CAPINFWWWPV01]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{30A2B536-27CA-4246-BEFB-656FB6E8E587}"
      DTS:ObjectName="CAPINFWWWPV01">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=CAPINFWWWPV01;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-Package-{30A2B536-27CA-4246-BEFB-656FB6E8E587}CAPINFWWWPV01;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQLINFWWDVP304\DCPRD304]"
      DTS:CreationName="SMOServer"
      DTS:DTSID="{8BD17FE0-2ABF-4675-89B2-B0CF1F101CA6}"
      DTS:ObjectName="SQLINFWWDVP304\DCPRD304">
      <DTS:ObjectData>
        <SMOServerConnectionManager
          ConnectionString="SqlServerName=SQLINFWWDVP304\DCPRD304;UseWindowsAuthentication=True;UserName=;"
          ConnectByProxy="False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1545463B-42E2-46E7-ABE8-B670180746AD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TableName_obj">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02CD8DA3-5DAC-4024-B6BB-1A4279ED0EB8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE( @[User::TableName_str], &quot;'&quot;,&quot;&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName_str">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container - Iterate for each table name"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Re-run SQL script for each table name in TABLE_NAME.txt"
      DTS:DTSID="{F4BC05E8-3839-4B56-9D21-09ED3F57E914}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container - Iterate for each table name">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{7A562BE3-4DB1-4FAC-ACF7-A13B31D9689E}"
        DTS:ObjectName="{7A562BE3-4DB1-4FAC-ACF7-A13B31D9689E}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::TableName_obj" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - Iterate for each table name\INSERT INTO SELECT to Destination Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FF8A3404-BD1A-456D-AA94-7991A19192BE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="INSERT INTO SELECT to Destination Table"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"USE CapitalManagementProduction


EXEC('TRUNCATE TABLE CapitalManagementProduction."+ @[User::TableName_str] +"') AT [DBFarm304]


DECLARE @PK_Condition AS int
DECLARE @ID_Condition AS int
DECLARE @PK_Table_Columns AS NVARCHAR(MAX)
DECLARE @Main_Insert_Query AS NVARCHAR(MAX)
DECLARE @Main_Insert_Query_PK1 AS NVARCHAR(MAX)
DECLARE @Main_Insert_Query_PK2 AS NVARCHAR(MAX)



SET @PK_Condition = (
	SELECT COUNT(*) 
	FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
	WHERE [CONSTRAINT_TYPE] = 'PRIMARY KEY' AND TABLE_NAME = SUBSTRING('"+ @[User::TableName_str] +"', CHARINDEX('.','"+ @[User::TableName_str] +"')+1, 20000)
)



SET @ID_Condition = (
		SELECT COUNT(*)
		FROM
			sys.schemas AS SCH
			INNER JOIN sys.tables AS TAB ON SCH.schema_id = TAB.schema_id
			INNER JOIN sys.columns AS COL ON TAB.object_id = COL.object_id
			INNER JOIN sys.identity_columns AS IDCOL on COL.object_id = IDCOL.object_id AND COL.column_id = IDCOL.column_id
		WHERE TAB.name = SUBSTRING('"+ @[User::TableName_str] +"', CHARINDEX('.','"+ @[User::TableName_str] +"')+1, 20000)
	)




SET @PK_Table_Columns = (REPLACE( (SELECT SUBSTRING(
			(
				SELECT ', ' + QUOTENAME(COLUMN_NAME)
				FROM INFORMATION_SCHEMA.COLUMNS
				WHERE TABLE_NAME = SUBSTRING('"+ @[User::TableName_str] +"', CHARINDEX('.','"+ @[User::TableName_str] +"')+1, 20000) AND TABLE_SCHEMA = SUBSTRING('"+ @[User::TableName_str] +"', 0, CHARINDEX('.','"+ @[User::TableName_str] +"'))
				ORDER BY ORDINAL_POSITION
				FOR XML path('')
			),
        3, 200000)), '''', '')) 



SET @Main_Insert_Query = N'

	INSERT INTO [DBFarm304].CapitalManagementProduction."+ @[User::TableName_str] +" ('+ @PK_Table_Columns +') 
			SELECT ' + @PK_Table_Columns + ' FROM CAPINFWWAPV01.CapitalManagementProduction."+ @[User::TableName_str] +"
'




SET @Main_Insert_Query_PK1 = N'

	INSERT INTO [DBFarm304].CapitalManagementProduction.dbo.TempDestinationTable ('+ @PK_Table_Columns +') 
			SELECT ' + @PK_Table_Columns + ' FROM CAPINFWWAPV01.CapitalManagementProduction."+ @[User::TableName_str] +"

'
	
SET @Main_Insert_Query_PK2 = N'

	IF(' + CAST(@ID_Condition AS nvarchar) + ' &gt; 0)
		BEGIN
			SET IDENTITY_INSERT CapitalManagementProduction."+ @[User::TableName_str] +" ON

			INSERT INTO CapitalManagementProduction."+ @[User::TableName_str] +" ('+ @PK_Table_Columns +') 
					SELECT ' + @PK_Table_Columns + ' FROM CapitalManagementProduction.dbo.TempDestinationTable

			SET IDENTITY_INSERT CapitalManagementProduction."+ @[User::TableName_str] +" OFF
		END
	
	ELSE
		BEGIN
			INSERT INTO CapitalManagementProduction."+ @[User::TableName_str] +" ('+ @PK_Table_Columns +') 
					SELECT ' + @PK_Table_Columns + ' FROM CapitalManagementProduction.dbo.TempDestinationTable
		END
	DROP TABLE CapitalManagementProduction.dbo.TempDestinationTable
'







IF(@ID_Condition &gt; 0 OR @PK_Condition &gt; 0)
	BEGIN
		EXECUTE [DBFarm304].CapitalManagementProduction.dbo.createtemptable '"+ @[User::TableName_str] +"'
        
		EXEC(@Main_Insert_Query_PK1)
		EXEC(@Main_Insert_Query_PK2) AT [DBFarm304]
	END


ELSE
	BEGIN
		EXEC(@Main_Insert_Query)
	END"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FCE01006-830C-4121-818A-C575466B51C2}"
              SQLTask:SqlStatementSource="USE CapitalManagementProduction&#xA;&#xA;&#xA;EXEC('TRUNCATE TABLE CapitalManagementProduction.') AT [DBFarm304]&#xA;&#xA;&#xA;DECLARE @PK_Condition AS int&#xA;DECLARE @ID_Condition AS int&#xA;DECLARE @PK_Table_Columns AS NVARCHAR(MAX)&#xA;DECLARE @Main_Insert_Query AS NVARCHAR(MAX)&#xA;DECLARE @Main_Insert_Query_PK1 AS NVARCHAR(MAX)&#xA;DECLARE @Main_Insert_Query_PK2 AS NVARCHAR(MAX)&#xA;&#xA;&#xA;&#xA;SET @PK_Condition = (&#xA;&#x9;SELECT COUNT(*) &#xA;&#x9;FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS &#xA;&#x9;WHERE [CONSTRAINT_TYPE] = 'PRIMARY KEY' AND TABLE_NAME = SUBSTRING('', CHARINDEX('.','')+1, 20000)&#xA;)&#xA;&#xA;&#xA;&#xA;SET @ID_Condition = (&#xA;&#x9;&#x9;SELECT COUNT(*)&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;sys.schemas AS SCH&#xA;&#x9;&#x9;&#x9;INNER JOIN sys.tables AS TAB ON SCH.schema_id = TAB.schema_id&#xA;&#x9;&#x9;&#x9;INNER JOIN sys.columns AS COL ON TAB.object_id = COL.object_id&#xA;&#x9;&#x9;&#x9;INNER JOIN sys.identity_columns AS IDCOL on COL.object_id = IDCOL.object_id AND COL.column_id = IDCOL.column_id&#xA;&#x9;&#x9;WHERE TAB.name = SUBSTRING('', CHARINDEX('.','')+1, 20000)&#xA;&#x9;)&#xA;&#xA;&#xA;&#xA;&#xA;SET @PK_Table_Columns = (REPLACE( (SELECT SUBSTRING(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT ', ' + QUOTENAME(COLUMN_NAME)&#xA;&#x9;&#x9;&#x9;&#x9;FROM INFORMATION_SCHEMA.COLUMNS&#xA;&#x9;&#x9;&#x9;&#x9;WHERE TABLE_NAME = SUBSTRING('', CHARINDEX('.','')+1, 20000) AND TABLE_SCHEMA = SUBSTRING('', 0, CHARINDEX('.',''))&#xA;&#x9;&#x9;&#x9;&#x9;ORDER BY ORDINAL_POSITION&#xA;&#x9;&#x9;&#x9;&#x9;FOR XML path('')&#xA;&#x9;&#x9;&#x9;),&#xA;        3, 200000)), '''', '')) &#xA;&#xA;&#xA;&#xA;SET @Main_Insert_Query = N'&#xA;&#xA;&#x9;INSERT INTO [DBFarm304].CapitalManagementProduction. ('+ @PK_Table_Columns +') &#xA;&#x9;&#x9;&#x9;SELECT ' + @PK_Table_Columns + ' FROM CAPINFWWAPV01.CapitalManagementProduction.&#xA;'&#xA;&#xA;&#xA;&#xA;&#xA;SET @Main_Insert_Query_PK1 = N'&#xA;&#xA;&#x9;INSERT INTO [DBFarm304].CapitalManagementProduction.dbo.TempDestinationTable ('+ @PK_Table_Columns +') &#xA;&#x9;&#x9;&#x9;SELECT ' + @PK_Table_Columns + ' FROM CAPINFWWAPV01.CapitalManagementProduction.&#xA;&#xA;'&#xA;&#x9;&#xA;SET @Main_Insert_Query_PK2 = N'&#xA;&#xA;&#x9;IF(' + CAST(@ID_Condition AS nvarchar) + ' &gt; 0)&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;SET IDENTITY_INSERT CapitalManagementProduction. ON&#xA;&#xA;&#x9;&#x9;&#x9;INSERT INTO CapitalManagementProduction. ('+ @PK_Table_Columns +') &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT ' + @PK_Table_Columns + ' FROM CapitalManagementProduction.dbo.TempDestinationTable&#xA;&#xA;&#x9;&#x9;&#x9;SET IDENTITY_INSERT CapitalManagementProduction. OFF&#xA;&#x9;&#x9;END&#xA;&#x9;&#xA;&#x9;ELSE&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;INSERT INTO CapitalManagementProduction. ('+ @PK_Table_Columns +') &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT ' + @PK_Table_Columns + ' FROM CapitalManagementProduction.dbo.TempDestinationTable&#xA;&#x9;&#x9;END&#xA;&#x9;DROP TABLE CapitalManagementProduction.dbo.TempDestinationTable&#xA;'&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;IF(@ID_Condition &gt; 0 OR @PK_Condition &gt; 0)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;EXECUTE [DBFarm304].CapitalManagementProduction.dbo.createtemptable ''&#xA;        &#xA;&#x9;&#x9;EXEC(@Main_Insert_Query_PK1)&#xA;&#x9;&#x9;EXEC(@Main_Insert_Query_PK2) AT [DBFarm304]&#xA;&#x9;END&#xA;&#xA;&#xA;ELSE&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;EXEC(@Main_Insert_Query)&#xA;&#x9;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::TableName_str"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{B6DAA5F1-342E-4051-802A-E40AF22A4371}"
          DTS:ObjectName="{B6DAA5F1-342E-4051-802A-E40AF22A4371}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::TableName_str" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Table Names"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Retrieves table names from text file, stored as an iterable variable"
      DTS:DTSID="{1F17188E-D147-49C0-9656-DFA1647C6665}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Table Names"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_44b7fdfbc56c49b39ab99d1d352117a6"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::TableName_obj">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_44b7fdfbc56c49b39ab99d1d352117a6.Properties.Settings.get_Default():ST_44b7fdfbc56c49b39ab99d1d352117a6.Properties.Sett" +
    "ings")]

namespace ST_44b7fdfbc56c49b39ab99d1d352117a6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections;
#endregion

namespace ST_44b7fdfbc56c49b39ab99d1d352117a6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            ArrayList arr = new ArrayList();

            // Reading text file consisting of table names
            // needs to be the full, absolute file path (otherwise, it will look in the same directory where the Visual Studio DTS packages are stored
            // (LOCAL) var filePath = "//capinfwwapv01/DataDump/SSIS/ETL_SSIS_SRE_Sync_144_to_DCPRD304/ETL_SSIS_SRE_Sync_144_to_DCPRD304/TABLE_NAMES.txt";
            var filePath = "D:/DataDump/SSIS/ETL_SSIS_SRE_Sync_144_to_DCPRD304/ETL_SSIS_SRE_Sync_144_to_DCPRD304/TABLE_NAMES.txt";

            foreach (string line in System.IO.File.ReadLines(@filePath))
            {
                line.TrimEnd();
                arr.Add(line);
            }

            Dts.Variables["User::TableName_obj"].Value = arr;

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_44b7fdfbc56c49b39ab99d1d352117a6.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{87d9eff0-ee07-47d2-aaba-60757a55208a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_44b7fdfbc56c49b39ab99d1d352117a6</RootNamespace>
    <AssemblyName>ST_44b7fdfbc56c49b39ab99d1d352117a6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_44b7fdfbc56c49b39ab99d1d352117a6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_44b7fdfbc56c49b39ab99d1d352117a6</msb:DisplayName>
    <msb:ProjectId>{6C118A75-0499-484C-BC03-559A21F34DB1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_44b7fdfbc56c49b39ab99d1d352117a6.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_44b7fdfbc56c49b39ab99d1d352117a6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_44b7fdfbc56c49b39ab99d1d352117a6")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_44b7fdfbc56c49b39ab99d1d352117a6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_44b7fdfbc56c49b39ab99d1d352117a6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_44b7fdfbc56c49b39ab99d1d352117a6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_44b7fdfbc56c49b39ab99d1d352117a6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_44b7fdfbc56c49b39ab99d1d352117a6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_44b7fdfbc56c49b39ab99d1d352117a6.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABow7WIAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAALjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANwvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
MAAAAAAAAEgAAAACAAUARCEAAOANAAABAAAAAAAAACQvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBvAAAAAQAAEXMQAAAKCnIBAABwKBEAAApvEgAACgsr
GwdvEwAACgwIKAEAACtvFQAACiYGCG8WAAAKJgdvFwAACi3d3goHLAYHbxgAAArcAigZAAAKbxoA
AApyzAAAcG8bAAAKBm8cAAAKAigZAAAKFm8dAAAKKgABEAAAAgAWACc9AAoAAAAAHgIoHgAACioe
AigfAAAKKq5+AQAABC0ecvQAAHDQAwAAAiggAAAKbyEAAApzIgAACoABAAAEfgEAAAQqGn4CAAAE
Kh4CgAIAAAQqGn4DAAAEKh4CKCMAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAAAsBAAAI34AAJgEAAAkBgAAI1N0cmluZ3MAAAAAvAoAAGgBAAAjVVMA
JAwAABAAAAAjR1VJRAAAADQMAACsAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAAB
AAAAJQAAAAUAAAAGAAAACQAAAAEAAAAjAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAgAAAAEA
AAAEAAAAAQAAAAEAAAABAAAAAADZAwEAAAAAAAYAiwLDBAYAGgPDBAYA1wGwBA8ANwUAAAYABAJX
BAYAbgJXBAYATwJXBAYAAQNXBAYAqwJXBAYAxAJXBAYAGwJXBAYANgJIAwoA3wKIAwoATgGIAwYA
9QWWBQYADwCEAAYAEQQKBAYAugGwBAYAxwUKBAYAeQTjBAYAaQRCBA4AigHDAw4A6wHDAw4AagEt
BAYAnwHDBAYA9ABKAAYAAQCEAAYACAYKBAYAYgMKBAYAiQSWBQYAxAAKBAoAsQOIAxIAeQX5ABIA
uwD5AAYAGQEKBAYA0AAKBAYAEgZXBAAAAABBAAAAAAABAAEAAQAQACIEHQA5AAEAAQAAABAA6gRG
BU0AAQADAAABEACNBUYFYQADAAcAAwEAALkFAABFAAQACgARABYErgARAD4BsgARAKsAtgAGBnMA
ugBWgKkFvQBWgB4BvQBQIAAAAACGACgEBgABANwgAAAAAIYYowQGAAEA5CAAAAAAgxijBAYAAQDs
IAAAAACTCHUEwQABABghAAAAAJMIJgHGAAEAHyEAAAAAkwgyAcsAAQAnIQAAAACWCM4F0QACAC4h
AAAAAIYYowQGAAIANiEAAAAAkRipBNYAAgAAAAEAQgMJAKMEAQARAKMEBgAZAKMECgApAKMEEAAx
AKMEEAA5AKMEEABBAKMEEABJAKMEEABRAKMEEABZAKMEEABhAKMEEABpAKMEBgCRAKMEBgC5AKME
FQDJAKMEBgB5AKMEBgDRAIMFJgAMAJUENQAUAOkFRADhABsGSQDpAKMAVAB5AJ8AWgDxAP8FXwD5
AIIBBgBxALEFYwABAXUFaQAJAQEEbwARATgDdgABAdoFAQBxAKMEBgCZAKMEBgAZAeIAewAZAQ4G
hAChAKMEigDBAKMEBgAIABQApAAIABgAqQApAHMAEQEuAAsA6QAuABMA8gAuABsAEQEuACMAGgEu
ACsAQwEuADMAQwEuADsAQwEuAEMAGgEuAEsASQEuAFMAQwEuAFsAYAFDAGMAqQBJAHMAEQFhAHsA
qQBjAGsAqQAbAAMAAQAEAAMAAAB5BNoAAABGAd8AAADSBeQAAgAEAAMAAgAFAAUAAQAGAAUAAgAH
AAcALwA+AASAAAABAAAAPCAlRgAAAAAAAB0AAAAEAAAAAAAAAAAAAACSAHsAAAAAAA8AAAAAAAAA
AAAAAJsAaQMAAAAABAAAAAAAAAAAAAAAkgAKBAAAAAAPAAAAAAAAAAAAAACbAFQAAAAAAAAAAAAB
AAAA9AQAAAUAAgApAFAAAAAASUVudW1lcmFibGVgMQBJRW51bWVyYXRvcmAxAFNUXzQ0YjdmZGZi
YzU2YzQ5YjM5YWI5OWQxZDM1MjExN2E2ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3Fs
U2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2Vu
ZXJpYwBBZGQAVHJpbUVuZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNDRiN2ZkZmJjNTZjNDliMzlhYjk5
ZDFkMzUyMTE3YTYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBJRW51bWVyYXRvcgBHZXRFbnVt
ZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzQ0YjdmZGZiYzU2YzQ5YjM5YWI5OWQx
ZDM1MjExN2E2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF80NGI3ZmRmYmM1NmM0OWIzOWFiOTlkMWQzNTIxMTdhNi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJs
ZXMAUmVhZExpbmVzAFNldHRpbmdzAFN5c3RlbS5Db2xsZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMA
U2NyaXB0UmVzdWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0N1cnJl
bnQAQXJyYXlMaXN0AE1vdmVOZXh0AEFycmF5AGdldF9Bc3NlbWJseQBFbXB0eQAAAAAAgMlEADoA
LwBEAGEAdABhAEQAdQBtAHAALwBTAFMASQBTAC8ARQBUAEwAXwBTAFMASQBTAF8AUwBSAEUAXwBT
AHkAbgBjAF8AMQA0ADQAXwB0AG8AXwBEAEMAUABSAEQAMwAwADQALwBFAFQATABfAFMAUwBJAFMA
XwBTAFIARQBfAFMAeQBuAGMAXwAxADQANABfAHQAbwBfAEQAQwBQAFIARAAzADAANAAvAFQAQQBC
AEwARQBfAE4AQQBNAEUAUwAuAHQAeAB0AAAnVQBzAGUAcgA6ADoAVABhAGIAbABlAE4AYQBtAGUA
XwBvAGIAagAAcVMAVABfADQANABiADcAZgBkAGYAYgBjADUANgBjADQAOQBiADMAOQBhAGIAOQA5
AGQAMQBkADMANQAyADEAMQA3AGEANgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAAACh4Shd/0elSbgKzfkF4M/6AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCgcD
Ej0VEkEBDg4IAAEVEm0BDg4FFRJtAQ4IIAAVEkEBEwAFFRJBAQ4EIAATAAYQAQAdHgADCgEDBSAB
Dh0DBCABCBwDIAACBSAAEoCBBSAAEoCFBiABEoCJHAQgAQEcCAABEoCNEYCRBSAAEoCVByACAQ4S
gJUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSUQMGElUDBhIQAgYIAwYRFAQAABJRBAAA
ElUFAAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzQ0YjdmZGZiYzU2YzQ5YjM5YWI5OWQxZDM1
MjExN2E2AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43AAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAABDAAAAAAAAAAAAAAHjAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABACVGPCAAAAEAJUY8ID8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANAA0AGIANwBmAGQAZgBiAGMANQA2AGMANAA5AGIAMwA5AGEAYgA5ADkAZAAxAGQA
MwA1ADIAMQAxADcAYQA2AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAMgA1ADIALgAxADcAOQA1ADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8ANAA0AGIANwBmAGQAZgBiAGMANQA2AGMANAA5AGIAMwA5AGEAYgA5ADkAZAAxAGQAMwA1
ADIAMQAxADcAYQA2AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA0ADQAYgA3AGYAZABmAGIAYwA1ADYAYwA0ADkAYgAzADkAYQBiADkAOQBk
ADEAZAAzADUAMgAxADEANwBhADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8ANAA0AGIANwBmAGQAZgBiAGMANQA2AGMANAA5AGIAMwA5AGEAYgA5ADkAZAAx
AGQAMwA1ADIAMQAxADcAYQA2AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADIANQAyAC4AMQA3ADkANQA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADIANQAyAC4AMQA3ADkANQA3AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{C8C06861-EC3A-427B-92B4-B27862D4C098}"
      DTS:From="Package\Get Table Names"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container - Iterate for each table name" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="168,68.6666666666667"
          Id="Package\Foreach Loop Container - Iterate for each table name\INSERT INTO SELECT to Destination Table"
          TopLeft="82.958322818701,44.8771975414684" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="353.333333333334,168.666666666667"
          Size="353.333333333334,211.333333333334"
          Id="Package\Foreach Loop Container - Iterate for each table name"
          TopLeft="719.374989280477,177.894740190532" />
        <NodeLayout
          Size="162.666666666667,42.6666666666667"
          Id="Package\Get Table Names"
          TopLeft="305.624995445833,262.736847050632" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="468.2916621125,283.815793620582">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="251.083327167978,0"
              Start="0,0"
              End="243.583327167978,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="243.583327167978,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>